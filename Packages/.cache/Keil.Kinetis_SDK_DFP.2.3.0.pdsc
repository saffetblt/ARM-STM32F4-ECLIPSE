<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.4" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Keil</vendor>
  <name>Kinetis_SDK_DFP</name>
  <description>NXP Kinetis SDK v1.2.0 including MK64FN1M0VLL12 CMSIS Device Support and Drivers</description>
  <url>http://www.keil.com/pack/</url>

  <releases>
    <release version="2.3.0" date="2017-11-17" deprecated="2017-11-17" replacement="NXP.MK64F12_DFP">
      The maintenance of this pack will be discontinued and NXP is providing new packs (NXP.MK64F12_DFP, NXP.FRDM-K64F_BSP)
      CMSIS-Driver:
      - Updated USB Host and Device driver:
      -- Added support for CMSIS-RTOS2
      -- Removed interrupt priority handling
      - Updated EMAC driver: 
      -- corrected return value of the ReadFrame function
      Pack Description:
       - Updated device vendor to NXP.
       - Updated boards description.
      Board Examples:
      - Updated USB Host examples for FRDM-K64F board.
      - Updated projects to change device vendor from Freescale to NXP.
    </release>
    <release version="2.2.0" date="2015-06-19">
      Integrates NXP Kinetis Software Development Kit (KSDK) 1.2.0 (without Examples, CMSIS-DSP and Eclipse updates)
      Updated CMSIS drivers:
      - I2C, MCI, EMAC, SAI, SPI, USART, USB Device, USB Host: Updated initialization, uninitialization and power procedures
      - SAI, SPI, USART: Corrected status bit-field race conditions
    </release>
    <release version="2.1.0" date="2015-04-27">
      CMSIS Driver:
      - Added USART
      - Added SPI
      - Added SAI
      - Updated I2C: Bus clear added
      Added documentation for FRDM-K64F Configuration
      Updated Example USB Device Mass Storage
      RTE_Device configuration file version updated to 1.1.0 (update recommended)
    </release>
    <release version="2.0.0" date="2015-03-20">
      Required PACKs: ARM.CMSIS.4.3.0.pack, Keil.MDK-Middleware.6.3.0.pack, Keil.ARM_Compiler.1.0.0.pack
      Initial version of PACK integrating NXP Kinetis Software Development Kit (KSDK) 1.1.0
      - CMSIS Driver Support
      - Examples for Freedom FRDM-K64F Development Board
      Devices Supported:
      - MK64FN1M0VLL12
    </release>
  </releases>

  <keywords>
  <!-- keywords for indexing -->
    <keyword>NXP</keyword>
    <keyword>Device Support</keyword>
    <keyword>Device Family Package NXP</keyword>
    <keyword>Kinetis</keyword>
    <keyword>K Series</keyword>
    <keyword>K6x</keyword>
  </keywords>

  <devices>
    <family Dfamily="K Series" Dvendor="NXP:11">
      <processor Dcore="Cortex-M4" DcoreVersion="r0p1"/>
      <environment name="uv">
        <CMisc>--C99</CMisc>
      </environment>
      <sequences>
        <!-- Begin: Pre-defined TraceStart Sequence -->
        <sequence name="TraceStart">
          <block>
            // Nothing required for SWO Trace
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;
            __var traceBuffer = (__traceout &amp; 0x4) != 0;
          </block>

          <control if="traceTPIU">
            <block>
              Sequence("EnableTraceTPIU");
            </block>
          </control>

        </sequence>
        <!-- End: Pre-defined TraceStart Sequence -->

        <!-- Begin: Pre-defined TraceStop Sequence -->
        <sequence name="TraceStop">
          <block>
            // Nothing required for SWO Trace
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;
            __var traceBuffer = (__traceout &amp; 0x4) != 0;
          </block>

          <!--
          <control if="traceTPIU">
            <block>
              Sequence("DisableTraceTPIU");
            </block>
          </control>
          -->

        </sequence>
        <!-- End: Pre-defined TraceStop Sequence -->

        <!-- User-defined Debug Access Sequences -->

        <!-- Begin: User-defined EnableTraceTPIU Sequence -->
        <sequence name="EnableTraceTPIU">
          <block>
            __var tracePortWidth = (__traceout &amp; 0x003F0000) &gt;&gt; 16;

            // Setup fixed TRACECLK pin
            Write32(0x40048038,(Read32(0x40048038) | 0x00002000));      // SIM_SCGC5  : Enable PORT E clock
            Write32(0x40048004,(Read32(0x40048004) | 0x00001000));      // SIM_SOPT2  : Trace Clock Source is set as "Core/system clock"
            Write32(0x4004D000, 0x00000540);  // PTE0: TraceClock, High drive strength
          </block>

          <!-- TRACEDATA[0]-->
            <block>
            Write32(0x4004D010, 0x00000540);  // PTE4: TRACED0   , High drive strength
            </block>


          <control if="tracePortWidth &gt;= 2">
            <!-- TRACEDATA[1]-->
              <block>
                Write32(0x4004D00C, 0x00000540);  // PTE3: TRACED1   , High drive strength
              </block>
          </control>

          <control if="tracePortWidth &gt;= 4">
            <!-- TRACEDATA[2]-->
              <block>
               Write32(0x4004D008, 0x00000540);  // PTE2: TRACED2   , High drive strength
              </block>

            <!-- TRACEDATA[3]-->
              <block>
               Write32(0x4004D004, 0x00000540);  // PTE1: TRACED3   , High drive strength
              </block>
          </control>
        </sequence>
      </sequences>
      <!-- End: User-defined EnableTraceTPIU Sequence -->

      <!-- ******************************  Subfamily 'K6x'  ****************************** -->
      <subFamily DsubFamily="K6x Ethernet Crypto MCUs">
        <description>
The Kinetis K6x MCUs are pin-peripheral and software-compatible with many of the Kinetis K series MCU families,
offering IEEE 1588 Ethernet and full and high-speed USB 2.0 On-The-Go, including options with USB crystal-less functionality.
Devices start from 256 KB of flash in 100 QFP packages extending up to 1 MB flash and 256 KB SRAM in a 256 MAPBGA package.
These devices offer various levels of integration, with a rich suite of analog, communication, timing and control peripherals.
Next-generation Kinetis K6x MCUs are further optimized for performance and power consumption and offer more streamlined
integration for further BOM cost reductions.
        </description>

        <!-- ******************************  Device 'MK64FN1M0VLL12'  ****************************** -->
        <device Dname="MK64FN1M0VLL12">
          <processor Dfpu="1" Dmpu="0" Dendian="Little-endian" Dclock="120000000"/>
          <compile header="platform/devices/fsl_device_registers.h" define="CPU_MK64FN1M0VLL12"/>
          <memory id="IROM1" start="0x00000000" size="0x100000" startup="1" default="1"/>
          <memory id="IRAM1" start="0x20000000" size="0x30000"  init   ="0" default="1"/>
          <memory id="IRAM2" start="0x1FFF0000" size="0x10000"  init   ="0" default="0"/>
          <algorithm name="addon_cmsis/Flash/MK_P1M0.FLM"
                             start="0x00000000" size="0x100000"             default="1"/>
          <debug  svd="platform/devices/MK64F12/MK64F12.svd"/>

          <book name="http://cache.nxp.com/files/microcontrollers/doc/ref_manual/K64P144M120SF5RM.pdf?fasp=1" title="K64 Sub-Family Reference Manual"/>
          <book name="http://cache.nxp.com/files/microcontrollers/doc/data_sheet/K64P144M120SF5.pdf?fasp=1"   title="K64F Sub-Family Data Sheet"/>

          <feature type="ExtBus"       n="32"                      name="External Bus Interface"/>
          <feature type="UART"         n="5"                       name="Universal Asynchronous Receiver/Transmitter"/>
          <feature type="SPI"          n="3"                       name="Serial Peripheral Interface"/>
          <feature type="I2C"          n="3"                       name="Inter-Integrated Circuit"/>
          <feature type="I2S"          n="1"                       name="Integrated Interchip Sound"/>
          <feature type="USBOTG"       n="1"                       name="Universal Serial Bus Full Speed OTG"/>
          <feature type="CAN"          n="1"                       name="CAN"/>
          <feature type="ETH"          n="1"        m="100000000"  name="10/100-Mbps Ethernet MAC"/>
          <feature type="ADC"          n="2"        m="16"         name="ADC"/>
          <feature type="DAC"          n="2"        m="12"         name="DAC"/>
          <feature type="PWM"          n="20"       m="16"         name="Pulse Width Modulation"/>
          <feature type="Timer"        n="21"       m="16"         name="16-bit Timer"/>
          <feature type="Timer"        n="4"        m="32"         name="32-bit Timer"/>
          <feature type="AnalogOther"  n="1"                       name="Comparator"/>
          <feature type="AnalogOther"  n="1"                       name="Voltage Reference"/>
          <feature type="Crypto"       n="128.256"                 name="Cryptographic Acceleration Unit"/>
          <feature type="RNG"                                      name="Random Number Generator"/>
          <feature type="CoreOther"    n="1"                       name="Cyclic Redundancy Check"/>
          <feature type="VCC"          n="1.71"     m="3.6"/>
          <feature type="Temp"         n="-40"      m="105"/>

        </device>
      </subFamily>
    </family>
  </devices>

  <conditions>
    <!-- conditions are dependency rules that can apply to a component or an individual file -->
    <condition id="K64FN1M0">            <!-- one condition for each device -->
      <description>NXP Kinetis K64F 1MB devices</description>
      <accept Dvendor="NXP:11" Dname="MK64FN1M0VLL12"/>
    </condition>

    <condition id="K64F12">              <!-- one condition for each device group with same coreclock -->
      <description>NXP Kinetis K64F 120MHz devices</description>
      <accept condition="K64FN1M0"/>
      <!--accept condition="next device with same coreclock"/-->
    </condition>

    <condition id="Kinetis_K64F">        <!-- one condition for device subfamily -->
      <description>NXP Kinetis K64F device and CMSIS-CORE</description>
      <accept condition="K64F12"/>
       <!--accept condition="next devices group within same subfamily"/-->
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="Kinetis">             <!-- one condition for all devices in this pack -->
      <description>NXP Kinetis device and CMSIS-CORE</description>
      <accept condition="Kinetis_K64F"/>
      <!--accept condition="next subfamily"/-->
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="Kinetis Unknown">
      <description>NXP Kinetis unknown device and CMSIS-CORE</description>
      <require Dvendor="NXP:11" Dname="MKxxx"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="Kinetis_ARMCC">
      <description>NXP Kinetis and the ARM compiler</description>
      <require condition="Kinetis"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="Kinetis_GCC">
      <description>NXP Kinetis and the GCC compiler</description>
      <require condition="Kinetis"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="Kinetis_IAR">
      <description>NXP Kinetis and the IAR compiler</description>
      <require condition="Kinetis"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="Kinetis HAL_RTC">
      <description>NXP Kinetis HAL RTC dependency</description>
      <require condition="Kinetis"/>
      <accept Cclass="Device" Cgroup="KSDK HAL" Csub="MCG"/>
      <accept Cclass="Device" Cgroup="KSDK HAL" Csub="MCG_Lite"/>
    </condition>

    <condition id="Kinetis DRV_ADC16">
      <description>NXP Kinetis Driver ADC16 dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="ADC16"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_AOI">
      <description>NXP Kinetis Driver AOI dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="AOI"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
    </condition>
    <condition id="Kinetis DRV_CADC">
      <description>NXP Kinetis Driver CADC dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="CADC"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_CMP">
      <description>NXP Kinetis Driver CMP dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="CMP"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_COP">
      <description>NXP Kinetis Driver COP dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="COP"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_CRC">
      <description>NXP Kinetis Driver CRC dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="CRC"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
    </condition>
    <condition id="Kinetis DRV_DAC">
      <description>NXP Kinetis Driver DAC dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="DAC"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_DMA">
      <description>NXP Kinetis Driver DMA dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="DMA"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="DMAMUX"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_DSPI_IRQ">
      <description>NXP Kinetis Driver DSPI IRQ dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="DSPI"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_DSPI_DMA">
      <description>NXP Kinetis Driver DSPI DMA dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="DSPI"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis DRV_EDMA">
      <description>NXP Kinetis Driver eDMA dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="eDMA"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="DMAMUX"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_ENC">
      <description>NXP Kinetis Driver ENC dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="ENC"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_ENET">
      <description>NXP Kinetis Driver ENET dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="ENET"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_EWM">
      <description>NXP Kinetis Driver EWM dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="EWM"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_FLEXBUS">
      <description>NXP Kinetis Driver FLEXBUS dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="FLEXBUS"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
    </condition>
    <condition id="Kinetis DRV_FlexCAN">
      <description>NXP Kinetis Driver FlexCAN dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="FlexCAN"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_FLEXIO">
      <description>NXP Kinetis Driver FLEXIO dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="FLEXIO"/>
    </condition>
    <condition id="Kinetis DRV_FLEXIO_I2C">
      <description>NXP Kinetis Driver FLEXIO I2C dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="FLEXIO_I2C"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="DMA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis DRV_FLEXIO_I2S">
      <description>NXP Kinetis Driver FLEXIO I2S dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="FLEXIO_I2S"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="DMA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis DRV_FLEXIO_SPI">
      <description>NXP Kinetis Driver FLEXIO SPI dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="FLEXIO_SPI"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="DMA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis DRV_FLEXIO_UART_IRQ">
      <description>NXP Kinetis Driver FLEXIO UART IRQ dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="FLEXIO_UART"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_FLEXIO_UART_DMA">
      <description>NXP Kinetis Driver FLEXIO UART DMA dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="FLEXIO_UART"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="DMA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis DRV_FTM">
      <description>NXP Kinetis Driver FTM dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="FTM"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_GPIO">
      <description>NXP Kinetis Driver GPIO dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="GPIO"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="PORT"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_I2C">
      <description>NXP Kinetis Driver I2C dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="I2C"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_LMEM">
      <description>NXP Kinetis Driver LMEM dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="LMEM"/>
    </condition>
    <condition id="Kinetis DRV_LPSCI_IRQ">
      <description>NXP Kinetis Driver LPSCI IRQ dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="LPSCI"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="LPTMR"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SIM"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_LPSCI_DMA">
      <description>NXP Kinetis Driver LPSCI DMA dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="LPSCI"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="LPTMR"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SIM"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="DMA"/>
    </condition>
    <condition id="Kinetis DRV_LPTMR">
      <description>NXP Kinetis Driver LPTMR dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="LPTMR"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SIM"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_LPUART_IRQ">
      <description>NXP Kinetis Driver LPUART IRQ dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="LPUART"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_LPUART_DMA">
      <description>NXP Kinetis Driver LPUART DMA dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="LPUART"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="DMA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis DRV_MPU">
      <description>NXP Kinetis Driver MPU dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="MPU"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_PDB">
      <description>NXP Kinetis Driver PDB dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="PDB"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_PIT">
      <description>NXP Kinetis Driver PIT dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="PIT"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_PWM">
      <description>NXP Kinetis Driver PWM dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="PWM"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_RNGA">
      <description>NXP Kinetis Driver RNGA dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="RNGA"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_RTC">
      <description>NXP Kinetis Driver RTC dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="RTC"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_SAI">
      <description>NXP Kinetis Driver SAI dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SAI"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="DMA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis DRV_SDHC">
      <description>NXP Kinetis Driver SDHC dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SDHC"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_SPI_IRQ">
      <description>NXP Kinetis Driver SPI IRQ dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SPI"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_SPI_DMA">
      <description>NXP Kinetis Driver SPI DMA dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SPI"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="DMA"/>
    </condition>
    <condition id="Kinetis DRV_TPM">
      <description>NXP Kinetis Driver TPM dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="TPM"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_TSI">
      <description>NXP Kinetis Driver TSI dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="TSI"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_UART_IRQ">
      <description>NXP Kinetis Driver UART IRQ dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="UART"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis DRV_UART_DMA">
      <description>NXP Kinetis Driver UART DMA dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="UART"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="DMA"/>
      <accept  Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis DRV_VREF">
      <description>NXP Kinetis Driver VREF dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="VREF"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
    </condition>
    <condition id="Kinetis DRV_WDOG">
      <description>NXP Kinetis Driver WDOG dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="WDOG"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SIM"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>
    <condition id="Kinetis DRV_XBAR">
      <description>NXP Kinetis Driver XBAR dependency</description>
      <require condition="Kinetis Unknown"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="XBAR"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>

    <condition id="Kinetis_K64F12 SYS_Clock">
      <description>NXP Kinetis K64F12 System Clock dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SIM"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <!-- K64F12 specifics -->
      <require condition="K64F12"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="MCG"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="OSC"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="RTC"/>
    </condition>
    <condition id="Kinetis SYS_HwTimer">
      <description>NXP Kinetis System HW Timer dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
    </condition>
    <condition id="Kinetis SYS_HwTimer_PIT">
      <description>NXP Kinetis System HW Timer PIT dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="PIT"/>
    </condition>
    <condition id="Kinetis SYS_HwTimer_SysTick">
      <description>NXP Kinetis System HW Timer SysTick dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
    </condition>
    <condition id="Kinetis SYS_Power">
      <description>NXP Kinetis System Power dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="LLWU"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="PMC"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="RCM"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SMC"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SIM"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="GPIO"/>
    </condition>

    <condition id="Kinetis OSA_BM">
      <description>NXP Kinetis OSA Bare Metal dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="LPTMR"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Interrupt"/>
    </condition>

    <condition id="Kinetis_K64F12 Utility_DebugConsole">
      <description>NXP Kinetis K64F12 Utility Debug Console dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK OSA"    Csub="OSA"/>
      <!-- K64F12 specifics -->
      <require condition="K64F12"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="UART"/>
    </condition>
    <condition id="Kinetis Utility_Misc">
      <description>NXP Kinetis K64F12 Utility Misc dependency</description>
      <require condition="Kinetis"/>
      <require Cclass="Device" Cgroup="KSDK Utility" Csub="Debug Console"/>
    </condition>

    <condition id="Kinetis TWR-K64F120M">
      <description>NXP Kinetis FRDM-K64F dependency</description>
      <require condition="K64F12"/>
      <require Cclass="Device" Cgroup="KSDK HAL"     Csub="MCG"/>
      <require Cclass="Device" Cgroup="KSDK HAL"     Csub="PORT"/>
      <require Cclass="Device" Cgroup="KSDK HAL"     Csub="SIM"/>
      <require Cclass="Device" Cgroup="KSDK System"  Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK Utility" Csub="Debug Console"/>
      <require Cclass="Device" Cgroup="KSDK Driver"  Csub="GPIO"/>
    </condition>
    <condition id="Kinetis TWR-K64F120M BSP">
      <description>NXP Kinetis FRDM-K64F BSP dependency</description>
      <require condition="K64F12"/>
      <require Cclass="Device" Cgroup="KSDK Configuration" Csub="TWR-K64F120M"/>
    </condition>
    <condition id="Kinetis TWR-K64F120M BSP I2C">
      <description>NXP Kinetis FRDM-K64F BSP with CMSIS I2C Driver dependency</description>
      <require condition="K64F12"/>
      <require Cclass="Device" Cgroup="KSDK Configuration" Csub="TWR-K64F120M"/>
      <require Cclass="CMSIS Driver" Cgroup="I2C"/>
    </condition>
    
    <condition id="Kinetis FRDM-K64F">
      <description>NXP Kinetis FRDM-K64F dependency</description>
      <require condition="K64F12"/>
      <require Cclass="Device" Cgroup="KSDK HAL"     Csub="MCG"/>
      <require Cclass="Device" Cgroup="KSDK HAL"     Csub="PORT"/>
      <require Cclass="Device" Cgroup="KSDK HAL"     Csub="SIM"/>
      <require Cclass="Device" Cgroup="KSDK System"  Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK Utility" Csub="Debug Console"/>
      <require Cclass="Device" Cgroup="KSDK Driver"  Csub="GPIO"/>
    </condition>
    <condition id="Kinetis FRDM-K64F BSP">
      <description>NXP Kinetis FRDM-K64F BSP dependency</description>
      <require condition="K64F12"/>
      <require Cclass="Device" Cgroup="KSDK Configuration" Csub="FRDM-K64F"/>
    </condition>
    <condition id="Kinetis FRDM-K64F BSP I2C">
      <description>NXP Kinetis FRDM-K64F BSP with CMSIS I2C Driver dependency</description>
      <require condition="K64F12"/>
      <require Cclass="Device" Cgroup="KSDK Configuration" Csub="FRDM-K64F"/>
      <require Cclass="CMSIS Driver" Cgroup="I2C"/>
    </condition>

    <condition id="Kinetis_K64F CMSIS_Driver ETH_MAC">
      <description>NXP Kinetis K64F CMSIS ETH_MAC Driver dependency</description>
      <require condition="Kinetis_K64F"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="ENET"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="OSC"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SIM"/>
    </condition>
    <condition id="Kinetis_K64F CMSIS_Driver I2C">
      <description>NXP Kinetis K64F CMSIS I2C Driver dependency</description>
      <require condition="Kinetis_K64F"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="I2C"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="GPIO"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="PORT"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis_K64F CMSIS_Driver SPI">
      <description>NXP Kinetis K64F CMSIS SPI Driver dependency</description>
      <require condition="Kinetis_K64F"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="DSPI"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="GPIO"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="PORT"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
    </condition>
    <condition id="Kinetis_K64F CMSIS_Driver USART">
      <description>NXP Kinetis K64F CMSIS USART Driver dependency</description>
      <require condition="Kinetis_K64F"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="UART"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis_K64F CMSIS_Driver SAI">
      <description>NXP Kinetis K64F CMSIS SAI Driver dependency</description>
      <require condition="Kinetis_K64F"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SAI"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="Kinetis_K64F CMSIS_Driver MCI">
      <description>NXP Kinetis K64F CMSIS MCI Driver dependency</description>
      <require condition="Kinetis_K64F"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="GPIO"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="PORT"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SIM"/>
      <require Cclass="Device" Cgroup="KSDK HAL"    Csub="SDHC"/>
      <require Cclass="Device" Cgroup="KSDK System" Csub="Clock"/>
    </condition>
    <condition id="Kinetis_K64F CMSIS_Driver USB">
      <description>NXP Kinetis K64F CMSIS USB Driver dependency</description>
      <require condition="Kinetis_K64F"/>
      <accept Cclass="CMSIS" Cgroup="RTOS"/>
      <accept Cclass="CMSIS" Cgroup="RTOS2"/>
      <require Cclass="Device" Cgroup="KSDK Driver" Csub="GPIO"/>
    </condition>
  </conditions>

  <taxonomy>
    <description Cclass="Device" Cgroup="KSDK HAL">Kinetis SDK Hardware Abstraction Layer (HAL)</description>
    <description Cclass="Device" Cgroup="KSDK Driver">Kinetis SDK Peripheral Drivers</description>
    <description Cclass="Device" Cgroup="KSDK System">Kinetis SDK System Drivers</description>
    <description Cclass="Device" Cgroup="KSDK OSA" doc="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__os__abstraction.html">Kinetis SDK OS Abstraction Layer (OSA)</description>
    <description Cclass="Device" Cgroup="KSDK Utility">Kinetis SDK Utilities</description>
    <description Cclass="Board Support" Cgroup="Drivers">Kinetis BSP Drivers</description>
  </taxonomy>

  <apis>
    <api Cclass="Device" Cgroup="KSDK Configuration" exclusive="1">
      <description>Kinetis SDK Framework Configuration</description>
      <files>
        <file category="doc" name="doc/Getting Started with Kinetis SDK (KSDK) v.1.2.pdf"/>
      </files>
    </api>
  </apis>
  <boards>  
    <board name="FRDM-K64F" vendor="NXP" revision="Rev. A" salesContact="http://www.nxp.com/support/sales-and-support:SUPPORTHOME">
      <mountedDevice    deviceIndex="0" Dvendor="NXP:11" Dname="MK64FN1M0VLL12"/>
      <compatibleDevice deviceIndex="0" Dvendor="NXP:11" Dname="MK64FX512xxx12"/>
      <image small="addon_mdk/Boards/NXP/FRDM-K64F/Documents/FRDM-K64F_small.png"
             large="addon_mdk/Boards/NXP/FRDM-K64F/Documents/FRDM-K64F_large.png"/>
      <description>
        The FRDM-K64F is a development board for the Kinetis K24, K63 and K64 120 MHz 32-bit ARM® Cortex™-M4 MCUs.
        It features the Kinetis MK64FN1M0VMD12 low-power MCU with 1MB Flash, 256 KB SRAM, USB USB and Ethernet MAC.
      </description>
      <book category="overview"  name="http://www.nxp.com/products/software-and-tools/hardware-development-tools/freedom-development-boards/freedom-development-platform-for-kinetis-k64-k63-and-k24-mcus:FRDM-K64F" title="FRDM-K64F Web Page"/>
      <book category="setup"     name="addon_mdk/Boards/NXP/FRDM-K64F/Documents/FRDMK64QSG.pdf" title="Quick Start Guide"/>
      <book category="schematic" name="addon_mdk/Boards/NXP/FRDM-K64F/Documents/FRDM-K64F_SCH.pdf" title="FRDM-K64F Schematics"/>
      <book category="manual"    name="addon_mdk/Boards/NXP/FRDM-K64F/Documents/FRDMK64FUG.pdf" title="User Manual"/>
      <feature type="ODbg"          n="1"              name="Onboard open-standard serial and debug adaptor (OpenSDA)"/>
      <feature type="PWR"           n="5"              name="USB Powered"/>
      <feature type="MemCard"       n="1"              name="Micro SD Card holder"/>
      <feature type="USB"           n="1"              name="Micro-AB USB connector"/>
      <feature type="USB"           n="1"              name="OpenSDAv2 Micro USB connector"/>
      <feature type="ETH"           n="1"              name="10/100 Ethernet Port"/>
      <feature type="Button"        n="3"/>
      <feature type="Accelerometer" n="1"              name="NXP FXOS8700CQ low-power, six-axis Xtrinsic sensor"/>
      <feature type="DIO"           n="8"              name="nRF24L01+ Nordic 2.4G Radio module expansion pins"/>
      <feature type="DIO"           n="4"              name="JY-MCU BT board V1.05 BT module expansion pins"/>
      <feature type="DIO"           n="33"             name="Digital IOs"/>
      <feature type="AIO"           n="9"              name="Analog IOs"/>
      <feature type="LED"           n="1"              name="RGB LED"/>
      <debugInterface adapter="JTAG/SW" connector="10 pin Cortex debug (0.05 inch connector)"/>
      <debugInterface adapter="JTAG/SW" connector="SDA 10 pin Cortex debug (0.05 inch connector)"/>
    </board>
  </boards>

  <examples>
    <!-- Freedom FRDM-K64F Development Board -->
    <example name="CMSIS-RTOS Blinky" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Blinky">
      <description>CMSIS-RTOS Blinky example</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <category>Getting Started</category>
        <category>CMSIS-RTX</category>
      </attributes>
    </example>

    <example name="USB Device HID" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/USB/Device/HID" version="1.0.0">
      <description>USB Human Interface Device providing access from PC to board LEDs and push buttons.</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="HID.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Device" Csub="HID"/>
        <category>Middleware</category>
        <category>USB Device</category>
        <keyword>HID</keyword>
      </attributes>
    </example>

    <example name="USB Device Mass Storage" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/USB/Device/MassStorage" version="1.0.0">
      <description>USB Mass Storage Device using SD/MMC Memory Card or RAM as storage media</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="MassStorage.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Device" Csub="MSC"/>
        <category>Middleware</category>
        <category>USB Device</category>
        <keyword>Memory Disk</keyword>
      </attributes>
    </example>

    <example name="USB Host Mass Storage" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/USB/Host/MassStorage" version="1.0.0">
      <description>USB Host file manipulation example: create, read, copy, delete files from USB Mass Storage Device and format storage device</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="MassStorage.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Host" Csub="MSC"/>
        <category>Middleware</category>
        <category>USB Host</category>
        <keyword>Memory Disk</keyword>
      </attributes>
    </example>

    <example name="USB Host Keyboard" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/USB/Host/Keyboard" version="1.0.0">
      <description>Measure example using USB HID Keyboard as input device</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="Keyboard.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Host" Csub="HID"/>
        <category>Middleware</category>
        <category>USB Host</category>
        <keyword>Keyboard</keyword>
      </attributes>
    </example>

    <example name="File System Demo" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/FileSystem/File_Demo" version="1.0.0">
      <description>File manipulation example: create, read, copy, delete files on any enabled drive (SD/MMC Card, NOR/NAND Flash, RAM) and format each drive</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="File_Demo.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="File System" Cgroup="Drive"/>
        <category>Middleware</category>
        <category>File System</category>
        <keyword>SD/MMC Card</keyword>
      </attributes>
    </example>

    <example name="BSD Client" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/Network/BSD_Client" version="1.0.0">
      <description>Example using BSD sockets to send commands to remote server</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="BSD_Client.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Socket" Csub="BSD"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>BSD</keyword>
      </attributes>
    </example>

    <example name="BSD Server" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/Network/BSD_Server" version="1.0.0">
      <description>Example using BSD sockets to accept commands from remote clients</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="BSD_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Socket" Csub="BSD"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>BSD</keyword>
      </attributes>
    </example>

    <example name="FTP Server" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/Network/FTP_Server" version="1.0.0">
      <description>File Server using FTP protocol with SD/MMC Memory Card as storage media</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="FTP_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="FTP Server"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>FTP</keyword>
      </attributes>
    </example>

    <example name="HTTP Server" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/Network/HTTP_Server" version="1.0.0">
      <description>Compact Web Server with CGI interface</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="HTTP_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="Web Server Compact"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>Web Server</keyword>
        <keyword>HTTP</keyword>
      </attributes>
    </example>

    <example name="SNMP Agent" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/Network/SNMP_Agent" version="1.0.0">
      <description>Example showing how to use a Simple Network Management Protocol (SNMP)</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="SNMP_Agent.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="SNMP Agent"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>SNMP</keyword>
      </attributes>
    </example>

    <example name="Telnet Server" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/FRDM-K64F/Middleware/Network/Telnet_Server" version="1.0.0">
      <description>Command-line Host service example using Telnet protocol</description>
      <board name="FRDM-K64F" vendor="NXP"/>
      <project>
        <environment name="uv" load="Telnet_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="Telnet Server"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>Telnet</keyword>
      </attributes>
    </example>
  </examples>

  <components>
    <component Cclass="Device" Cgroup="Startup" Cversion="2.8" condition="Kinetis_ARMCC">
      <description>System Startup for NXP Kinetis Series</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_DEVICE_STARTUP_KINETIS      /* Device Startup for Kinetis Series */
      </RTE_Components_h>
      <files>
        <!-- include folders -->
        <file category="include" name="platform/devices/"/>

        <!-- startup files -->
        <file category="source" name="platform/devices/startup.c"/>
        <file category="source" name="platform/devices/MK64F12/startup/arm/startup_MK64F12.s" attr="config" version="2.8" condition="K64F12"/>

        <!-- system files -->
        <file category="header" name="platform/devices/MK64F12/startup/system_MK64F12.h" attr="config" version="2.8" condition="K64F12"/>
        <file category="source" name="platform/devices/MK64F12/startup/system_MK64F12.c" attr="config" version="2.8" condition="K64F12"/>

        <!-- linker scripts -->
    <!--<file category="linkerScript" name="platform/devices/MK64F12/linker/arm/MK64FX512xxx12_flash.scf" attr="config" version="2.8" condition="K64FX512"/>-->
    <!--<file category="linkerScript" name="platform/devices/MK64F12/linker/arm/MK64FX512xxx12_ram.scf"   attr="config" version="2.8" condition="K64FX512"/>-->
        <file category="linkerScript" name="platform/devices/MK64F12/linker/arm/MK64FN1M0xxx12_flash.scf" attr="config" version="2.8" condition="K64FN1M0"/>
        <file category="linkerScript" name="platform/devices/MK64F12/linker/arm/MK64FN1M0xxx12_ram.scf"   attr="config" version="2.8" condition="K64FN1M0"/>

        <!-- device configurations required by drivers at the moment -->
        <file category="header" name="addon_cmsis/Driver/MK64F/Config/RTE_Device.h" attr="config" version="1.1.0" condition="K64F12"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup" Cversion="2.8" condition="Kinetis_GCC">
      <description>System Startup for NXP Kinetis Series</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_DEVICE_STARTUP_KINETIS      /* Device Startup for Kinetis Series */
      </RTE_Components_h>
      <files>
        <!-- include folders -->
        <file category="include" name="platform/devices/"/>

        <!-- startup files -->
        <file category="source" name="platform/devices/startup.c"/>
        <file category="source" name="platform/devices/MK64F12/startup/gcc/startup_MK64F12.S" attr="config" version="2.8" condition="K64F12"/>

        <!-- system files -->
        <file category="header" name="platform/devices/MK64F12/startup/system_MK64F12.h" attr="config" version="2.8" condition="K64F12"/>
        <file category="source" name="platform/devices/MK64F12/startup/system_MK64F12.c" attr="config" version="2.8" condition="K64F12"/>

        <!-- linker scripts -->
    <!--<file category="linkerScript" name="platform/devices/MK64F12/linker/gcc/MK64FX512xxx12_flash.ld"  attr="config" version="2.8" condition="K64FX512">/-->
    <!--<file category="linkerScript" name="platform/devices/MK64F12/linker/gcc/MK64FX512xxx12_ram.ld"    attr="config" version="2.8" condition="K64FX512">/-->
        <file category="linkerScript" name="platform/devices/MK64F12/linker/gcc/MK64FN1M0xxx12_flash.ld"  attr="config" version="2.8" condition="K64FN1M0"/>
        <file category="linkerScript" name="platform/devices/MK64F12/linker/gcc/MK64FN1M0xxx12_ram.ld"    attr="config" version="2.8" condition="K64FN1M0"/>
        </files>
    </component>
    <component Cclass="Device" Cgroup="Startup" Cversion="2.8" condition="Kinetis_IAR">
      <description>System Startup for NXP Kinetis Series</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_DEVICE_STARTUP_KINETIS      /* Device Startup for Kinetis Series */
      </RTE_Components_h>
      <files>
        <!-- include folders -->
        <file category="include" name="platform/devices/"/>

        <!-- startup files -->
        <file category="source" name="platform/devices/startup.c"/>
        <file category="source" name="platform/devices/MK64F12/startup/iar/startup_MK64F12.s" attr="config" version="2.8" condition="K64F12"/>

        <!-- system files -->
        <file category="header" name="platform/devices/MK64F12/startup/system_MK64F12.h" attr="config" version="2.8" condition="K64F12"/>
        <file category="source" name="platform/devices/MK64F12/startup/system_MK64F12.c" attr="config" version="2.8" condition="K64F12"/>

        <!-- linker scripts -->
    <!--<file category="linkerScript" name="platform/devices/MK64F12/linker/iar/MK64FX512xxx12_flash.icf" attr="config" version="2.8" condition="K64FX512">/-->
    <!--<file category="linkerScript" name="platform/devices/MK64F12/linker/iar/MK64FX512xxx12_ram.icf"   attr="config" version="2.8" condition="K64FX512">/-->
        <file category="linkerScript" name="platform/devices/MK64F12/linker/iar/MK64FN1M0xxx12_flash.icf" attr="config" version="2.8" condition="K64FN1M0"/>
        <file category="linkerScript" name="platform/devices/MK64F12/linker/iar/MK64FN1M0xxx12_ram.icf"   attr="config" version="2.8" condition="K64FN1M0"/>
        </files>
    </component>

    <!-- KSDK Configuration -->
    <component Cclass="Device" Cgroup="KSDK Configuration" Csub="FRDM-K64F" Capiversion="1.0" Cversion="1.2.0" condition="Kinetis FRDM-K64F">
      <description>Configuration for NXP FRDM-K64F Development Board</description>
      <RTE_Components_h>
        #define RTE_DEVICE_CONFIGURATION_FRDM_K64F
      </RTE_Components_h>
      <files>
        <file category="doc"    name="addon_mdk/Boards/NXP/FRDM-K64F/Documents/FRDM-K64F_SDK_BSP.pdf"/>
        <file category="header" name="examples/frdmk64f/board.h"/>
        <file category="source" name="examples/frdmk64f/board.c"/>
        <file category="source" name="examples/frdmk64f/hardware_init.c" attr="config"/>
        <file category="source" name="examples/frdmk64f/gpio_pins.c"/>
        <file category="source" name="examples/frdmk64f/pin_mux.c"/>
      </files>
    </component>

    <component Cclass="Device" Cgroup="KSDK Configuration" Csub="TWR-K64F120M" Capiversion="1.0" Cversion="1.2.0" condition="Kinetis TWR-K64F120M">
      <description>Configuration for NXP TWR-K64F120M Development Board</description>
      <RTE_Components_h>
        #define RTE_DEVICE_CONFIGURATION_TWR_K64F120M
      </RTE_Components_h>
      <files>
        <!--<file category="doc"    name="addon_mdk/Documents/FRDM-K64F_SDK_BSP.pdf"/>-->
        <file category="header" name="examples/twrk64f120m/board.h"/>
        <file category="source" name="examples/twrk64f120m/board.c"/>
        <file category="source" name="examples/twrk64f120m/hardware_init.c" attr="config"/>
        <file category="source" name="examples/twrk64f120m/gpio_pins.c"/>
        <file category="source" name="examples/twrk64f120m/pin_mux.c"/>
      </files>
    </component>

    <!-- KSDK HAL -->
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="ADC16" Cversion="1.2.0" condition="Kinetis">
      <description>16-bit SAR Analog-to-digital converter (ADC16)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ADC16
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__adc16__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_adc16_hal.h"/>
        <file category="source" name="platform/hal/src/adc16/fsl_adc16_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="AOI" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Crossbar AND/OR/INVERT (AOI) Module</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_AOI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__aoi__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_aoi_hal.h"/>
        <file category="source" name="platform/hal/src/aoi/fsl_aoi_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="CADC" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>12-bit Cyclic Analog-to-Digital Converter (CADC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CADC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__cadc__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_cadc_hal.h"/>
        <file category="source" name="platform/hal/src/cyclicAdc/fsl_cadc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="CMP" Cversion="1.2.0" condition="Kinetis">
      <description>Comparator (CMP)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CMP
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__cmp__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_cmp_hal.h"/>
        <file category="source" name="platform/hal/src/cmp/fsl_cmp_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="COP" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Computer Operating Properly (COP) Watchdog Timer</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_COP
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__cop__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_cop_hal.h"/>
        <file category="source" name="platform/hal/src/cop/fsl_cop_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="CRC" Cversion="1.2.0" condition="Kinetis">
      <description>Cyclic Redundancy Check (CRC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CRC
      </RTE_Components_h>
      <files>
    <!--<file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__crc__hal.html"/>-->
        <file category="header" name="platform/hal/inc/fsl_crc_hal.h"/>
        <file category="source" name="platform/hal/src/crc/fsl_crc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="DAC" Cversion="1.2.0" condition="Kinetis">
      <description>Digital-to-Analog Converter (DAC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DAC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__dac__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_dac_hal.h"/>
        <file category="source" name="platform/hal/src/dac/fsl_dac_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="DMA" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Direct Memory Access (DMA)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__dma__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_dma_hal.h"/>
        <file category="source" name="platform/hal/src/dma/fsl_dma_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="DMAMUX" Cversion="1.2.0" condition="Kinetis">
      <description>Direct Memory Access Multiplexer (DMAMUX)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DMAMUX
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__dmamux__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_dmamux_hal.h"/>
        <file category="source" name="platform/hal/src/dmamux/fsl_dmamux_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="DSPI" Cversion="1.2.0" condition="Kinetis">
      <description>Serial Peripheral Interface (DSPI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DSPI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__dspi__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_dspi_hal.h"/>
        <file category="source" name="platform/hal/src/dspi/fsl_dspi_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="eDMA" Cversion="1.2.0" condition="Kinetis">
      <description>Enhanced Direct Memory Access (eDMA)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_EDMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__edma__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_edma_hal.h"/>
        <file category="source" name="platform/hal/src/edma/fsl_edma_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="ENC" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Quadrature Encoder/Decoder (ENC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ENC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__enc__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_enc_hal.h"/>
        <file category="source" name="platform/hal/src/enc/fsl_enc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="ENET" Cversion="1.2.0" condition="Kinetis">
      <description>Ethernet MAC (ENET)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ENET
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__enet__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_enet_hal.h"/>
        <file category="source" name="platform/hal/src/enet/fsl_enet_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="EWM" Cversion="1.2.0" condition="Kinetis">
      <description>External Watchdog Timer (EWM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_EWM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__ewm__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_ewm_hal.h"/>
        <file category="source" name="platform/hal/src/ewm/fsl_ewm_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="FLEXBUS" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>External Bus Interface (FLEXBUS)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLEXBUS
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexbus__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_flexbus_hal.h"/>
        <file category="source" name="platform/hal/src/flexbus/fsl_flexbus_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="FlexCAN" Cversion="1.2.0" condition="Kinetis">
      <description>Controller Area Network (FlexCAN)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLEXCAN
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexcan__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_flexcan_hal.h"/>
        <file category="source" name="platform/hal/src/flexcan/fsl_flexcan_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="FLEXIO" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>FlexIO (FLEXIO)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLEXIO
      </RTE_Components_h>
      <files>
    <!--<file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__hal.html"/>-->
        <file category="header" name="platform/hal/inc/fsl_flexio_hal.h"/>
        <file category="source" name="platform/hal/src/flexio/fsl_flexio_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="FLEXIO_I2C" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>FlexIO I2C (FLEXIO_I2C)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLEXIO_I2C
      </RTE_Components_h>
      <files>
    <!--<file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__i2c__hal.html"/>-->
        <file category="header" name="platform/hal/inc/fsl_flexio_i2c_hal.h"/>
        <file category="source" name="platform/hal/src/flexio/fsl_flexio_i2c_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="FLEXIO_I2S" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>FlexIO I2S (FLEXIO_I2S)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLEXIO_I2S
      </RTE_Components_h>
      <files>
    <!--<file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__i2s__hal.html"/>-->
        <file category="header" name="platform/hal/inc/fsl_flexio_i2s_hal.h"/>
        <file category="source" name="platform/hal/src/flexio/fsl_flexio_i2s_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="FLEXIO_SPI" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>FlexIO SPI (FLEXIO_SPI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLEXIO_SPI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__spi__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_flexio_spi_hal.h"/>
        <file category="source" name="platform/hal/src/flexio/fsl_flexio_spi_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="FLEXIO_UART" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>FlexIO UART (FLEXIO_UART)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLEXIO_UART
      </RTE_Components_h>
      <files>
    <!--<file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__uart__hal.html"/>-->
        <file category="header" name="platform/hal/inc/fsl_flexio_uart_hal.h"/>
        <file category="source" name="platform/hal/src/flexio/fsl_flexio_uart_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="FTM" Cversion="1.2.0" condition="Kinetis">
      <description>FlexTimer (FTM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FTM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__ftm__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_ftm_hal.h"/>
        <file category="source" name="platform/hal/src/ftm/fsl_ftm_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="GPIO" Cversion="1.2.0" condition="Kinetis">
      <description>General Purpose Input/Output (GPIO)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_GPIO
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__gpio__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_gpio_hal.h"/>
        <file category="source" name="platform/hal/src/gpio/fsl_gpio_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="I2C" Cversion="1.2.0" condition="Kinetis">
      <description>Inter-Integrated Circuit (I2C)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_I2C
      </RTE_Components_h>
      <files>
        <file category="include" name="platform/utilities/inc/"/>
        <file category="doc"     name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__i2c__hal.html"/>
        <file category="header"  name="platform/hal/inc/fsl_i2c_hal.h"/>
        <file category="source"  name="platform/hal/src/i2c/fsl_i2c_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="LLWU" Cversion="1.2.0" condition="Kinetis">
      <description>Low-Leakage Wakeup Unit (LLWU)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LLWU
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__llwu__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_llwu_hal.h"/>
        <file category="source" name="platform/hal/src/llwu/fsl_llwu_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="LMEM" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Local Memory Controller (LMEM) Cache</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LMEM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__local__memory__controller__cache__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_lmem_cache_hal.h"/>
        <file category="source" name="platform/hal/src/lmem/fsl_lmem_cache_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="LPSCI" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Low Power Serial Communication Interface (LPSCI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LPSCI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__lpsci__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_lpsci_hal.h"/>
        <file category="source" name="platform/hal/src/lpsci/fsl_lpsci_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="LPTMR" Cversion="1.2.0" condition="Kinetis">
      <description>Low Power Timer (LPTMR)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LPTMR
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__lptmr__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_lptmr_hal.h"/>
        <file category="source" name="platform/hal/src/lptmr/fsl_lptmr_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="LPUART" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Low Power Universal Asynchronous Receiver/Transmitter (LPUART)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LPUART
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__lpuart__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_lpuart_hal.h"/>
        <file category="source" name="platform/hal/src/lpuart/fsl_lpuart_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="MCG" Cversion="1.2.0" condition="Kinetis">
      <description>Multipurpose Clock Generator (MCG)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_MCG
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__mcg__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_mcg_hal.h"/>
        <file category="header" name="platform/hal/inc/fsl_mcg_hal_modes.h"/>
        <file category="source" name="platform/hal/src/mcg/fsl_mcg_hal.c"/>
        <file category="source" name="platform/hal/src/mcg/fsl_mcg_hal_modes.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="MCG_Lite" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Multipurpose Clock Generator Lite (MCG_Lite)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_MCG_LITE
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__mcglite__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_mcglite_hal.h"/>
        <file category="header" name="platform/hal/inc/fsl_mcglite_hal_modes.h"/>
        <file category="source" name="platform/hal/src/mcglite/fsl_mcglite_hal.c"/>
        <file category="source" name="platform/hal/src/mcglite/fsl_mcglite_hal_modes.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="MMDVSQ" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Memory-Mapped Divide and Square Root(MMDVSQ)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_MMDVSQ
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__mmdvsq__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_mmdvsq_hal.h"/>
        <file category="source" name="platform/hal/src/mmdvsq/fsl_mmdvsq_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="MPU" Cversion="1.2.0" condition="Kinetis">
      <description>Memory Protection Unit (MPU)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_MPU
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__mpu__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_mpu_hal.h"/>
        <file category="source" name="platform/hal/src/mpu/fsl_mpu_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="OSC" Cversion="1.2.0" condition="Kinetis">
      <description>Oscillator (OSC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_OSC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__osc__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_osc_hal.h"/>
        <file category="source" name="platform/hal/src/osc/fsl_osc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="PDB" Cversion="1.2.0" condition="Kinetis">
      <description>Programmable Delay Block (PDB)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PDB
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__pdb__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_pdb_hal.h"/>
        <file category="source" name="platform/hal/src/pdb/fsl_pdb_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="PIT" Cversion="1.2.0" condition="Kinetis">
      <description>Periodic Interrupt Timer (PIT)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PIT
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__pit__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_pit_hal.h"/>
        <file category="source" name="platform/hal/src/pit/fsl_pit_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="PMC" Cversion="1.2.0" condition="Kinetis">
      <description>Power Management Controller (PMC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PMC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__pmc__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_pmc_hal.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="PORT" Cversion="1.2.0" condition="Kinetis">
      <description>Port Control and Interrupts (PORT)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PORT
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__port__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_port_hal.h"/>
        <file category="source" name="platform/hal/src/port/fsl_port_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="PWM" Cversion="1.2.0" condition="Kinetis">
      <description>Pulse Width Modulator (PWM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PWM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__pwm__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_pwm_hal.h"/>
        <file category="source" name="platform/hal/src/pwm/fsl_pwm_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="RCM" Cversion="1.2.0" condition="Kinetis">
      <description>Reset Control Module (RCM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RCM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__rcm__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_rcm_hal.h"/>
        <file category="source" name="platform/hal/src/rcm/fsl_rcm_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="RNGA" Cversion="1.2.0" condition="Kinetis">
      <description>Random Number Generator Accelerator (RNGA)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RNGA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__rnga__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_rnga_hal.h"/>
        <file category="source" name="platform/hal/src/rnga/fsl_rnga_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="RTC" Cversion="1.2.0" condition="Kinetis HAL_RTC">
      <description>Real Time Clock (RTC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RTC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__rtc__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_rtc_hal.h"/>
        <file category="source" name="platform/hal/src/rtc/fsl_rtc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="SAI" Cversion="1.2.0" condition="Kinetis">
      <description>Synchronous Audio Interface (SAI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SAI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__sai__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_sai_hal.h"/>
        <file category="source" name="platform/hal/src/sai/fsl_sai_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="SDHC" Cversion="1.2.0" condition="Kinetis">
      <description>Secured Digital Host Controller (SDHC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SDHC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__sdhc__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_sdhc_hal.h"/>
        <file category="source" name="platform/hal/src/sdhc/fsl_sdhc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="SIM" Cversion="1.2.0" condition="Kinetis">
      <description>System Integration Module (SIM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SIM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__sim__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_sim_hal.h"/>
        <file category="source" name="platform/hal/src/sim/MK64F12/fsl_sim_hal_MK64F12.c" condition="K64F12"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="SMC" Cversion="1.2.0" condition="Kinetis">
      <description>System Mode Controller (SMC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SMC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__smc__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_smc_hal.h"/>
        <file category="source" name="platform/hal/src/smc/fsl_smc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="SPI" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Serial Peripheral Interface (SPI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SPI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__spi__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_spi_hal.h"/>
        <file category="source" name="platform/hal/src/spi/fsl_spi_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="TPM" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Timer/PWM Module (TPM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_TPM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__tpm__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_tpm_hal.h"/>
        <file category="source" name="platform/hal/src/tpm/fsl_tpm_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="TSI" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Touch Sense Input (TSI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_TSI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__tsi__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_tsi_hal.h"/>
        <file category="source" name="platform/hal/src/tsi/fsl_tsi_hal.c"/>
        <file category="source" name="platform/hal/src/tsi/fsl_tsi_v2_hal_specific.c"/>
        <file category="source" name="platform/hal/src/tsi/fsl_tsi_v4_hal_specific.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="UART" Cversion="1.2.0" condition="Kinetis">
      <description>Universal Asynchronous Receiver/Transmitter (UART)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_UART
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__uart__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_uart_hal.h"/>
        <file category="source" name="platform/hal/src/uart/fsl_uart_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="VREF" Cversion="1.2.0" condition="Kinetis">
      <description>Reference (VREF)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_VREF
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__vref__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_vref_hal.h"/>
        <file category="source" name="platform/hal/src/vref/fsl_vref_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="WDOG" Cversion="1.2.0" condition="Kinetis">
      <description>Watchdog Timer (WDOG)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_WDOG
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__wdog__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_wdog_hal.h"/>
        <file category="source" name="platform/hal/src/wdog/fsl_wdog_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK HAL" Csub="XBAR" Cversion="1.2.0" condition="Kinetis Unknown">
      <description>Inter-Peripheral Crossbar Switch (XBAR)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_XBAR
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__xbar__hal.html"/>
        <file category="header" name="platform/hal/inc/fsl_xbar_hal.h"/>
        <file category="source" name="platform/hal/src/xbar/fsl_xbar_hal.c"/>
      </files>
    </component>

    <!-- KSDK Driver -->
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="ADC16" Cversion="1.2.0" condition="Kinetis DRV_ADC16">
      <description>16-bit SAR Analog-to-digital converter (ADC16)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_ADC16
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__adc16__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_adc16_driver.h"/>
        <file category="source" name="platform/drivers/src/adc16/fsl_adc16_driver.c"/>
        <file category="source" name="platform/drivers/src/adc16/fsl_adc16_common.c"/>
        <file category="source" name="platform/drivers/src/adc16/fsl_adc16_irq.c" attr="template" select="ADC16 IRQ"/>
        <file category="source" name="platform/drivers/src/adc16/fsl_adc16_lpm_callback.c" attr="template" select="ADC16 LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="AOI" Cversion="1.2.0" condition="Kinetis DRV_AOI">
      <description>Crossbar AND/OR/INVERT (AOI) Module</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_AOI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__aoi__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_aoi_driver.h"/>
        <file category="source" name="platform/drivers/src/aoi/fsl_aoi_driver.c"/>
        <file category="source" name="platform/drivers/src/aoi/fsl_aoi_common.c"/>
        <file category="source" name="platform/drivers/src/aoi/fsl_aoi_lpm_callback.c" attr="template" select="AOI LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="CADC" Cversion="1.2.0" condition="Kinetis DRV_CADC">
      <description>12-bit Cyclic Analog-to-Digital Converter (CADC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_CADC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__cadc__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_cadc_driver.h"/>
        <file category="source" name="platform/drivers/src/cyclicAdc/fsl_cadc_driver.c"/>
        <file category="source" name="platform/drivers/src/cyclicAdc/fsl_cadc_common.c"/>
        <file category="source" name="platform/drivers/src/cyclicAdc/fsl_cyclicAdc_lpm_callback.c" attr="template" select="CADC LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="CMP" Cversion="1.2.0" condition="Kinetis DRV_CMP">
      <description>Comparator (CMP)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_CMP
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__cmp__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_cmp_driver.h"/>
        <file category="source" name="platform/drivers/src/cmp/fsl_cmp_driver.c"/>
        <file category="source" name="platform/drivers/src/cmp/fsl_cmp_common.c"/>
        <file category="source" name="platform/drivers/src/cmp/fsl_cmp_irq.c" attr="template" select="CMP IRQ"/>
        <file category="source" name="platform/drivers/src/cmp/fsl_cmp_lpm_callback.c" attr="template" select="CMP LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="COP" Cversion="1.2.0" condition="Kinetis DRV_COP">
      <description>Computer Operating Properly (COP) Watchdog Timer</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_COP
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__cop__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_cop_driver.h"/>
        <file category="source" name="platform/drivers/src/cop/fsl_cop_driver.c"/>
        <file category="source" name="platform/drivers/src/cop/fsl_cop_common.c"/>
        <file category="source" name="platform/drivers/src/cop/fsl_cop_lpm_callback.c" attr="template" select="COP LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="CRC" Cversion="1.2.0" condition="Kinetis DRV_CRC">
      <description>Cyclic Redundancy Check (CRC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_CRC
      </RTE_Components_h>
      <files>
    <!--<file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__crc__driver.html"/>-->
        <file category="header" name="platform/drivers/inc/fsl_crc_driver.h"/>
        <file category="source" name="platform/drivers/src/crc/fsl_crc_driver.c"/>
        <file category="source" name="platform/drivers/src/crc/fsl_crc_common.c"/>
        <file category="source" name="platform/drivers/src/crc/fsl_crc_lpm_callback.c" attr="template" select="CRC LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="DAC" Cversion="1.2.0" condition="Kinetis DRV_DAC">
      <description>Digital-to-Analog Converter (DAC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_DAC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__dac__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_dac_driver.h"/>
        <file category="source" name="platform/drivers/src/dac/fsl_dac_driver.c"/>
        <file category="source" name="platform/drivers/src/dac/fsl_dac_common.c"/>
        <file category="source" name="platform/drivers/src/dac/fsl_dac_irq.c" attr="template" select="DAC IRQ"/>
        <file category="source" name="platform/drivers/src/dac/fsl_dac_lpm_callback.c" attr="template" select="DAC LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="DMA" Cversion="1.2.0" condition="Kinetis DRV_DMA">
      <description>Direct Memory Access (DMA)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_DMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__dma__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_dma_driver.h"/>
        <file category="source" name="platform/drivers/src/dma/fsl_dma_driver.c"/>
        <file category="source" name="platform/drivers/src/dma/fsl_dma_common.c"/>
        <file category="source" name="platform/drivers/src/dma/fsl_dma_irq.c"/>
        <file category="source" name="platform/drivers/src/dma/fsl_dma_lpm_callback.c" attr="template" select="DMA LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="DSPI" Cvariant="IRQ" Cversion="1.2.0" condition="Kinetis DRV_DSPI_IRQ">
      <description>Serial Peripheral Interface (DSPI): Interrupt driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_DSPI_IRQ
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__dspi.html"/>
        <file category="header" name="platform/drivers/inc/fsl_dspi_master_driver.h"/>
        <file category="header" name="platform/drivers/inc/fsl_dspi_slave_driver.h"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_common.c"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_master_driver.c"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_slave_driver.c"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_shared_function.c"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_irq.c"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_lpm_callback.c" attr="template" select="DSPI LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="DSPI" Cvariant="DMA" Cversion="1.2.0" condition="Kinetis DRV_DSPI_DMA">
      <description>Serial Peripheral Interface (DSPI): DMA driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_DSPI_DMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__dspi.html"/>
        <file category="header" name="platform/drivers/inc/fsl_dspi_edma_master_driver.h"/>
        <file category="header" name="platform/drivers/inc/fsl_dspi_edma_slave_driver.h"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_common.c"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_edma_master_driver.c"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_edma_slave_driver.c"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_edma_shared_function.c"/>
        <file category="source" name="platform/drivers/src/dspi/fsl_dspi_edma_irq.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="eDMA" Cversion="1.2.0" condition="Kinetis DRV_EDMA">
      <description>Enhanced Direct Memory Access (eDMA)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_EDMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__edma__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_edma_driver.h"/>
        <file category="source" name="platform/drivers/src/edma/fsl_edma_driver.c"/>
        <file category="source" name="platform/drivers/src/edma/fsl_edma_common.c"/>
        <file category="source" name="platform/drivers/src/edma/fsl_edma_irq.c"/>
        <file category="source" name="platform/drivers/src/edma/fsl_edma_lpm_callback.c" attr="template" select="eDMA LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="ENC" Cversion="1.2.0" condition="Kinetis DRV_ENC">
      <description>Quadrature Encoder/Decoder (ENC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_ENC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__enc__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_enc_driver.h"/>
        <file category="source" name="platform/drivers/src/enc/fsl_enc_driver.c"/>
        <file category="source" name="platform/drivers/src/enc/fsl_enc_common.c"/>
        <file category="source" name="platform/drivers/src/enc/fsl_enc_irq.c"/>
        <file category="source" name="platform/drivers/src/enc/fsl_enc_lpm_callback.c" attr="template" select="ENC LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="ENET" Cversion="1.2.0" condition="Kinetis DRV_ENET">
      <description>Ethernet MAC (ENET)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_ENET
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__enet__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_enet_driver.h"/>
        <file category="source" name="platform/drivers/src/enet/fsl_enet_driver.c"/>
        <file category="source" name="platform/drivers/src/enet/fsl_enet_common.c"/>
        <file category="source" name="platform/drivers/src/enet/fsl_enet_irq.c"/>
        <file category="source" name="platform/drivers/src/enet/fsl_enet_lpm_callback.c" attr="template" select="ENET LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="EWM" Cversion="1.2.0" condition="Kinetis DRV_EWM">
      <description>External Watchdog Timer (EWM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_EWM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__ewm__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_ewm_driver.h"/>
        <file category="source" name="platform/drivers/src/ewm/fsl_ewm_driver.c"/>
        <file category="source" name="platform/drivers/src/ewm/fsl_ewm_common.c"/>
        <file category="source" name="platform/drivers/src/ewm/fsl_ewm_irq.c" attr="template" select="EWM IRQ"/>
        <file category="source" name="platform/drivers/src/ewm/fsl_ewm_lpm_callback.c" attr="template" select="EWM LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="Flash" Cversion="1.2.0" condition="Kinetis">
      <description>Standard Software Driver for C90TFS/FTFx Flash</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLASH
      </RTE_Components_h>
      <files>
        <file category="doc"    name="platform/drivers/src/flash/C90TFS/FSL_eNVM_FTFx_UM.pdf"/>
        <file category="header" name="platform/drivers/src/flash/C90TFS/drvsrc/include/SSD_FTFx.h"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/CopyToRam.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/DEFlashPartition.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/DFlashGetProtection.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/DFlashSetProtection.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/EEEWrite.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/EERAMGetProtection.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/EERAMSetProtection.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashCheckSum.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashCommandSequence.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashEraseAllBlock.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashEraseBlock.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashEraseResume.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashEraseSector.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashEraseSuspend.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashGetSecurityState.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashInit.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashProgram.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashProgramCheck.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashProgramOnce.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashProgramSection.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashReadOnce.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashReadResource.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashSecurityBypass.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashVerifyAllBlock.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashVerifyBlock.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/FlashVerifySection.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/PFlashGetProtection.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/PFlashSetProtection.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/PFlashSwap.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/PFlashSwapCtl.c"/>
        <file category="source" name="platform/drivers/src/flash/C90TFS/drvsrc/source/SetEEEEnable.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXBUS" Cversion="1.2.0" condition="Kinetis DRV_FLEXBUS">
      <description>External Bus Interface (FLEXBUS)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXBUS
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexbus__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_flexbus_driver.h"/>
        <file category="source" name="platform/drivers/src/flexbus/fsl_flexbus_driver.c"/>
        <file category="source" name="platform/drivers/src/flexbus/fsl_flexbus_common.c"/>
        <file category="source" name="platform/drivers/src/flexbus/fsl_flexbus_lpm_callback.c" attr="template" select="FLEXBUS LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="FlexCAN" Cversion="1.2.0" condition="Kinetis DRV_FlexCAN">
      <description>Controller Area Network (FlexCAN)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXCAN
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexcan__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_flexcan_driver.h"/>
        <file category="source" name="platform/drivers/src/flexcan/fsl_flexcan_driver.c"/>
        <file category="source" name="platform/drivers/src/flexcan/fsl_flexcan_common.c"/>
        <file category="source" name="platform/drivers/src/flexcan/fsl_flexcan_irq.c"/>
        <file category="source" name="platform/drivers/src/flexcan/fsl_flexcan_lpm_callback.c" attr="template" select="FlexCAN LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO" Cversion="1.2.0" condition="Kinetis DRV_FLEXIO">
      <description>FlexIO (FLEXIO)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO
      </RTE_Components_h>
      <files>
    <!--<file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__driver.html"/>-->
        <file category="header" name="platform/drivers/inc/fsl_flexio_driver.h"/>
        <file category="source" name="platform/drivers/src/flexio/fsl_flexio_driver.c"/>
        <file category="source" name="platform/drivers/src/flexio/fsl_flexio_common.c"/>
        <file category="source" name="platform/drivers/src/flexio/fsl_flexio_irq.c"/>
        <file category="source" name="platform/drivers/src/flexio/fsl_flexio_lpm_callback.c" attr="template" select="FlexIO LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO_I2C" Cversion="1.2.0" condition="Kinetis DRV_FLEXIO_I2C">
      <description>FlexIO I2C (FLEXIO_I2C)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO_I2C
      </RTE_Components_h>
      <files>
    <!--<file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__i2c__driver.html"/>-->
        <file category="header" name="platform/drivers/inc/fsl_flexio_i2c_master_driver.h"/>
        <file category="source" name="platform/drivers/src/flexio/fsl_flexio_i2c_master_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO_I2S" Cversion="1.2.0" condition="Kinetis DRV_FLEXIO_I2S">
      <description>FlexIO I2S (FLEXIO_I2S)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO_I2S
      </RTE_Components_h>
      <files>
    <!--<file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__i2s__driver.html"/>-->
        <file category="header" name="platform/drivers/inc/fsl_flexio_i2s_driver.h"/>
        <file category="source" name="platform/drivers/src/flexio/fsl_flexio_i2s_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO_SPI" Cversion="1.2.0" condition="Kinetis DRV_FLEXIO_SPI">
      <description>FlexIO SPI (FLEXIO_SPI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO_SPI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__spi__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_flexio_spi_driver.h"/>
        <file category="source" name="platform/drivers/src/flexio/fsl_flexio_spi_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO_UART" Cvariant="IRQ" Cversion="1.2.0" condition="Kinetis DRV_FLEXIO_UART_IRQ">
      <description>FlexIO UART (FLEXIO_UART): Interrupt driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO_UART_IRQ
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__uart__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_flexio_uart_driver.h"/>
        <file category="source" name="platform/drivers/src/flexio/fsl_flexio_uart_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="FLEXIO_UART" Cvariant="DMA" Cversion="1.2.0" condition="Kinetis DRV_FLEXIO_UART_DMA">
      <description>FlexIO UART (FLEXIO_UART): DMA driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO_UART_DMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__flexio__uart__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_flexio_uart_dma_driver.h"  condition="Kinetis Unknown"/>
        <file category="header" name="platform/drivers/inc/fsl_flexio_uart_edma_driver.h" condition="Kinetis Unknown"/>
        <file category="source" name="platform/drivers/src/flexio/fsl_flexio_uart_dma_driver.c"  condition="Kinetis Unknown"/>
        <file category="source" name="platform/drivers/src/flexio/fsl_flexio_uart_edma_driver.c" condition="Kinetis Unknown"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="FTM" Cversion="1.2.0" condition="Kinetis DRV_FTM">
      <description>FlexTimer (FTM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FTM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__ftm__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_ftm_driver.h"/>
        <file category="source" name="platform/drivers/src/ftm/fsl_ftm_driver.c"/>
        <file category="source" name="platform/drivers/src/ftm/fsl_ftm_common.c"/>
        <file category="source" name="platform/drivers/src/ftm/fsl_ftm_irq.c"/>
        <file category="source" name="platform/drivers/src/ftm/fsl_ftm_lpm_callback.c" attr="template" select="FTM LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="GPIO" Cversion="1.2.0" condition="Kinetis DRV_GPIO">
      <description>General Purpose Input/Output (GPIO)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_GPIO
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__gpio__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_gpio_driver.h"/>
        <file category="source" name="platform/drivers/src/gpio/fsl_gpio_driver.c"/>
        <file category="source" name="platform/drivers/src/gpio/fsl_gpio_common.c"/>
        <file category="source" name="platform/drivers/src/gpio/fsl_gpio_irq.c" attr="template" select="GPIO IRQ"/>
        <file category="source" name="platform/drivers/src/gpio/fsl_gpio_lpm_callback.c" attr="template" select="GPIO LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="I2C" Cversion="1.2.0" condition="Kinetis DRV_I2C">
      <description>Inter-Integrated Circuit (I2C)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_I2C
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__i2c.html"/>
        <file category="header" name="platform/drivers/inc/fsl_i2c_master_driver.h"/>
        <file category="header" name="platform/drivers/inc/fsl_i2c_slave_driver.h"/>
        <file category="source" name="platform/drivers/src/i2c/fsl_i2c_common.c"/>
        <file category="source" name="platform/drivers/src/i2c/fsl_i2c_master_driver.c"/>
        <file category="source" name="platform/drivers/src/i2c/fsl_i2c_slave_driver.c"/>
        <file category="source" name="platform/drivers/src/i2c/fsl_i2c_shared_function.c"/>
        <file category="source" name="platform/drivers/src/i2c/fsl_i2c_irq.c"/>
        <file category="source" name="platform/drivers/src/i2c/fsl_i2c_lpm_callback.c" attr="template" select="I2C LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="LMEM" Cversion="1.2.0" condition="Kinetis DRV_LMEM">
      <description>Local Memory Controller (LMEM) Cache</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LMEM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__local__memory__controller__cache__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_lmem_cache_driver.h"/>
        <file category="source" name="platform/drivers/src/lmem/fsl_lmem_cache_driver.c"/>
        <file category="source" name="platform/drivers/src/lmem/fsl_lmem_common.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="LPSCI" Cvariant="IRQ" Cversion="1.2.0" condition="Kinetis DRV_LPSCI_IRQ">
      <description>Low Power Serial Communication Interface (LPSCI): Interrupt driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LPSCI_IRQ
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__lpsci__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_lpsci_driver.h"/>
        <file category="source" name="platform/drivers/src/lpsci/fsl_lpsci_driver.c"/>
        <file category="source" name="platform/drivers/src/lpsci/fsl_lpsci_common.c"/>
        <file category="source" name="platform/drivers/src/lpsci/fsl_lpsci_irq.c"/>
        <file category="source" name="platform/drivers/src/lpsci/fsl_lpsci_lpm_callback.c" attr="template" select="LPSCI LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="LPSCI" Cvariant="DMA" Cversion="1.2.0" condition="Kinetis DRV_LPSCI_DMA">
      <description>Low Power Serial Communication Interface (LPSCI): DMA driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LPSCI_DMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__lpsci__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_lpsci_dma_driver.h"/>
        <file category="source" name="platform/drivers/src/lpsci/fsl_lpsci_dma_driver.c"/>
        <file category="source" name="platform/drivers/src/lpsci/fsl_lpsci_common.c"/>
        <file category="source" name="platform/drivers/src/lpsci/fsl_lpsci_irq.c"/>
        <file category="source" name="platform/drivers/src/lpsci/fsl_lpsci_lpm_callback.c" attr="template" select="LPSCI LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="LPTMR" Cversion="1.2.0" condition="Kinetis DRV_LPTMR">
      <description>Low Power Timer (LPTMR)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LPTMR
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__lptmr__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_lptmr_driver.h"/>
        <file category="source" name="platform/drivers/src/lptmr/fsl_lptmr_driver.c"/>
        <file category="source" name="platform/drivers/src/lptmr/fsl_lptmr_common.c"/>
        <file category="source" name="platform/drivers/src/lptmr/fsl_lptmr_irq.c"/>
        <file category="source" name="platform/drivers/src/lptmr/fsl_lptmr_lpm_callback.c" attr="template" select="LPTMR LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="LPUART" Cvariant="IRQ" Cversion="1.2.0" condition="Kinetis DRV_LPUART_IRQ">
      <description>Low Power Universal Asynchronous Receiver/Transmitter (LPUART): Interrupt driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LPUART_IRQ
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__lpuart__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_lpuart_driver.h"/>
        <file category="source" name="platform/drivers/src/lpuart/fsl_lpuart_driver.c"/>
        <file category="source" name="platform/drivers/src/lpuart/fsl_lpuart_common.c"/>
        <file category="source" name="platform/drivers/src/lpuart/fsl_lpuart_irq.c"/>
        <file category="source" name="platform/drivers/src/lpuart/fsl_lpuart_lpm_callback.c" attr="template" select="LPUART LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="LPUART" Cvariant="DMA" Cversion="1.2.0" condition="Kinetis DRV_LPUART_DMA">
      <description>Low Power Universal Asynchronous Receiver/Transmitter (LPUART): DMA driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LPUART_DMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__lpuart__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_lpuart_dma_driver.h"  condition="Kinetis Unknown"/>
        <file category="header" name="platform/drivers/inc/fsl_lpuart_edma_driver.h" condition="Kinetis Unknown"/>
        <file category="source" name="platform/drivers/src/lpuart/fsl_lpuart_dma_driver.c"  condition="Kinetis Unknown"/>
        <file category="source" name="platform/drivers/src/lpuart/fsl_lpuart_edma_driver.c" condition="Kinetis Unknown"/>
        <file category="source" name="platform/drivers/src/lpuart/fsl_lpuart_common.c"/>
        <file category="source" name="platform/drivers/src/lpuart/fsl_lpuart_irq.c"/>
        <file category="source" name="platform/drivers/src/lpuart/fsl_lpuart_lpm_callback.c" attr="template" select="LPUART LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="MPU" Cversion="1.2.0" condition="Kinetis DRV_MPU">
      <description>Memory Protection Unit (MPU)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_MPU
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__mpu__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_mpu_driver.h"/>
        <file category="source" name="platform/drivers/src/mpu/fsl_mpu_driver.c"/>
        <file category="source" name="platform/drivers/src/mpu/fsl_mpu_common.c"/>
        <file category="source" name="platform/drivers/src/mpu/fsl_mpu_irq.c" attr="template" select="MPU IRQ"/>
        <file category="source" name="platform/drivers/src/mpu/fsl_mpu_lpm_callback.c" attr="template" select="MPU LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="PDB" Cversion="1.2.0" condition="Kinetis DRV_PDB">
      <description>Programmable Delay Block (PDB)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_PDB
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__pdb__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_pdb_driver.h"/>
        <file category="source" name="platform/drivers/src/pdb/fsl_pdb_driver.c"/>
        <file category="source" name="platform/drivers/src/pdb/fsl_pdb_common.c"/>
        <file category="source" name="platform/drivers/src/pdb/fsl_pdb_irq.c" attr="template" select="PDB IRQ"/>
        <file category="source" name="platform/drivers/src/pdb/fsl_pdb_lpm_callback.c" attr="template" select="PDB LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="PIT" Cversion="1.2.0" condition="Kinetis DRV_PIT">
      <description>Periodic Interrupt Timer (PIT)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_PIT
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__pit__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_pit_driver.h"/>
        <file category="source" name="platform/drivers/src/pit/fsl_pit_driver.c"/>
        <file category="source" name="platform/drivers/src/pit/fsl_pit_common.c"/>
        <file category="source" name="platform/drivers/src/pit/fsl_pit_irq.c" attr="template" select="PIT IRQ"/>
        <file category="source" name="platform/drivers/src/pit/fsl_pit_lpm_callback.c" attr="template" select="PIT LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="PWM" Cversion="1.2.0" condition="Kinetis DRV_PWM">
      <description>Pulse Width Modulator (PWM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_PWM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__pwm__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_pwm_driver.h"/>
        <file category="source" name="platform/drivers/src/pwm/fsl_pwm_driver.c"/>
        <file category="source" name="platform/drivers/src/pwm/fsl_pwm_common.c"/>
        <file category="source" name="platform/drivers/src/pwm/fsl_pwm_irq.c"/>
        <file category="source" name="platform/drivers/src/pwm/fsl_pwm_lpm_callback.c" attr="template" select="PWM LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="RNGA" Cversion="1.2.0" condition="Kinetis DRV_RNGA">
      <description>Random Number Generator Accelerator (RNGA)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_RNGA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__rnga__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_rnga_driver.h"/>
        <file category="source" name="platform/drivers/src/rnga/fsl_rnga_driver.c"/>
        <file category="source" name="platform/drivers/src/rnga/fsl_rnga_common.c"/>
        <file category="source" name="platform/drivers/src/rnga/fsl_rnga_irq.c"/>
        <file category="source" name="platform/drivers/src/rnga/fsl_rnga_lpm_callback.c" attr="template" select="RNGA LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="RTC" Cversion="1.2.0" condition="Kinetis DRV_RTC">
      <description>Real Time Clock (RTC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_RTC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__rtc__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_rtc_driver.h"/>
        <file category="source" name="platform/drivers/src/rtc/fsl_rtc_driver.c"/>
        <file category="source" name="platform/drivers/src/rtc/fsl_rtc_common.c"/>
        <file category="source" name="platform/drivers/src/rtc/fsl_rtc_irq.c" attr="template" select="RTC IRQ"/>
        <file category="source" name="platform/drivers/src/rtc/fsl_rtc_lpm_callback.c" attr="template" select="RTC LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="SAI" Cversion="1.2.0" condition="Kinetis DRV_SAI">
      <description>Synchronous Audio Interface (SAI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_SAI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__sai__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_sai_driver.h"/>
        <file category="source" name="platform/drivers/src/sai/fsl_sai_driver.c"/>
        <file category="source" name="platform/drivers/src/sai/fsl_sai_common.c"/>
        <file category="source" name="platform/drivers/src/sai/fsl_sai_irq.c"/>
        <file category="source" name="platform/drivers/src/sai/fsl_sai_lpm_callback.c" attr="template" select="SAI LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="SDHC" Cversion="1.2.0" condition="Kinetis DRV_SDHC">
      <description>Secured Digital Host Controller (SDHC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_SDHC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__sdhc__pd.html"/>
        <file category="header" name="platform/drivers/inc/fsl_sdhc_driver.h"/>
        <file category="source" name="platform/drivers/src/sdhc/fsl_sdhc_driver.c"/>
        <file category="source" name="platform/drivers/src/sdhc/fsl_sdhc_common.c"/>
        <file category="source" name="platform/drivers/src/sdhc/fsl_sdhc_irq.c"/>
        <file category="source" name="platform/drivers/src/sdhc/fsl_sdhc_lpm_callback.c" attr="template" select="SDHC LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="SPI" Cvariant="IRQ" Cversion="1.2.0" condition="Kinetis DRV_SPI_IRQ">
      <description>Serial Peripheral Interface (SPI): Interrupt driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_SPI_IRQ
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__spi.html"/>
        <file category="header" name="platform/drivers/inc/fsl_spi_master_driver.h"/>
        <file category="header" name="platform/drivers/inc/fsl_spi_slave_driver.h"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_common.c"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_master_driver.c"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_slave_driver.c"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_shared_function.c"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_irq.c"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_lpm_callback.c" attr="template" select="SPI LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="SPI" Cvariant="DMA" Cversion="1.2.0" condition="Kinetis DRV_SPI_DMA">
      <description>Serial Peripheral Interface (SPI): DMA driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_SPI_DMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__spi.html"/>
        <file category="header" name="platform/drivers/inc/fsl_spi_dma_master_driver.h"/>
        <file category="header" name="platform/drivers/inc/fsl_spi_dma_slave_driver.h"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_common.c"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_dma_shared_function.c"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_dma_master_driver.c"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_dma_slave_driver.c"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_dma_irq.c"/>
        <file category="source" name="platform/drivers/src/spi/fsl_spi_lpm_callback.c" attr="template" select="SPI LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="TPM" Cversion="1.2.0" condition="Kinetis DRV_TPM">
      <description>Timer/PWM Module (TPM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_TPM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__tpm__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_tpm_driver.h"/>
        <file category="source" name="platform/drivers/src/tpm/fsl_tpm_driver.c"/>
        <file category="source" name="platform/drivers/src/tpm/fsl_tpm_common.c"/>
        <file category="source" name="platform/drivers/src/tpm/fsl_tpm_irq.c"/>
        <file category="source" name="platform/drivers/src/tpm/fsl_tpm_lpm_callback.c" attr="template" select="TPM LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="TSI" Cversion="1.2.0" condition="Kinetis DRV_TSI">
      <description>Touch Sense Input (TSI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_TSI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__tsi__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_tsi_driver.h"/>
        <file category="source" name="platform/drivers/src/tsi/fsl_tsi_driver.c"/>
        <file category="source" name="platform/drivers/src/tsi/fsl_tsi_v2_driver_specific.c"/>
        <file category="source" name="platform/drivers/src/tsi/fsl_tsi_v4_driver_specific.c"/>
        <file category="source" name="platform/drivers/src/tsi/fsl_tsi_common.c"/>
        <file category="source" name="platform/drivers/src/tsi/fsl_tsi_irq.c"/>
        <file category="source" name="platform/drivers/src/tsi/fsl_tsi_lpm_callback.c" attr="template" select="TSI LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="UART" Cvariant="IRQ" Cversion="1.2.0" condition="Kinetis DRV_UART_IRQ">
      <description>Universal Asynchronous Receiver/Transmitter (UART): Interrupt driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_UART_IRQ
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__uart__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_uart_driver.h"/>
        <file category="source" name="platform/drivers/src/uart/fsl_uart_driver.c"/>
        <file category="source" name="platform/drivers/src/uart/fsl_uart_common.c"/>
        <file category="source" name="platform/drivers/src/uart/fsl_uart_irq.c"/>
        <file category="source" name="platform/drivers/src/uart/fsl_uart_lpm_callback.c" attr="template" select="UART LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="UART" Cvariant="DMA" Cversion="1.2.0" condition="Kinetis DRV_UART_DMA">
      <description>Universal Asynchronous Receiver/Transmitter (UART): DMA driven</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_UART_DMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__uart__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_uart_dma_driver.h"  condition="Kinetis Unknown"/>
        <file category="header" name="platform/drivers/inc/fsl_uart_edma_driver.h" condition="K64F12"/>
        <file category="source" name="platform/drivers/src/uart/fsl_uart_dma_driver.c"  condition="Kinetis Unknown"/>
        <file category="source" name="platform/drivers/src/uart/fsl_uart_edma_driver.c" condition="K64F12"/>
        <file category="source" name="platform/drivers/src/uart/fsl_uart_common.c"/>
        <file category="source" name="platform/drivers/src/uart/fsl_uart_lpm_callback.c" attr="template" select="UART LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="VREF" Cversion="1.2.0" condition="Kinetis DRV_VREF">
      <description>Reference (VREF)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_VREF
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__vref__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_vref_driver.h"/>
        <file category="source" name="platform/drivers/src/vref/fsl_vref_driver.c"/>
        <file category="source" name="platform/drivers/src/vref/fsl_vref_common.c"/>
        <file category="source" name="platform/drivers/src/vref/fsl_vref_lpm_callback.c" attr="template" select="VREF LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="WDOG" Cversion="1.2.0" condition="Kinetis DRV_WDOG">
      <description>Watchdog Timer (WDOG)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_WDOG
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__wdog__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_wdog_driver.h"/>
        <file category="source" name="platform/drivers/src/wdog/fsl_wdog_driver.c"/>
        <file category="source" name="platform/drivers/src/wdog/fsl_wdog_common.c"/>
        <file category="source" name="platform/drivers/src/wdog/fsl_wdog_irq.c" attr="template" select="WDOG IRQ"/>
        <file category="source" name="platform/drivers/src/wdog/fsl_wdog_lpm_callback.c" attr="template" select="WDOG LPM"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Driver" Csub="XBAR" Cversion="1.2.0" condition="Kinetis DRV_XBAR">
      <description>Inter-Peripheral Crossbar Switch (XBAR)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_XBAR
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__xbar__driver.html"/>
        <file category="header" name="platform/drivers/inc/fsl_xbar_driver.h"/>
        <file category="source" name="platform/drivers/src/xbar/fsl_xbar_driver.c"/>
        <file category="source" name="platform/drivers/src/xbar/fsl_xbar_common.c"/>
        <file category="source" name="platform/drivers/src/xbar/fsl_xbar_irq.c"/>
        <file category="source" name="platform/drivers/src/xbar/fsl_xbar_lpm_callback.c" attr="template" select="XBAR LPM"/>
      </files>
    </component>

    <!-- KSDK System -->
    <component Cclass="Device" Cgroup="KSDK System" Csub="Clock" Cversion="1.2.0" condition="Kinetis_K64F12 SYS_Clock">
      <description>Clock Manager (Clock)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_SYSTEM_CLOCK
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__clock__manager.html"/>
        <file category="header" name="platform/system/inc/fsl_clock_manager.h"/>
        <file category="source" name="platform/system/src/clock/fsl_clock_manager.c"/>
        <file category="source" name="platform/system/src/clock/fsl_clock_manager_common.c"/>
        <file category="source" name="platform/system/src/clock/MK64F12/fsl_clock_MK64F12.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK System" Csub="Interrupt" Cversion="1.2.0" condition="Kinetis">
      <description>Interrupt Manager (Interrupt)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_SYSTEM_INTERRUPT
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__interrupt__manager.html"/>
        <file category="header" name="platform/system/inc/fsl_interrupt_manager.h"/>
        <file category="source" name="platform/system/src/interrupt/fsl_interrupt_manager.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK System" Csub="HwTimer" Cvariant="Framework" Cversion="1.2.0" condition="Kinetis SYS_HwTimer">
      <description>Hardware Timer (HwTimer): Framework</description>
      <RTE_Components_h>
        #define RTE_DEVICE_SYSTEM_HWTIMER
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__hwtimer__driver.html"/>
        <file category="header" name="platform/system/inc/fsl_hwtimer.h"/>
        <file category="source" name="platform/system/src/hwtimer/fsl_hwtimer.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK System" Csub="HwTimer" Cvariant="PIT" Cversion="1.2.0" condition="Kinetis SYS_HwTimer_PIT">
      <description>Hardware Timer (HwTimer): PIT</description>
      <RTE_Components_h>
        #define RTE_DEVICE_SYSTEM_HWTIMER_PIT
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__hwtimer__driver.html"/>
        <file category="header" name="platform/system/inc/fsl_hwtimer.h"/>
        <file category="header" name="platform/system/inc/fsl_hwtimer_pit.h"/>
        <file category="source" name="platform/system/src/hwtimer/fsl_hwtimer.c"/>
        <file category="source" name="platform/system/src/hwtimer/fsl_hwtimer_pit.c"/>
        <file category="source" name="platform/system/src/hwtimer/fsl_hwtimer_pit_irq.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK System" Csub="HwTimer" Cvariant="SysTick" Cversion="1.2.0" condition="Kinetis SYS_HwTimer_SysTick">
      <description>Hardware Timer (HwTimer): SysTick</description>
      <RTE_Components_h>
        #define RTE_DEVICE_SYSTEM_HWTIMER_SYSTICK
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__hwtimer__driver.html"/>
        <file category="header" name="platform/system/inc/fsl_hwtimer.h"/>
        <file category="header" name="platform/system/inc/fsl_hwtimer_systick.h"/>
        <file category="source" name="platform/system/src/hwtimer/fsl_hwtimer.c"/>
        <file category="source" name="platform/system/src/hwtimer/fsl_hwtimer_systick.c"/>
        <file category="source" name="platform/system/src/hwtimer/fsl_hwtimer_systick_irq.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK System" Csub="Power" Cversion="1.2.0" condition="Kinetis SYS_Power">
      <description>Power Manager (Power)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_SYSTEM_POWER
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__power__manager.html"/>
        <file category="header" name="platform/system/inc/fsl_power_manager.h"/>
        <file category="source" name="platform/system/src/power/fsl_power_manager.c"/>
      </files>
    </component>

    <!-- KSDK OSA -->
    <component Cclass="Device" Cgroup="KSDK OSA" Csub="OSA" Cvariant="Bare Metal" Cversion="1.2.0" condition="Kinetis OSA_BM">
      <description>Bare Metal Abstraction Layer (no RTOS)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_OSA_BM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/Kinetis SDK v.1.2.0 API Reference Manual/group__os__abstraction__bm.html"/>
        <file category="header" name="platform/osa/inc/fsl_os_abstraction.h"/>
        <file category="source" name="platform/osa/src/fsl_os_abstraction_bm.c"/>
      </files>
    </component>

    <!-- KSDK Utility -->
    <component Cclass="Device" Cgroup="KSDK Utility" Csub="Debug Console" Cversion="1.2.0" condition="Kinetis_K64F12 Utility_DebugConsole">
      <description>Debug Console</description>
      <RTE_Components_h>
        #define RTE_DEVICE_UTILITY_DEBUG_CONSOLE
      </RTE_Components_h>
      <files>
        <file category="header" name="platform/utilities/inc/fsl_debug_console.h"/>
        <file category="source" name="platform/utilities/src/fsl_debug_console.c"/>
        <file category="source" name="platform/utilities/src/print_scan.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="KSDK Utility" Csub="Misc" Cversion="1.2.0" condition="Kinetis Utility_Misc">
      <description>Miscellaneous Utilities</description>
      <RTE_Components_h>
        #define RTE_DEVICE_UTILITY_MISC
      </RTE_Components_h>
      <files>
        <file category="header" name="platform/utilities/inc/fsl_misc_utilities.h"/>
        <file category="source" name="platform/utilities/src/fsl_misc_utilities.c"/>
      </files>
    </component>

    <!-- CMSIS Driver -->
    <component Cclass="CMSIS Driver" Cgroup="Ethernet MAC" Capiversion="2.1" Cversion="1.3" condition="Kinetis_K64F CMSIS_Driver ETH_MAC">
      <description>Ethernet MAC Driver for K64F Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_ETH_MAC0            /* Driver ETH_MAC0 */
      </RTE_Components_h>
      <files>
        <file category="source" name="addon_cmsis/Driver/MK64F/EMAC_MK64F.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="I2C" Capiversion="2.2" Cversion="1.3" condition="Kinetis_K64F CMSIS_Driver I2C">
      <description>I2C Driver for K64F Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_I2C0                /* Driver I2C0 */
        #define RTE_Drivers_I2C1                /* Driver I2C1 */
        #define RTE_Drivers_I2C2                /* Driver I2C2 */
      </RTE_Components_h>
      <files>
        <file category="source" name="addon_cmsis/Driver/MK64F/I2C_MK64F.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="MCI" Capiversion="2.2" Cversion="1.2" condition="Kinetis_K64F CMSIS_Driver MCI">
      <description>MCI Driver for K64F Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_MCI0                /* Driver MCI0 */
      </RTE_Components_h>
      <files>
        <file category="source" name="addon_cmsis/Driver/MK64F/MCI_MK64F.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="SPI" Capiversion="2.1"  Cversion="1.2" condition="Kinetis_K64F CMSIS_Driver SPI">
      <description>SPI Driver for K64F Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_SPI0                /* Driver SPI0 */
        #define RTE_Drivers_SPI1                /* Driver SPI1 */
        #define RTE_Drivers_SPI2                /* Driver SPI2 */
      </RTE_Components_h>
      <files>
        <file category="source" name="addon_cmsis/Driver/MK64F/SPI_MK64F.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USART" Capiversion="2.1" Cversion="1.2" condition="Kinetis_K64F CMSIS_Driver USART">
      <description>USART Driver for K64F Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_USART0              /* Driver USART0 */
        #define RTE_Drivers_USART1              /* Driver USART1 */
        #define RTE_Drivers_USART2              /* Driver USART2 */
        #define RTE_Drivers_USART3              /* Driver USART3 */
        #define RTE_Drivers_USART4              /* Driver USART4 */
        #define RTE_Drivers_USART5              /* Driver USART5 */
      </RTE_Components_h>
      <files>
        <file category="source" name="addon_cmsis/Driver/MK64F/UART_MK64F.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="SAI" Capiversion="1.0" Cversion="1.2" condition="Kinetis_K64F CMSIS_Driver SAI">
      <description>USART Driver for K64F Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_SAI0              /* Driver SAI0 */
      </RTE_Components_h>
      <files>
        <file category="source" name="addon_cmsis/Driver/MK64F/SAI_MK64F.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Device" Capiversion="2.1" Cversion="1.2" condition="Kinetis_K64F CMSIS_Driver USB">
      <description>USB Device Driver for K64F Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_USBD0               /* Driver USBD0 */
      </RTE_Components_h>
      <files>
        <file category="source" name="addon_cmsis/Driver/MK64F/OTG_FS_MK64F.c"/>
        <file category="source" name="addon_cmsis/Driver/MK64F/USBD_FS_MK64F.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Host" Capiversion="2.1" Cversion="1.3" condition="Kinetis_K64F CMSIS_Driver USB">
      <description>USB Host Driver for K64F Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_USBH0               /* Driver USBH0 */
      </RTE_Components_h>
      <files>
        <file category="source" name="addon_cmsis/Driver/MK64F/OTG_FS_MK64F.c"/>
        <file category="source" name="addon_cmsis/Driver/MK64F/USBH_FS_MK64F.c"/>
      </files>
    </component>

    <bundle Cbundle="FRDM-K64F" Cclass="Board Support" Cversion="1.2">
      <description>NXP FRDM-K64F Development Board</description>
      <doc>addon_mdk/Boards/NXP/FRDM-K64F/Documents/FRDMK64FUG.pdf</doc>
      <component Cgroup="LED" Capiversion="1.00" condition="Kinetis FRDM-K64F BSP">
        <description>LED Interface for FRDM-K64F</description>
        <files>
          <file category="source" name="addon_mdk/Boards/NXP/FRDM-K64F/Common/LED_FRDM_K64F.c"/>
        </files>
      </component>
      <component Cgroup="Buttons" Capiversion="1.00" condition="Kinetis FRDM-K64F BSP">
        <description>Buttons Interface for FRDM-K64F</description>
        <files>
          <file category="source" name="addon_mdk/Boards/NXP/FRDM-K64F/Common/Buttons_FRDM_K64F.c"/>
        </files>
      </component>
      <component Cgroup="Accelerometer" Capiversion="1.00" condition="Kinetis FRDM-K64F BSP I2C">
        <description>Accelerometer Interface for FXOS8700</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_ACCELEROMETER
        </RTE_Components_h>
        <files>
          <file category="source" name="addon_mdk/Boards/NXP/FRDM-K64F/Common/FXOS8700.c"/>
        </files>
      </component>
      <component Cgroup="Magnetometer" Capiversion="1.00" condition="Kinetis FRDM-K64F BSP I2C">
        <description>Magnetometer Interface for FXOS8700</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_MAGNETOMETER
        </RTE_Components_h>
        <files>
          <file category="source" name="addon_mdk/Boards/NXP/FRDM-K64F/Common/FXOS8700.c"/>
        </files>
      </component>
    </bundle>

    <bundle Cbundle="TWR-K64F120M" Cclass="Board Support" Cversion="1.2">
      <description>NXP TWR-K64F120M Development Board</description>
      <doc>addon_mdk/Boards/NXP/TWR-K64F120M/Documents/TWRK64F120MUG.pdf</doc>
      <component Cgroup="LED" Capiversion="1.00" condition="Kinetis TWR-K64F120M BSP">
        <description>LED Interface for TWR-K64F120M</description>
        <files>
          <file category="source" name="addon_mdk/Boards/NXP/TWR-K64F120M/Common/LED_TWR_K64F120M.c"/>
        </files>
      </component>
      <component Cgroup="Buttons" Capiversion="1.00" condition="Kinetis TWR-K64F120M BSP">
        <description>Buttons Interface for TWR-K64F120M</description>
        <files>
          <file category="source" name="addon_mdk/Boards/NXP/TWR-K64F120M/Common/Buttons_TWR_K64F120M.c"/>
        </files>
      </component>
      <component Cgroup="Accelerometer" Capiversion="1.00" condition="Kinetis TWR-K64F120M BSP I2C">
        <description>Accelerometer Interface for MMA8451Q</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_ACCELEROMETER
        </RTE_Components_h>
        <files>
          <file category="source" name="addon_mdk/Boards/NXP/TWR-K64F120M/Common/MMA8451Q.c"/>
        </files>
      </component>
    </bundle>

  </components>

</package>
