<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.3" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Keil</vendor>
  <name>STM32F2xx_DFP</name>
  <description>STMicroelectronics STM32F2 Series Device Support, Drivers and Examples</description>
  <url>http://www.keil.com/pack</url>

  <releases>
    <release version="2.9.0" date="2018-04-03">
      Increased stm32f2xx_hal_conf.h version to 1.2.1. 
      CMSIS-Driver:
      - Added support for Arm Compiler 6.
      - CAN:
      -- Corrected abort message send functionality.
      - SPI:
      -- Made I/O speed configurable.
      -- Corrected data shift register overrun in master mode.
      - USART:
      -- Made I/O speed configurable.
      Board Examples:
      - Updated all examples:
      -- Placing Event Recorder into non-initialized memory area.
      -- Using ARM.CMSIS-Driver.2.2.0.pack and ARM.CMSIS.5.3.0.pack.
      - Added Network SNMP_Agent example.
    </release>
    <release version="2.8.0" date="2018-02-22">
      Updated Pack to STM32Cube_FW_F2 Firmware Package version V1.7.0.
      - Reduced overall pack size by extracting only 'Drivers', 'Documentation' and 'Fonts' from Firmware Library pack.
      - Updated HAL to version V1.2.1.
      - Patching file: stm32f2xx_hal_def.h to support ARM Compiler 6.
      Device Support:
      - Added DBGMCU INI and DBGCONF files.
      - Removed reference to DBGMCU INI files from component startup.
      CMSIS-Driver:
      - CAN:
      -- Corrected comment and code for CubeMX CAN interrupts settings (should be disabled).
      -- Corrected SetBitrate function.
      - EMAC:
      -- Corrected transmit checksum offload for IPv4 fragmented packets.
      - USART:
      -- Corrected ARM_USART_SET_IRDA_PULSE control.
      - USB Device:
      -- Removed CMSIS-RTOS dependency.
      -- Corrected high-bandwidth isochronous endpoint functionality.
      - USB Host:
      -- HS driver: On-chip PHY powered down if external ULPI PHY is used.
      -- Removed CMSIS-RTOS dependency.
      Board Examples:
      - Added USB Device WinUSB_Echo examples.
      - Updated all examples adding release and debug targets, using CMSIS-RTOS2 RTX and enabling the Event Recorder in debug targets.
      - Updated emWin examples to emWin V5.46e.
      - Updated USB Host examples thread stack settings.
      - Updated Board Support LED_*.c files.
      - Removed MCBSTM32F200 board Network examples based on legacy Network API v6.
    </release>
    <release version="2.7.0" date="2017-06-01">
      Based on STMicroelectronics STM32CubeF2 Firmware Package to Version 1.3.0.
      Updated CMSIS drivers:
      - USART: Added "Not Used" support for TX and RX pins
      - SPI:   Added "Not Used" support for MISO and MOSI pins
      - CAN:
      -- Corrected filter setting for adding/removing maskable Standard ID
      -- Corrected clearing of overrun flag in interrupt routine
      -- Corrected CAN2 initialization that was disabling CAN1 filters
      -- Corrected receive overrun signaling
      - I2C:
      -- slave event handling reworked
      -- Corrected rise time setting when using ARM_I2C_BUS_SPEED_FAST
      - USB Device:
      -- HS driver: On-chip PHY powered down if external ULPI PHY is used
      -- Corrected resume event signaling
      -- VBUS sensing enabled by default
      -- VBUS detection is selected automatically based on VBUS sensing pin setting (in RTE_Device.h or by STM32CubeMX)
      -- Corrected initial resume signaling after USB Bus Reset
      -- Corrected device status information
      - USB Host:
      -- HS driver: On-chip PHY powered down if external ULPI PHY is used
      -- Corrected over-current pin configuration
      Updated BSP drivers:
      - Board Touch display: MCBSTM32F200 Touch_STMPE811.c: Corrected occasional incorrect coordinate reading, when touch screen is released.
      Updated examples:
      - Updated emWin examples to emWin V5.36f
      - Updated USB Device CDC ACM VirtualCOM example (corrected initial UART receive size)
      Updated RTE_Device:
      - Added "Not Used" support for SPI MOSI/MISO pins and USART TX/RX pins.
    </release>
    <release version="2.6.0" date="2016-04-14">
      Updated CMSIS drivers:
      - EMAC:
      -- Corrected Ethernet PTP functionality
      - CAN:
      -- Corrected functionality when only one CAN controller is used
      -- Corrected functionality when NULL pointer is provided for one or both signal callbacks in Initialize function call
      - USB Host full-speed:
      -- Removed interrupt priority handling
      - USB Host high-speed:
      -- Added DMA configuration to RTE_Device.h
      -- Corrected wrong result of PipeTransferGetResult for In Pipe transfers in DMA mode
      -- Added check to PipeTransfer function for 4-byte data alignment if DMA is used
      -- Removed interrupt priority handling
      - USART:
      -- Corrected CTS handling and added signal CTS change event.
      Updated examples:
      - Updated emWin examples to emWin V5.32
      - Updated CAN example
      - Updated USB Host examples
      - Updated USB Device CDC ACM VirtualCOM example for Keil MCBSTM32F200 evaluation board
    </release>
    <release version="2.5.0" date="2015-12-08">
      Updated STMicroelectronics STM32CubeF2 Firmware Package to Version 1.3.0.
      - updated affected examples
      MDK-ARM configuration via STM32CubeMX:
      - updated MX_Device.h generation: pin names characters '/', '-', ' ' converted to '_'
      Added examples using Network DualStack (IPv4/IPv6) Middleware targeting MCBSTM32F200 (Keil.MDK-Middleware.7.0.0.pack required)
      Updated all CMSIS drivers:
      - Corrected PowerControl function for Unconditional Power Off
      Updated USB Device CMSIS driver:
      - Updated handling of Isochronous transfer
      Updated USB Host CMSIS drivers:
      - Corrected speed setting in high-speed port for On-chip Full-speed PHY
      - Corrected low-speed device on high-speed port functionality
      - Corrected multiple packet sending and PING functionality
      - Renamed defines for overriding the maximum number of pipes used
      from USBH_MAX_PIPE_NUM to USBH0_MAX_PIPE_NUM in full-speed driver, and
      from USBH_MAX_PIPE_NUM to USBH1_MAX_PIPE_NUM for high-speed driver
      Corrected SPI driver:
      - Corrected 8bit/16bit Data register access, regarding the Data frame size
      Updated CAN driver:
      - added possibility to use only CAN1
      Updated EMAC driver:
      - corrected return value of the ReadFrame function
    </release>
    <release version="2.4.0" date="2015-09-16">
      Introducing MDK-ARM configuration via STM32CubeMX:
      - see documentation for component Device:STM32CubeFramework:STM32CubeMX
      CMSIS driver:
      - added CAN driver and configuration options in RTE_Device.h
      - updated EMAC driver: corrected lockup after long runtime
      - updated MCI driver: corrected clock divider bypass handling
      - updated USART driver: corrected driver incorrectly stopped receiving data when calling the USART_Receive function while the receiver is busy
      - update I2C driver: corrected 3 byte reception and POS bit handling in master mode as well as corrected acknowledge handling in slave mode
      MDK example projects:
      - added examples created using MDK and STM32CubeMX: Blinky and emWin GUI_VNC for Keil MCBSTM32F200
      - added CAN Data and RTR projects for Keil MCBSTM32F200
      - updated FTP_Server example: Heap memory increased
    </release>
    <release version="2.3.0" date="2015-06-12">
      Updated CMSIS drivers:
      - I2C, MCI, EMAC, USB Device, USB Host: Updated initialization, uninitialization and power procedures
      - MCI: Corrected data timeout handling
      - SPI:
      -- Corrected status bit-field handling, to prevent race conditions
      -- Corrected ARM_SPI_EVENT_DATA_LOST event generation in master mode at high bus speeds
      -- Corrected bus speed configuration
      - USART:
      -- Corrected status bit-field handling, to prevent race conditions
      -- Added RX TimeOut handling
      - USB Device: Corrected transferred size during transfer
      - USB Host:
      -- Added pipe bus error signaling of active pipes on port disconnect
      -- Corrected handling on error transfers
      Updated MDK examples:
      - Boards/Keil/MCBSTM32F200/Blinky
      - USB Device Mass Storage Example
    </release>
    <release version="2.2.0" date="2015-03-20">
      Required PACKs: ARM.CMSIS.4.3.0.pack, Keil.MDK-Middleware.6.3.0.pack, Keil.ARM_Compiler.1.0.0.pack
      Updated drivers:
      - USB Host: Corrected signalling of STALL handshake
      - USB Device:
      -- Corrected IN ZLP sending
      -- VBUS sensing disabled if ARM_USBD_VBUS_DETECT is not enabled
      - USART: corrected when configured via STM32CubeMX
      - I2C:
      -- includes corrected when configured with STM32CubeMX
      -- corrected transfer issues after ARM_I2C_EVENT_ADDRESS_NACK
      - MCI:
      -- includes corrected when configured with STM32CubeMX
      -- correction required due to device errata
      -- added support for SD high speed bus mode
      - SPI: corrected spi->info->mode handling
      Updated examples:
      - Compiler I/O software component is now used for I/O retargeting
      - Updated Network examples for MCBSTM32F200 V1.2 board with KSZ8081RNA Ethernet PHY
      Updated dependencies:
      - Ethernet does not require CMSIS:RTOS
    </release>
    <release version="2.1.0" date="2014-12-11">
      Updated drivers:
      - I2C: corrected slave mode and 10-bit addressing mode, I2C2 SDA pin configuration
      - USB Host:
      -- corrected interrupt pipe behaviour, and PING on high-speed driver, init/deinit and power control
      -- added VBUS Power pin active high/low functionality, overcurrent state functionality (without event) added
      - USB Device: prevent simultaneous IN writes to FIFO
      - USART and SPI: corrected DMA transfer abort
      - MCI: corrected setting of bus width
      - EMAC: implemented function 'GetMacAddress'
      - EMAC, I2C, MCI, USART, SPI and USBD: corrected some basic MISRA 2004 compliances like signedness, boolean operation on logical operators
      Updated RTE_Device.h: added Receive and transmit DMA configuration for SDIO peripheral
      Renamed SDIO component in 'Device::STM32Cube HAL' to 'SD' to match HAL component name
      Updated examples:
      - File_Demo and USB Host MassStorage examples updated due to the new fdelete() API in File System Version 6.2
      - MCBSTM32F200 USB Host Keyboard example (removed USB High-speed usage)
      - updated RTE_Device.h to version 2.01
    </release>
    <release version="2.0.0" date="2014-10-16">
      PACK based on STMicroelectronics STM32CubeF2 Firmware Package V1.1.0
      - STD Peripheral Library components removed
      New Device variants introduced matching ST Cube device database
      - e.g. STM32F207IG -> STM32F207IGHx or STM32F207IGTx
      CMSIS Drivers Version 2 (changed Cclass "Drivers" to "CMSIS Driver")
      - Ethernet MAC, I2C, MCI, SPI, USART, USB Device, USB Host
      MDK-ARM Example projects require MDK-Middleware 6.1.1 and CMSIS 4.2.0
      - Board Support uses Board Interface API from MDK-Middleware (header file names changed)
      - Board: Keil MCBSTM32F200
    </release>
    <release version="1.0.8">
      Device: Startup files for GCC added, conditions extended to reflect toolchain dependencies
    </release>
    <release version="1.0.7" date="2014-04-29">
      Updated I2C driver  (BUG Fix: 2 byte reception)
      Device:StdPeriph Drivers:Framework Version:1.1.1 - added file misc.c
    </release>
    <release version="1.0.6">
      Added STM Peripheral Driver Library V1.1.0
    </release>
    <release version="1.0.5">
      Updated I2c driver (corrected register access)
      USB Device drivers update: multiple packet read, EP0 unconfiguration
      Updated SPI driver (IRQ handling corrected)
    </release>
    <release version="1.0.4">
      Updated drivers (namespace prefix ARM_ added)
    </release>
    <release version="1.0.3">
      Added STM32F200 Board Support Bundle
    </release>
    <release version="1.0.2">
      Added emWin Example and GUIDemo for MCBSTM32F200
      Added emWin LCD driver for MCBSTM32F200
      Updated USBH Drivers (improved robustness)
    </release>
    <release version="1.0.1">
      Generic Drivers moved to "Drivers" Class
      Added UART and I2C Driver
      Updated USBD and USBH Drivers
      Added MCBSTM32F200 Demo example
      Added MCBSTM32F200 USB Host Keyboard example
      Added MCBSTM32F200 BSP Drivers: Joystick, Touchscreen, Accelerometer, Gyroscope, Camera
      Updated MCBSTM32F200 BSP Driver: Keyboard
      Updated all MCBSTM32F200 examples
      Minor corrections:
      - SPI Driver
      - DMA Driver
      - MCI Driver
    </release>
    <release version="1.0.0">
      First Release version of STM32F2 Device Family Pack.
    </release>
    <release version="0.9.0">
      Beta version of STM32F2 Device Family Pack.
    </release>
  </releases>

  <keywords>                                                                  <!-- keywords for indexing -->
    <keyword>ST</keyword>
    <keyword>Device Support</keyword>
    <keyword>Device Family Package STMicroelectronics</keyword>
    <keyword>STM32F2</keyword>
    <keyword>STM32F2xx</keyword>
  </keywords>

  <devices>
    <family Dfamily="STM32F2 Series" Dvendor="STMicroelectronics:13">
      <processor Dcore="Cortex-M3" DcoreVersion="r2p1" Dfpu="0" Dmpu="1" Dendian="Little-endian"/>

      <book name="Documentation/dui0552a_cortex_m3_dgug.pdf" title="Cortex-M3 Generic User Guide"/>

      <description>
The STM32F2 family incorporates high-speed embedded memories and an extensive range of enhanced I/Os and peripherals connected to two APB buses, three AHB buses and a 32-bit multi-AHB bus matrix.
Typical applications include Motor drive and application control Medical equipment, Industrial applications: PLC, inverters, circuit breakers, Printers and scanners, Alarm systems, video intercom, and HVAC, Home audio appliances.

  - Adaptive real-time memory accelerator (ART)
  - LCD parallel interface, 8080/6800 modes
  - Multi-layer bus matrix
  - 5 V-tolerant I/Os
  - Timer with quadrature (incremental) encoder input
  - Parallel camera interface
  - Analog true random number generator
  - 96-bit unique ID
      </description>

      <sequences>
        <!-- Override for Pre-Defined Sequences -->
        <sequence name="DebugDeviceUnlock">
          <block>
            Sequence("CheckID");
          </block>
        </sequence>

        <sequence name="DebugCoreStart">
          <block>
            // Replication of Standard Functionality
            Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
          </block>

          <block info="DbgMCU registers">
            Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
            Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
            Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB2_FZ: Configure APB2 Peripheral Freeze Behavior
          </block>
        </sequence>

        <sequence name="TraceStart">
          <block>
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("EnableTraceTPIU");                                          // Call TPIU Trace Setup
            </block>
          </control>
        </sequence>

        <sequence name="TraceStop">
          <block>
            // Nothing required for SWO Trace
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                        // SWO enabled?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                        // Synchronous trace port enabled?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("DisableTraceSWO");
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("DisableTraceTPIU");
            </block>
          </control>
        </sequence>

        <!-- User-Defined Sequences -->
        <sequence name="CheckID">
          <block>
            __var pidr1 = 0;
            __var pidr2 = 0;
            __var jep106id = 0;
            __var ROMTableBase = 0;

            __ap = 0;      // AHB-AP

            ROMTableBase = ReadAP(0xF8) &amp; ~0x3;

            pidr1 = Read32(ROMTableBase + 0x0FE4);
            pidr2 = Read32(ROMTableBase + 0x0FE8);
            jep106id = ((pidr2 &amp; 0x7) &lt;&lt; 4 ) | ((pidr1 &gt;&gt; 4) &amp; 0xF);
          </block>

          <control if="jep106id != 0x20">
            <block>
              Query(0, "Not a genuine ST Device! Abort connection", 1);
              Message(2, "Not a genuine ST Device! Abort connection.");
            </block>
          </control>
        </sequence>

        <sequence name="EnableTraceSWO">
          <block>
            __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
            __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value

            dbgmcu_val        = Read32(0xE0042004) &amp; (~0xE0);                         // Read DBGMCU_CR and clear trace setup
            dbgmcu_trace_val  = (1 &lt;&lt; 5);                                           // Trace I/O Enable + Trace Mode Asynchronous

            Sequence("ConfigureTraceSWOPin");
          </block>

          <block info="configure Trace I/O Enable + Trace Mode Asynchronous">
            Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
          </block>
        </sequence>

        <sequence name="DisableTraceSWO">
          <block>
            __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
          </block>

          <block info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
            dbgmcu_val = Read32(0xE0042004) &amp; (~0xE0);                                // Read DBGMCU_CR and clear trace setup
            Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
          </block>
        </sequence>

        <sequence name="EnableTraceTPIU">
          <block>
            __var width            = (__traceout &amp; 0x003F0000) &gt;&gt; 16;
            __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
            __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value

            dbgmcu_val        = Read32(0xE0042004) &amp; (~0xE0);                         // Read DBGMCU_CR and clear trace setup

            Sequence("ConfigureTraceTPIUPins");
          </block>

          <control if="width &gt;= 1" info="TPIU port width 1">
            <block info="configure Trace I/O Enable + Trace Mode Synchronous 1 bit">
              dbgmcu_trace_val  = (3 &lt;&lt; 5);
            </block>
          </control>

          <control if="width &gt;= 2" info="TPIU port width 2">
            <block info="configure Trace I/O Enable + Trace Mode Synchronous 2 bit">
              dbgmcu_trace_val  = (5 &lt;&lt; 5);
            </block>
          </control>

          <control if="width &gt;= 4" info="TPIU port width 4">
            <block info="configure Trace I/O Enable + Trace Mode Synchronous 4 bit">
              dbgmcu_trace_val  = (7 &lt;&lt; 5);
            </block>
          </control>

          <block info="configure Trace I/O Enable + Trace Mode Asynchronous">
            Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
          </block>
        </sequence>

        <sequence name="DisableTraceTPIU">
          <block>
            __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
          </block>

          <block info="unconfigure Trace I/O Enable + Trace Mode Synchronous">
            dbgmcu_val = Read32(0xE0042004) &amp; (~0xE0);                                // Read DBGMCU_CR and clear trace setup
            Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
          </block>
        </sequence>

        <sequence name="ConfigureTraceSWOPin">
          <block>
            __var pin     = 0;
            __var port    = 0;
            __var portAdr = 0;
            __var pos     = 0;

            __var SWO_Pin = 0x00010003;          // PB3
          </block>

            <!-- configure SWO -->
            <block info="configure SWO">
              pin     =               ((SWO_Pin            ) &amp; 0x0000FFFF);
              port    =               ((SWO_Pin &gt;&gt; 16) &amp; 0x0000FFFF);
              portAdr = 0x40020000 + (((SWO_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
        </sequence>

        <sequence name="ConfigureTraceTPIUPins">
          <block>
            __var pin     = 8;
            __var port    = 0;
            __var portAdr = 0;
            __var pos     = 0;

            __var width   = (__traceout &amp; 0x003F0000) &gt;&gt; 16;
          </block>

            <!-- configure TRACECLK -->
            <block info="configure TRACECLK">
              pin     =                (TraceClk_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceClk_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x40020000 + (((TraceClk_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>

          <control if="width &gt;= 1" info="TPIU port width 1">
            <!-- configure TRACED0 -->
            <block info="configure TRACED0">
              pin     =                (TraceD0_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD0_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x40020000 + (((TraceD0_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>

          <control if="width &gt;= 2" info="TPIU port width 2">
            <!-- configure TRACED1 -->
            <block info="configure TRACED1">
              pin     =                (TraceD1_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD1_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x40020000 + (((TraceD1_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>

          <control if="width &gt;= 4" info="TPIU port width 4">
            <!-- configure TRACED2 -->
            <block info="configure TRACED2">
              pin     =                (TraceD2_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD2_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x40020000 + (((TraceD2_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>

            <!-- configure TRACED3 -->
            <block info="configure TRACED3">
              pin     =                (TraceD3_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD3_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x40020000 + (((TraceD3_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB1ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>
        </sequence>
      </sequences>

      <feature type="Timer"         n="12"      m="16"/>
      <feature type="Timer"         n="2"       m="32"/>
      <feature type="WDT"           n="2"/>
      <feature type="RTC"           n="32768"/>
      <feature type="DAC"           n="2"       m="12"/>
      <feature type="SPI"           n="3"       m="30000000"/>
      <feature type="I2S"           n="2"/>
      <feature type="USART"         n="4"       m="7500000"/>
      <feature type="UART"          n="2"       m="7500000"/>
      <feature type="USBOTG"        n="1"                           name="USB OTG Full Speed"/>
      <feature type="USBOTG"        n="1"                           name="USB OTG High Speed"/>
      <feature type="CAN"           n="2"/>
      <feature type="SDIO"          n="1"                           name="Secure Digital IO"/>
      <feature type="RNG"           n="1"/>
      <feature type="VCC"           n="1.80"    m="3.60"/>
      <feature type="Temp"          n="-40"     m="85"/>
      <feature type="Temp"          n="-40"     m="105"/>

      <!-- ************************  Subfamily 'STM32F205'  **************************** -->
      <subFamily DsubFamily="STM32F205">
        <processor Dclock="120000000"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"  define="STM32F205xx"/>
        <debug svd="CMSIS/SVD/STM32F20x.svd"/>

        <debugvars configfile="CMSIS/Debug/STM32F205_207_215_217.dbgconf">
          __var DbgMCU_CR      = 0x00000007;   // DBGMCU_CR: DBG_SLEEP, DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1_Fz = 0x00000000;   // DGBMCU_APB1_FZ: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB2_Fz = 0x00000000;   // DGBMCU_APB2_FZ: All Peripherals Operate as in Normal Mode
          __var TraceClk_Pin   = 0x00040002;   // PE2
          __var TraceD0_Pin    = 0x00040003;   // PE3
          __var TraceD1_Pin    = 0x00040004;   // PE4
          __var TraceD2_Pin    = 0x00040005;   // PE5
          __var TraceD3_Pin    = 0x00040006;   // PE6
        </debugvars>

        <book name="Documentation/CD00225773.pdf" title="STM32F205/207/215/217 Reference Manual"/>
        <book name="Documentation/CD00237391.pdf" title="STM32F205/207 Data Sheet"/>
        <book name="Documentation/DM00027213.pdf" title="STM32F205/207/215/217 Errata Sheet"/>

        <feature type="I2C"           n="3"/>

        <!-- *************************  Device 'STM32F205RB'  ***************************** -->
        <device Dname="STM32F205RB">
          <memory id="IROM1"                               start="0x08000000" size="0x00020000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00010000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00020000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F205RBTx"> <feature type="QFP" n="64"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205RC'  ***************************** -->
        <device Dname="STM32F205RC">
          <memory id="IROM1"                               start="0x08000000" size="0x00040000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00018000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F205RCTx"> <feature type="QFP" n="64"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205RE'  ***************************** -->
        <device Dname="STM32F205RE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F205RETx"> <feature type="QFP" n="64"/> </variant>
          <variant Dvariant="STM32F205REYx"> <feature type="CSP" n="66"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205RF'  ***************************** -->
        <device Dname="STM32F205RF">
          <memory id="IROM1"                               start="0x08000000" size="0x000C0000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F205RFTx"> <feature type="QFP" n="64"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205RG'  ***************************** -->
        <device Dname="STM32F205RG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F205RGTx"> <feature type="QFP" n="64"/> </variant>
          <variant Dvariant="STM32F205RGYx"> <feature type="CSP" n="66"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205VB'  ***************************** -->
        <device Dname="STM32F205VB">
          <memory id="IROM1"                               start="0x08000000" size="0x00020000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00010000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00020000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205VBTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205VC'  ***************************** -->
        <device Dname="STM32F205VC">
          <memory id="IROM1"                               start="0x08000000" size="0x00040000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00018000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205VCTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205VE'  ***************************** -->
        <device Dname="STM32F205VE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205VETx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205VF'  ***************************** -->
        <device Dname="STM32F205VF">
          <memory id="IROM1"                               start="0x08000000" size="0x000C0000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205VFTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205VG'  ***************************** -->
        <device Dname="STM32F205VG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205VGTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205ZC'  ***************************** -->
        <device Dname="STM32F205ZC">
          <memory id="IROM1"                               start="0x08000000" size="0x00040000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00018000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205ZCTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205ZE'  ***************************** -->
        <device Dname="STM32F205ZE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205ZETx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205ZF'  ***************************** -->
        <device Dname="STM32F205ZF">
          <memory id="IROM1"                               start="0x08000000" size="0x000C0000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205ZFTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F205ZG'  ***************************** -->
        <device Dname="STM32F205ZG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F205ZGTx"> <feature type="QFP" n="144"/> </variant>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32F207'  **************************** -->
      <subFamily DsubFamily="STM32F207">
        <processor Dclock="120000000"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"  define="STM32F207xx"/>
        <debug svd="CMSIS/SVD/STM32F20x.svd"/>

        <debugvars configfile="CMSIS/Debug/STM32F205_207_215_217.dbgconf">
          __var DbgMCU_CR      = 0x00000007;   // DBGMCU_CR: DBG_SLEEP, DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1_Fz = 0x00000000;   // DGBMCU_APB1_FZ: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB2_Fz = 0x00000000;   // DGBMCU_APB2_FZ: All Peripherals Operate as in Normal Mode
          __var TraceClk_Pin   = 0x00040002;   // PE2
          __var TraceD0_Pin    = 0x00040003;   // PE3
          __var TraceD1_Pin    = 0x00040004;   // PE4
          __var TraceD2_Pin    = 0x00040005;   // PE5
          __var TraceD3_Pin    = 0x00040006;   // PE6
        </debugvars>

        <book name="Documentation/CD00225773.pdf" title="STM32F205/207/215/217 Reference Manual"/>
        <book name="Documentation/CD00237391.pdf" title="STM32F205/207 Data Sheet"/>
        <book name="Documentation/DM00027213.pdf" title="STM32F205/207/215/217 Errata Sheet"/>

        <feature type="I2C"           n="2"/>
        <feature type="ETH"           n="1"       m="100000000"/>
        <feature type="ExtBus"        n="16"/>
        <feature type="Camera"        n="14"/>

        <!-- *************************  Device 'STM32F207VC'  ***************************** -->
        <device Dname="STM32F207VC">
          <memory id="IROM1"                               start="0x08000000" size="0x00040000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F207VCTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207VE'  ***************************** -->
        <device Dname="STM32F207VE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F207VETx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207VF'  ***************************** -->
        <device Dname="STM32F207VF">
          <memory id="IROM1"                               start="0x08000000" size="0x000C0000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F207VFTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207VG'  ***************************** -->
        <device Dname="STM32F207VG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F207VGTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207ZC'  ***************************** -->
        <device Dname="STM32F207ZC">
          <memory id="IROM1"                               start="0x08000000" size="0x00040000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F207ZCTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207ZE'  ***************************** -->
        <device Dname="STM32F207ZE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F207ZETx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207ZF'  ***************************** -->
        <device Dname="STM32F207ZF">
          <memory id="IROM1"                               start="0x08000000" size="0x000C0000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F207ZFTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207ZG'  ***************************** -->
        <device Dname="STM32F207ZG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F207ZGTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207IC'  ***************************** -->
        <device Dname="STM32F207IC">
          <memory id="IROM1"                               start="0x08000000" size="0x00040000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00040000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F207ICTx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F207ICHx"> <feature type="BGA" n="176"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207IE'  ***************************** -->
        <device Dname="STM32F207IE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F207IETx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F207IEHx"> <feature type="BGA" n="176"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207IF'  ***************************** -->
        <device Dname="STM32F207IF">
          <memory id="IROM1"                               start="0x08000000" size="0x000C0000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x000C0000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F207IFTx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F207IFHx"> <feature type="BGA" n="176"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F207IG'  ***************************** -->
        <device Dname="STM32F207IG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F207IGTx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F207IGHx"> <feature type="BGA" n="176"/> </variant>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32F215'  **************************** -->
      <subFamily DsubFamily="STM32F215">
        <processor Dclock="120000000"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"  define="STM32F215xx"/>
        <debug svd="CMSIS/SVD/STM32F21x.svd"/>

        <debugvars configfile="CMSIS/Debug/STM32F205_207_215_217.dbgconf">
          __var DbgMCU_CR      = 0x00000007;   // DBGMCU_CR: DBG_SLEEP, DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1_Fz = 0x00000000;   // DGBMCU_APB1_FZ: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB2_Fz = 0x00000000;   // DGBMCU_APB2_FZ: All Peripherals Operate as in Normal Mode
          __var TraceClk_Pin   = 0x00040002;   // PE2
          __var TraceD0_Pin    = 0x00040003;   // PE3
          __var TraceD1_Pin    = 0x00040004;   // PE4
          __var TraceD2_Pin    = 0x00040005;   // PE5
          __var TraceD3_Pin    = 0x00040006;   // PE6
        </debugvars>

        <book name="Documentation/CD00225773.pdf" title="STM32F205/207/215/217 Reference Manual"/>
        <book name="Documentation/CD00263874.pdf" title="STM32F215/217 Data Sheet"/>
        <book name="Documentation/DM00027213.pdf" title="STM32F205/207/215/217 Errata Sheet"/>

        <feature type="I2C"           n="3"/>
        <feature type="Crypto"        n="1"                           name="Hardware acceleration for AES 128, 192, 256, Triple DES, HASH (MD5, SHA-1)"/>

        <!-- *************************  Device 'STM32F215RE'  ***************************** -->
        <device Dname="STM32F215RE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F215RETx"> <feature type="QFP" n="64"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F215RG'  ***************************** -->
        <device Dname="STM32F215RG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="51"/>

          <variant Dvariant="STM32F215RGTx"> <feature type="QFP" n="64"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F215VE'  ***************************** -->
        <device Dname="STM32F215VE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F215VETx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F215VG'  ***************************** -->
        <device Dname="STM32F215VG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F215VGTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F215ZE'  ***************************** -->
        <device Dname="STM32F215ZE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F215ZETx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F215ZG'  ***************************** -->
        <device Dname="STM32F215ZG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>
          <feature type="ExtBus"        n="16"/>

          <variant Dvariant="STM32F215ZGTx"> <feature type="QFP" n="144"/> </variant>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32F217'  **************************** -->
      <subFamily DsubFamily="STM32F217">
        <processor Dclock="120000000"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"  define="STM32F217xx"/>
        <debug svd="CMSIS/SVD/STM32F21x.svd"/>

        <debugvars configfile="CMSIS/Debug/STM32F205_207_215_217.dbgconf">
          __var DbgMCU_CR      = 0x00000007;   // DBGMCU_CR: DBG_SLEEP, DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1_Fz = 0x00000000;   // DGBMCU_APB1_FZ: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB2_Fz = 0x00000000;   // DGBMCU_APB2_FZ: All Peripherals Operate as in Normal Mode
          __var TraceClk_Pin   = 0x00040002;   // PE2
          __var TraceD0_Pin    = 0x00040003;   // PE3
          __var TraceD1_Pin    = 0x00040004;   // PE4
          __var TraceD2_Pin    = 0x00040005;   // PE5
          __var TraceD3_Pin    = 0x00040006;   // PE6
        </debugvars>

        <book name="Documentation/CD00225773.pdf" title="STM32F205/207/215/217 Reference Manual"/>
        <book name="Documentation/CD00263874.pdf" title="STM32F215/217 Data Sheet"/>
        <book name="Documentation/DM00027213.pdf" title="STM32F205/207/215/217 Errata Sheet"/>

        <feature type="I2C"           n="3"/>
        <feature type="ETH"           n="1"       m="100000000"/>
        <feature type="Crypto"        n="1"                           name="Hardware acceleration for AES 128, 192, 256, Triple DES, HASH (MD5, SHA-1)"/>
        <feature type="ExtBus"        n="16"/>
        <feature type="Camera"        n="14"/>

        <!-- *************************  Device 'STM32F217VE'  ***************************** -->
        <device Dname="STM32F217VE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F217VETx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F217VG'  ***************************** -->
        <device Dname="STM32F217VG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="16"      m="12"/>
          <feature type="IOs"           n="82"/>

          <variant Dvariant="STM32F217VGTx"> <feature type="QFP" n="100"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F217ZE'  ***************************** -->
        <device Dname="STM32F217ZE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F217ZETx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F217ZG'  ***************************** -->
        <device Dname="STM32F217ZG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="114"/>

          <variant Dvariant="STM32F217ZGTx"> <feature type="QFP" n="144"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F217IE'  ***************************** -->
        <device Dname="STM32F217IE">
          <memory id="IROM1"                               start="0x08000000" size="0x00080000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00080000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F217IETx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F217IEHx"> <feature type="BGA" n="176"/> </variant>
        </device>

        <!-- *************************  Device 'STM32F217IG'  ***************************** -->
        <device Dname="STM32F217IG">
          <memory id="IROM1"                               start="0x08000000" size="0x00100000" startup="1" default="1"/>
          <memory id="IRAM1"                               start="0x20000000" size="0x00020000" init   ="0" default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_1024.FLM" start="0x08000000" size="0x00100000"             default="1"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OPT.FLM"  start="0x1FFFC000" size="0x00000010"             default="0"/>
          <algorithm name="CMSIS/Flash/STM32F2xx_OTP.FLM"  start="0x1FFF7800" size="0x00000210"             default="0"/>

          <feature type="ADC"           n="24"      m="12"/>
          <feature type="IOs"           n="140"/>

          <variant Dvariant="STM32F217IGTx"> <feature type="QFP" n="176"/> </variant>
          <variant Dvariant="STM32F217IGHx"> <feature type="BGA" n="176"/> </variant>
        </device>
      </subFamily>
    </family>
  </devices>

  <boards>
    <board vendor="Keil" name="MCBSTM32F200" revision="Ver 1.1" salesContact="sales.intl@keil.com" orderForm="http://www.keil.com/product/prices.asp?MCBSTM32F200=ON">
      <description>Keil MCBSTM32F200 Development Board</description>
      <image small="MDK/Boards/Keil/MCBSTM32F200/Documentation/mcbstm32f200_board_small.jpg" large="MDK/Boards/Keil/MCBSTM32F200/Documentation/mcbstm32f200_board_large.jpg"/>
      <book category="overview"  name="http://www.keil.com/mcbstm32f200/" title="MCBSTM32F200 Evaluation Board Web Page"/>
      <book category="schematic" name="MDK/Boards/Keil/MCBSTM32F200/Documentation/mcbstm32f200-schematics.pdf" title="Schematics V1.1"/>
      <book category="schematic" name="MDK/Boards/Keil/MCBSTM32F200/Documentation/mcbstm32f200-schematics_V1.2.pdf" title="Schematics V1.2"/>
      <book category="manual"    name="MDK/Boards/Keil/MCBSTM32F200/Documentation/mcbstm32f200.chm" title="User Manual"/>
      <mountedDevice    deviceIndex="0" Dvendor="STMicroelectronics:13" Dname="STM32F207IG"/>
      <compatibleDevice deviceIndex="0" Dvendor="STMicroelectronics:13" DsubFamily="STM32F207"/>
      <compatibleDevice deviceIndex="0" Dvendor="STMicroelectronics:13" DsubFamily="STM32F217"/>
      <compatibleDevice deviceIndex="0" Dvendor="STMicroelectronics:13" DsubFamily="STM32F205"/>
      <compatibleDevice deviceIndex="0" Dvendor="STMicroelectronics:13" DsubFamily="STM32F215"/>
      <feature type="XTAL"            n="8000000"/>
      <feature type="PWR"             n="5"              name="USB Powered"/>
      <feature type="PWR"             n="8"  m="12"      name="External Supply"/>
      <feature type="RAM"             n="1"              name="2 MByte SRAM"/>
      <feature type="ROM"             n="1"              name="8 MByte NOR Flash"/>
      <feature type="ROM"             n="1"              name="512 MByte NAND Flash"/>
      <feature type="ROM"             n="1"              name="8 kByte I2C EEPROM"/>
      <feature type="USB"             n="1"              name="USB 2.0 Full Speed, Host/Device, OTG"/>
      <feature type="USB"             n="1"              name="USB 2.0 High Speed, Host/Device, OTG"/>
      <feature type="CAN"             n="1"/>
      <feature type="RS232"           n="1"/>
      <feature type="ETH"             n="1"              name="10/100 Ethernet Port"/>
      <feature type="GLCD"            n="1"  m="240.320" name="2.4 inch Color QVGA TFT LCD with resistive touchscreen"/>
      <feature type="Gyro"            n="1"              name="3-axis digital output gyroscope"/>
      <feature type="Joystick"        n="1"              name="5-position Joystick"/>
      <feature type="Accelerometer"   n="1"              name="3-axis digital Accelerometer"/>
      <feature type="Poti"            n="1"              name="Analog Voltage Control for ADC Input (potentiometer)"/>
      <feature type="LineIn"          n="2"              name="Audio CODEC with Line-In/Out and Speaker/Microphone"/>
      <feature type="LineOut"         n="2"              name="Audio CODEC with Line-In/Out and Speaker/Microphone"/>
      <feature type="Other"           n="1"              name="Digital Microphone"/>
      <feature type="Camera"          n="1"              name="Digital VGA Camera"/>
      <feature type="Button"          n="4"              name="Push-Buttons for Reset, Wakeup, Tamper and User"/>
      <feature type="LED"             n="8"              name="LEDs directly connected to port pins"/>
      <debugInterface adapter="JTAG/SW" connector="20 pin JTAG (0.1 inch connector)"/>
      <debugInterface adapter="JTAG/SW" connector="10 pin Cortex debug (0.05 inch connector)"/>
      <debugInterface adapter="JTAG/SW" connector="20-pin Cortex debug + ETM Trace (0.05 inch connector)"/>
    </board>
  </boards>

  <conditions>
    <condition id="STM32F2">
      <description>STMicroelectronics STM32F2 Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32F2*"/>
    </condition>
    <condition id="STM32F205xx">
      <description>STMicroelectronics STM32F205xx Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32F205*"/>
    </condition>
    <condition id="STM32F207xx">
      <description>STMicroelectronics STM32F207xx Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32F207*"/>
    </condition>
    <condition id="STM32F215xx">
      <description>STMicroelectronics STM32F215xx Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32F215*"/>
    </condition>
    <condition id="STM32F217xx">
      <description>STMicroelectronics STM32F217xx Series devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32F217*"/>
    </condition>

    <condition id="STM32F2x5">
      <description>STMicroelectronics STM32F205/215 Series devices</description>
      <accept  condition="STM32F205xx"/>
      <accept  condition="STM32F215xx"/>
    </condition>
    <condition id="STM32F2x7">
      <description>STMicroelectronics STM32F207/217 Series devices</description>
      <accept  condition="STM32F207xx"/>
      <accept  condition="STM32F217xx"/>
    </condition>
    <condition id="STM32F21x">
      <description>STMicroelectronics STM32F215/217 Series devices</description>
      <accept  condition="STM32F215xx"/>
      <accept  condition="STM32F217xx"/>
    </condition>

    <condition id="STM32F2_ARMCC">
      <description>filter for STM32F2 devices and the ARM compiler</description>
      <require condition="STM32F2"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="STM32F205xx_ARMCC">
      <description>filter for STM32F205xx devices and the ARM compiler</description>
      <require condition="STM32F205xx"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32F205xx_GCC">
      <description>filter for STM32F205xx devices and the GCC compiler</description>
      <require condition="STM32F205xx"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32F205xx_IAR">
      <description>filter for STM32F205xx devices and the IAR compiler</description>
      <require condition="STM32F205xx"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="STM32F207xx_ARMCC">
      <description>filter for STM32F207xx devices and the ARM compiler</description>
      <require condition="STM32F207xx"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32F207xx_GCC">
      <description>filter for STM32F207xx devices and the GCC compiler</description>
      <require condition="STM32F207xx"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32F207xx_IAR">
      <description>filter for STM32F207xx devices and the IAR compiler</description>
      <require condition="STM32F207xx"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="STM32F215xx_ARMCC">
      <description>filter for STM32F215xx devices and the ARM compiler</description>
      <require condition="STM32F215xx"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32F215xx_GCC">
      <description>filter for STM32F215xx devices and the GCC compiler</description>
      <require condition="STM32F215xx"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32F215xx_IAR">
      <description>filter for STM32F215xx devices and the IAR compiler</description>
      <require condition="STM32F215xx"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="STM32F217xx_ARMCC">
      <description>filter for STM32F217xx devices and the ARM compiler</description>
      <require condition="STM32F217xx"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="STM32F217xx_GCC">
      <description>filter for STM32F217xx devices and the GCC compiler</description>
      <require condition="STM32F217xx"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="STM32F217xx_IAR">
      <description>filter for STM32F217xx devices and the IAR compiler</description>
      <require condition="STM32F217xx"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="STM32F2 CMSIS">
      <description>STMicroelectronics STM32F2 Device and CMSIS-CORE</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
    </condition>
    <condition id="STM32F2 CMSIS RTOS">
      <description>STMicroelectronics STM32F2 Device and CMSIS-CORE with RTOS</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="CMSIS"  Cgroup="RTOS"/>
    </condition>
    <condition id="STM32F2 CMSIS RTOS I2C_Driver">
      <description>STMicroelectronics STM32F2 Device and CMSIS-CORE with RTOS and I2C Driver</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <accept  Cclass="CMSIS" Cgroup="RTOS"/>
      <accept  Cclass="CMSIS" Cgroup="RTOS2"/>
      <require Cclass="CMSIS Driver" Cgroup="I2C"/>
    </condition>
    <condition id="STM32F2 CMSIS I2C_Driver">
      <description>STMicroelectronics STM32F2 Device and CMSIS-CORE with I2C Driver</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="CMSIS Driver" Cgroup="I2C"/>
    </condition>
    <condition id="STM32F2 CMSIS HAL">
      <description>STMicroelectronics STM32F2 Device and CMSIS-CORE with HAL</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
    </condition>

    <condition id="STM32F2 Framework Classic">
      <description>STM32CubeF2 Classic Framework</description>
      <require condition="STM32F2 HAL Common"/>
    </condition>

    <condition id="STM32F2 HAL Common">
      <description>STMicroelectronics STM32F2 Device and HAL Common</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube Framework"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
    </condition>

    <condition id="STM32F2 HAL">
      <description>STMicroelectronics STM32F2 Device and HAL</description>
      <require condition="STM32F2"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
    </condition>
    <condition id="STM32F2x7 HAL">
      <description>STMicroelectronics STM32F207/217 Device and HAL</description>
      <require condition="STM32F2x7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
    </condition>

    <condition id="STM32F2 HAL GPIO">
      <description>STMicroelectronics STM32F2 Device and HAL with GPIO</description>
      <require condition="STM32F2"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
    </condition>
    <condition id="STM32F2 HAL GPIO ADC">
      <description>STMicroelectronics STM32F2 Device and HAL with GPIO and ADC</description>
      <require condition="STM32F2"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="ADC"/>
    </condition>
    <condition id="STM32F2 HAL GPIO SRAM">
      <description>STMicroelectronics STM32F2 Device and HAL with GPIO and SRAM</description>
      <require condition="STM32F2"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="SRAM"/>
    </condition>

    <condition id="STM32F2 HAL DMA">
      <description>STMicroelectronics STM32F2 Device and HAL with DMA</description>
      <require condition="STM32F2"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
    </condition>
    <condition id="STM32F2x7 HAL DMA">
      <description>STMicroelectronics STM32F207/217 Device and HAL with DMA</description>
      <require condition="STM32F2x7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
    </condition>
    <condition id="STM32F21x HAL DMA">
      <description>STMicroelectronics STM32F215/217 Device and HAL with DMA</description>
      <require condition="STM32F21x"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
    </condition>
    <condition id="STM32F2 HAL DMA RCC">
      <description>STMicroelectronics STM32F2 Device and HAL with DMA and RCC</description>
      <require condition="STM32F2"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
    </condition>
    <condition id="STM32F2x7 HAL RCC">
      <description>STMicroelectronics STM32F207/217 Device and HAL with RCC</description>
      <require condition="STM32F2x7"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
    </condition>

    <condition id="STM32F2 HAL GPIO DMA DCMI I2C_Driver">
      <description>STMicroelectronics STM32F2 Device and HAL with GPIO, DMA, DCMI and CMSIS I2C Driver</description>
      <require condition="STM32F2"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DCMI"/>
      <require Cclass="CMSIS Driver" Cgroup="I2C"/>
    </condition>

    <condition id="STM32F2 HAL GPIO SRAM LCD_16">
      <description>STMicroelectronics STM32F2 Device and HAL with GPIO and SRAM and LCD (16-bit IF)</description>
      <require condition="STM32F2"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="SRAM"/>
      <require Cclass="Graphics"     Cgroup="Display" Cvariant="16-bit IF"/>
    </condition>

    <condition id="STM32F2 CMSIS_Driver CAN">
      <description>Requirement for CMSIS CAN Driver</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
    </condition>
    <condition id="STM32F2 CMSIS_Driver SPI">
      <description>Requirement for CMSIS SPI Driver</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="SPI"/>
    </condition>
    <condition id="STM32F2 CMSIS_Driver USART">
      <description>Requirement for CMSIS USART Driver</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="USART"/>
    </condition>
    <condition id="STM32F2 CMSIS_Driver I2C">
      <description>Requirement for CMSIS I2C Driver</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2C"/>
    </condition>
    <condition id="STM32F2 CMSIS_Driver MCI">
      <description>Requirement for CMSIS MCI Driver</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
    </condition>
    <condition id="STM32F2 CMSIS_Driver ETH_MAC">
      <description>Requirement for CMSIS ETH_MAC Driver</description>
      <require condition="STM32F2x7"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
    </condition>
    <condition id="STM32F2 CMSIS_Driver USB0">
      <description>Requirement for CMSIS USB0 Driver</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
    </condition>
    <condition id="STM32F2 CMSIS_Driver USB1">
      <description>Requirement for CMSIS USB1 Driver</description>
      <require condition="STM32F2"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
    </condition>
  </conditions>

  <examples>
    <!-- MCBSTM32F200 Development Board -->
    <example name="CMSIS-RTOS Blinky" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Blinky" version="1.0.0">
      <description>CMSIS-RTOS Blinky example</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <category>Getting Started</category>
        <category>CMSIS-RTX</category>
      </attributes>
    </example>

    <example name="CMSIS-RTOS Blinky with STM32CubeMX" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/CubeMX/Blinky" version="1.0.0">
      <description>CMSIS-RTOS Blinky example configured with STM32CubeMX</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <category>Getting Started</category>
        <category>CMSIS-RTX</category>
      </attributes>
    </example>

    <example name="Demo" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Demo" version="1.0.0">
      <description>Demo example</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="Demo.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>

    <example name="emWin Example" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/emWin/Example" version="1.0.0">
      <description>emWin Graphics simple example</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="Example.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Graphics" Cgroup="CORE"/>
        <category>Middleware</category>
        <category>Graphics</category>
        <keyword>emWin</keyword>
      </attributes>
    </example>

    <example name="emWin GUI Demo" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/emWin/GUIDemo" version="1.0.0">
      <description>emWin Graphics Demo example</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="GUIDemo.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Graphics" Cgroup="CORE"/>
        <category>Middleware</category>
        <category>Graphics</category>
        <keyword>emWin</keyword>
      </attributes>
    </example>

    <example name="emWin VNC Server with STM32CubeMX" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/CubeMX/emWin/GUI_VNC" version="1.0.0">
      <description>emWin VNC Server example configured with STM32CubeMX</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="GUI_VNC.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Graphics" Cgroup="CORE"/>
        <category>Middleware</category>
        <category>Graphics</category>
        <keyword>emWin</keyword>
      </attributes>
    </example>

    <example name="CAN" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/CAN/CAN" version="1.0.0">
      <description>CAN example that sends and receives data messages</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="CAN.uvprojx"/>
      </project>
      <attributes>
        <category>Middleware</category>
        <category>CAN</category>
      </attributes>
    </example>

    <example name="CAN RTR" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/CAN/CAN_RTR" version="1.0.0">
      <description>CAN example that demonstrates Remote Transmission Request (RTR) usage</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="CAN_RTR.uvprojx"/>
      </project>
      <attributes>
        <category>Middleware</category>
        <category>CAN</category>
      </attributes>
    </example>

    <example name="USB Device HID" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/USB/Device/HID" version="1.0.1">
      <description>USB Human Interface Device providing access from PC to board LEDs and push buttons</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="HID.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Device" Csub="HID"/>
        <category>Middleware</category>
        <category>USB Device</category>
        <keyword>HID</keyword>
      </attributes>
    </example>

    <example name="USB Device Mass Storage" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/USB/Device/MassStorage" version="1.0.1">
      <description>USB Mass Storage Device using SD/MMC Memory Card or RAM as storage media</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="MassStorage.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Device" Csub="MSC"/>
        <category>Middleware</category>
        <category>USB Device</category>
        <keyword>Memory Disk</keyword>
      </attributes>
    </example>

    <example name="USB Device Virtual COM" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/USB/Device/VirtualCOM" version="1.0.1">
      <description>Bridge between PC USB Virtual COM Port and UART port</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="VirtualCOM.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Device" Csub="CDC"/>
        <category>Middleware</category>
        <category>USB Device</category>
        <keyword>Virtual COM</keyword>
      </attributes>
    </example>
    
    <example name="USB Device WinUSB Echo" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/USB/Device/WinUSB_Echo" version="1.0.0">
      <description>WinUSB Class Device echoing bulk endpoint data (implemented as Custom Class)</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="WinUSB_Echo.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Device" Csub="Custom Class"/>
        <category>Middleware</category>
        <category>USB Device</category>
        <keyword>WinUSB_Echo</keyword>
      </attributes>
    </example>

    <example name="USB Host Mass Storage" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/USB/Host/MassStorage" version="1.0.1">
      <description>USB Host file manipulation example: create, read, copy, delete files from USB Mass Storage Device and format the storage device</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="MassStorage.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Host" Csub="MSC"/>
        <category>Middleware</category>
        <category>USB Host</category>
        <keyword>Mass Storage</keyword>
      </attributes>
    </example>

    <example name="USB Host Keyboard" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/USB/Host/Keyboard" version="1.0.1">
      <description>Measure example using USB HID Keyboard as input device</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="Keyboard.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="USB" Cgroup="Host" Csub="HID"/>
        <category>Middleware</category>
        <category>USB Host</category>
        <keyword>Keyboard</keyword>
      </attributes>
    </example>

    <example name="File System Demo" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/FileSystem/File_Demo" version="1.0.1">
      <description>File manipulation example: create, read, copy, delete files on any enabled drive (SD/MMC Card, NOR/NAND Flash, RAM) and format each drive</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="File_Demo.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="File System" Cgroup="Drive"/>
        <category>Middleware</category>
        <category>File System</category>
        <keyword>SD/MMC Card</keyword>
      </attributes>
    </example>

    <example name="BSD Client IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/Network/BSD_Client" version="1.0.0">
      <description>Example using BSD sockets to send commands to remote server</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="BSD_Client.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Socket" Csub="BSD"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>BSD</keyword>
      </attributes>
    </example>

    <example name="BSD Server IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/Network/BSD_Server" version="1.0.0">
      <description>Example using BSD sockets to accept commands from remote clients</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="BSD_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Socket" Csub="BSD"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>BSD</keyword>
      </attributes>
    </example>

    <example name="FTP Server IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/Network/FTP_Server" version="1.0.0">
      <description>File Server using FTP protocol with SD/MMC Memory Card as storage media</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="FTP_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="FTP Server"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>FTP</keyword>
      </attributes>
    </example>

    <example name="HTTP Server IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/Network/HTTP_Server" version="1.0.0">
      <description>Compact Web Server with CGI interface</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="HTTP_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="Web Server Compact"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>Web Server</keyword>
        <keyword>HTTP</keyword>
      </attributes>
    </example>
    
    <example name="SNMP Agent IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/Network/SNMP_Agent" version="1.0.1">
      <description>Example showing how to use a Simple Network Management Protocol (SNMP)</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="SNMP_Agent.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="SNMP Agent"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>SNMP</keyword>
      </attributes>
    </example>

    <example name="HTTP Upload IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/Network/HTTP_Upload" version="1.0.0">
      <description>Web Server with CGI interface and SD/MMC Memory Card as storage media</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="HTTP_Upload.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="Web Server"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>Web Server</keyword>
        <keyword>HTTP</keyword>
      </attributes>
    </example>

    <example name="SMTP Client IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/Network/SMTP_Client" version="1.0.0">
      <description>Example showing how to compose and send emails</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="SMTP_Client.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="SMTP Client"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>SMTP</keyword>
      </attributes>
    </example>

    <example name="Telnet Server IPv4/IPv6" doc="Abstract.txt" folder="MDK/Boards/Keil/MCBSTM32F200/Middleware/Network/Telnet_Server" version="1.0.0">
      <description>Command-line Host service example using Telnet protocol</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="Telnet_Server.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="Network" Cgroup="Service" Csub="Telnet Server"/>
        <category>Middleware</category>
        <category>Network</category>
        <keyword>Telnet</keyword>
      </attributes>
    </example>
  </examples>

  <generators>
    <!-- This generator is launched if any component referencing this generator by 'id' is selected and the specified <gpdsc> file does not exist -->
    <generator id="STM32CubeMX">
      <description>ST Microelectronics: STCubeMX Environment</description>
      <command>MDK/CubeMX/STM32CubeMxLauncher.exe</command> <!-- path is specified either absolute or relative to PDSC or GPDSC file -->
      <workingDir>$PRTE/Device</workingDir> <!-- path is specified either absolute or relative to PDSC or GPDSC file. If not specified it is the project directory configured by the environment -->
      <arguments>
        <!-- D = Device (Dname/Dvariant as configured by environment) -->
        <argument>$D</argument>
        <!-- Project path and project name (as configured by environment) -->
        <argument>#P</argument>
        <!-- absolute or relative to workingDir. $S = Device Family Pack base folder -->
        <argument>$S</argument>
      </arguments>
      <!-- path is either absolute or relative to working directory -->
      <gpdsc name="$PRTE/Device/$D/FrameworkCubeMX.gpdsc"/>
    </generator>
  </generators>

  <taxonomy>
    <description Cclass="Device" Cgroup="STM32Cube HAL">STM32F2xx Hardware Abstraction Layer (HAL) Drivers</description>
  </taxonomy>

  <apis>
    <api Cclass="Device" Cgroup="STM32Cube Framework" Capiversion="1.0.0" exclusive="1">
      <description>STM32Cube Framework</description>
      <files>
        <file category="doc" name="MDK/CubeMX/Documentation/index.html"/>
      </files>
    </api>
  </apis>

  <components>
    <component Cclass="Device" Cgroup="Startup" Cversion="2.2.1" condition="STM32F2 CMSIS HAL">  <!-- Cversion is necessary -->
      <description>System Startup for STMicroelectronics STM32F2 Series</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_DEVICE_STARTUP_STM32F2XX    /* Device Startup for STM32F2 */
      </RTE_Components_h>

      <files>
        <!--  include folder -->
        <file category="include" name="Drivers/CMSIS/Device/ST/STM32F2xx/Include/"/>

        <!-- Flash Option Bytes templates -->
        <file category="source" condition="STM32F2_ARMCC"  name="MDK/Device/Source/ARM/STM32F2xx_OPT.s"  attr="template"  select="Flash Option Bytes"/>
        <file category="source" condition="STM32F2_ARMCC"  name="MDK/Device/Source/ARM/STM32F2xx_OTP.s"  attr="template"  select="Flash One-Time programmable Bytes"/>

        <file category="header" name="Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"/>

        <!-- startup files -->
        <!-- ARM Compiler Toolchain -->
        <file category="source" condition="STM32F205xx_ARMCC"  name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/arm/startup_stm32f205xx.s" attr="config" version="2.2.1"/>
        <file category="source" condition="STM32F207xx_ARMCC"  name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/arm/startup_stm32f207xx.s" attr="config" version="2.2.1"/>
        <file category="source" condition="STM32F215xx_ARMCC"  name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/arm/startup_stm32f215xx.s" attr="config" version="2.2.1"/>
        <file category="source" condition="STM32F217xx_ARMCC"  name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/arm/startup_stm32f217xx.s" attr="config" version="2.2.1"/>
        <!-- GCC Toolchain -->
        <file category="source" condition="STM32F205xx_GCC"    name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/gcc/startup_stm32f205xx.S" attr="config" version="2.2.1"/>
        <file category="source" condition="STM32F207xx_GCC"    name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/gcc/startup_stm32f207xx.S" attr="config" version="2.2.1"/>
        <file category="source" condition="STM32F215xx_GCC"    name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/gcc/startup_stm32f215xx.S" attr="config" version="2.2.1"/>
        <file category="source" condition="STM32F217xx_GCC"    name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/gcc/startup_stm32f217xx.S" attr="config" version="2.2.1"/>
        <!-- IAR Toolchain -->
        <file category="source" condition="STM32F205xx_IAR"    name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/iar/startup_stm32f205xx.s" attr="config" version="2.2.1"/>
        <file category="source" condition="STM32F207xx_IAR"    name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/iar/startup_stm32f207xx.s" attr="config" version="2.2.1"/>
        <file category="source" condition="STM32F215xx_IAR"    name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/iar/startup_stm32f215xx.s" attr="config" version="2.2.1"/>
        <file category="source" condition="STM32F217xx_IAR"    name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/iar/startup_stm32f217xx.s" attr="config" version="2.2.1"/>

        <!-- system file -->
        <file category="source" name="Drivers/CMSIS/Device/ST/STM32F2xx/Source/Templates/system_stm32f2xx.c" attr="config" version="2.2.1"/>
      </files>
    </component>

    <component Cclass="Device" Cgroup="STM32Cube Framework" Csub="Classic" Cversion="1.2.1" Capiversion="1.0.0" condition="STM32F2 Framework Classic">
      <description>Configuration via RTE_Device.h</description>
      <RTE_Components_h>
        #define RTE_DEVICE_FRAMEWORK_CLASSIC
      </RTE_Components_h>
      <files>
        <file category="doc"     name="MDK/CubeMX/Documentation/classic.html"/>
        <file category="header"  name="CMSIS/Driver/Config/RTE_Device.h" attr="config" version="2.3.1"/>
        <file category="header"  name="MDK/Templates/Inc/stm32f2xx_hal_conf.h" attr="config" version="1.2.1"/>
        <file category="source"  name="MDK/Templates/Src/stm32f2xx_hal_msp.c"  attr="template" select="MCU Specific HAL Initialization / De-Initialization"/>
        <file category="header"  name="MDK/Templates/Inc/stm32f2xx_it.h" attr="template" select="Exception Handlers and Peripheral IRQ"/>
        <file category="source"  name="MDK/Templates/Src/stm32f2xx_it.c" attr="template" select="Exception Handlers and Peripheral IRQ"/>
        <file category="header"  name="MDK/Templates/Inc/main.h" attr="template" select="'main' module for STM32Cube HAL"/>
        <file category="source"  name="MDK/Templates/Src/main.c" attr="template" select="'main' module for STM32Cube HAL"/>
        <file category="header"  name="MDK/Templates_LL/Inc/main.h" attr="template" select="'main' module for STM32Cube LL"/>
        <file category="source"  name="MDK/Templates_LL/Src/main.c" attr="template" select="'main' module for STM32Cube LL"/>
      </files>
    </component>

    <component generator="STM32CubeMX" Cclass="Device" Cgroup="STM32Cube Framework" Csub="STM32CubeMX" Cversion="1.0.0" Capiversion="1.0.0" condition="STM32F2">
      <description>Configuration via STM32CubeMX</description>
      <RTE_Components_h>
        #define RTE_DEVICE_FRAMEWORK_CUBE_MX
      </RTE_Components_h>
      <files>
        <!-- this component will be replaced by the component described in gpdsc from generator -->
        <file category="doc"     name="MDK/CubeMX/Documentation/cubemx.html"/>
        <file category="source"  name="MDK/CubeMX/run_STM32CubeMX.c" version="1.0"/>
        <file category="other"   name="MDK/CubeMX/FrameworkCubeMX_gpdsc.ftl" version="1.0"/>
        <file category="other"   name="MDK/CubeMX/MX_Device_h.ftl" version ="1.0.1"/>
      </files>
    </component>

    <!-- START: STMicroelectronics STM32CubeF2 HAL -->

    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"    Cversion="1.2.1" condition="STM32F2 HAL Common">
      <description>Common HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_COMMON
      </RTE_Components_h>
      <files>
        <file category="include" name="Drivers/STM32F2xx_HAL_Driver/Inc/"/>
        <file category="header"  name="Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal.h"/>
        <file category="source"  name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="ADC"       Cversion="1.2.1" condition="STM32F2 HAL DMA">
      <description>Analog-to-digital converter (ADC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ADC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_adc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="CAN"       Cversion="1.2.1" condition="STM32F2 HAL">
      <description>Controller area network (CAN) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CAN
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_can.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex"    Cversion="1.2.1" condition="STM32F2 HAL">
      <description>Cortex HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CORTEX
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_cortex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="CRC"       Cversion="1.2.1" condition="STM32F2 HAL">
      <description>CRC calculation unit (CRC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CRC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_crc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="CRYP"      Cversion="1.2.1" condition="STM32F21x HAL DMA">
      <description>Cryptographic processor (CRYP) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CRYP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_cryp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DAC"       Cversion="1.2.1" condition="STM32F2 HAL DMA">
      <description>Digital-to-analog converter (DAC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DAC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_dac.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_dac_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DCMI"      Cversion="1.2.1" condition="STM32F2x7 HAL DMA">
      <description>Digital camera interface (DCMI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DCMI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_dcmi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"       Cversion="1.2.1" condition="STM32F2 HAL">
      <description>DMA controller (DMA) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DMA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_dma.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_dma_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="ETH"       Cversion="1.2.1" condition="STM32F2x7 HAL RCC">
      <description>Ethernet MAC (ETH) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ETH
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_eth.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Flash"     Cversion="1.2.1" condition="STM32F2 HAL">
      <description>Embedded Flash memory HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLASH
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"      Cversion="1.2.1" condition="STM32F2 HAL">
      <description>General-purpose I/O (GPIO) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_GPIO
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_gpio.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="HASH"      Cversion="1.2.1" condition="STM32F21x HAL DMA">
      <description>Hash processor (HASH) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_HASH
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_hash.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="HCD"       Cversion="1.2.1" condition="STM32F2 HAL">
      <description>USB Host controller (HCD) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_HCD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_hcd.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_ll_usb.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2C"       Cversion="1.2.1" condition="STM32F2 HAL DMA RCC">
      <description>Inter-integrated circuit (I2C) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_I2C
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_i2c.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2S"       Cversion="1.2.1" condition="STM32F2 HAL DMA">
      <description>I2S HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_I2S
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_i2s.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="IRDA"      Cversion="1.2.1" condition="STM32F2 HAL DMA RCC">
      <description>IrDA HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_IRDA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_irda.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="IWDG"      Cversion="1.2.1" condition="STM32F2 HAL">
      <description>Independent watchdog (IWDG) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_IWDG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_iwdg.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="MMC"       Cversion="1.2.1" condition="STM32F2 HAL">
      <description>Multi Media Card (MMC) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_MMC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_mmc.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_ll_sdmmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="NAND"      Cversion="1.2.1" condition="STM32F2 HAL">
      <description>NAND Flash controller HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_NAND
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_nand.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_ll_fsmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="NOR"       Cversion="1.2.1" condition="STM32F2 HAL">
      <description>NOR Flash controller HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_NOR
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_nor.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_ll_fsmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PC Card"   Cversion="1.2.1" condition="STM32F2 HAL">
      <description>PC Card controller HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PCCARD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_pccard.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_ll_fsmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PCD"       Cversion="1.2.1" condition="STM32F2 HAL">
      <description>USB Peripheral controller (PCD) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PCD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_pcd.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_pcd_ex.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_ll_usb.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PWR"       Cversion="1.2.1" condition="STM32F2 HAL">
      <description>Power controller (PWR) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PWR
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_pwr.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_pwr_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"       Cversion="1.2.1" condition="STM32F2 HAL GPIO">
      <description>Reset and clock control (RCC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RCC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RNG"       Cversion="1.2.1" condition="STM32F2 HAL">
      <description>Random number generator (RNG) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RNG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rng.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RTC"       Cversion="1.2.1" condition="STM32F2 HAL">
      <description>Real-time clock (RTC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RTC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rtc.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rtc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SD"        Cversion="1.2.1" condition="STM32F2 HAL">
      <description>Secure digital (SD) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_ll_sdmmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Smartcard" Cversion="1.2.1" condition="STM32F2 HAL DMA RCC">
      <description>Smartcard HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SMARTCARD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_smartcard.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SPI"       Cversion="1.2.1" condition="STM32F2 HAL DMA">
      <description>Serial peripheral interface (SPI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SPI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SRAM"      Cversion="1.2.1" condition="STM32F2 HAL DMA">
      <description>SRAM controller (SRAM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SRAM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sram.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_ll_fsmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="TIM"       Cversion="1.2.1" condition="STM32F2 HAL DMA">
      <description>Timers (TIM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_TIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_tim.c"/>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_tim_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="UART"      Cversion="1.2.1" condition="STM32F2 HAL DMA RCC">
      <description>Universal asynchronous receiver transmitter (UART) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_UART
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_uart.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="USART"     Cversion="1.2.1" condition="STM32F2 HAL DMA RCC">
      <description>Universal synchronous asynchronous receiver transmitter (USART) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_USART
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_usart.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="WWDG"      Cversion="1.2.1" condition="STM32F2 HAL">
      <description>Window watchdog (WWDG) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_WWDG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_wwdg.c"/>
      </files>
    </component>

    <!-- END: STMicroelectronics STM32CubeF2 HAL -->

    <component Cclass="CMSIS Driver" Cgroup="CAN"                          Capiversion="1.0" Cversion="1.11"  condition="STM32F2 CMSIS_Driver CAN">
      <description>CAN Driver for STM32F2 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_CAN1                /* Driver CAN1 */
        #define RTE_Drivers_CAN2                /* Driver CAN2 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/CAN_STM32F2xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="SPI"                          Capiversion="2.1" Cversion="2.8"  condition="STM32F2 CMSIS_Driver SPI">
      <description>SPI Driver for STM32F2 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_SPI1                /* Driver SPI1 */
        #define RTE_Drivers_SPI2                /* Driver SPI2 */
        #define RTE_Drivers_SPI3                /* Driver SPI3 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/SPI_STM32F2xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USART"                        Capiversion="2.1" Cversion="2.8"  condition="STM32F2 CMSIS_Driver USART">
      <description>USART Driver for STM32F2 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_USART1              /* Driver USART1 */
        #define RTE_Drivers_USART2              /* Driver USART2 */
        #define RTE_Drivers_USART3              /* Driver USART3 */
        #define RTE_Drivers_USART4              /* Driver USART4 */
        #define RTE_Drivers_USART5              /* Driver USART5 */
        #define RTE_Drivers_USART6              /* Driver USART6 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/USART_STM32F2xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="I2C"                          Capiversion="2.2" Cversion="2.8"  condition="STM32F2 CMSIS_Driver I2C">
      <description>I2C Driver for STM32F2 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_I2C1                /* Driver I2C1 */
        #define RTE_Drivers_I2C2                /* Driver I2C2 */
        #define RTE_Drivers_I2C3                /* Driver I2C3 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/I2C_STM32F2xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="MCI"                          Capiversion="2.2" Cversion="2.6"  condition="STM32F2 CMSIS_Driver MCI">
      <description>MCI Driver for STM32F2 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_MCI0                /* Driver MCI0 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/MCI_STM32F2xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="Ethernet MAC"                 Capiversion="2.1" Cversion="2.8"  condition="STM32F2 CMSIS_Driver ETH_MAC">
      <description>Ethernet MAC Driver for STM32F2 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_ETH_MAC0            /* Driver ETH_MAC0 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/EMAC_STM32F2xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Device" Csub="Full-speed" Capiversion="2.1" Cversion="2.18" condition="STM32F2 CMSIS_Driver USB0">
      <description>USB Device Full-Speed Driver for STM32F2 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_USBD0               /* Driver USBD0 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/OTG_FS_STM32F2xx.c"/>
        <file category="source" name="CMSIS/Driver/USBD_FS_STM32F2xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Device" Csub="High-speed" Capiversion="2.1" Cversion="2.18" condition="STM32F2 CMSIS_Driver USB1">
      <description>USB Device High-Speed Driver for STM32F2 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_USBD1               /* Driver USBD1 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/OTG_HS_STM32F2xx.c"/>
        <file category="source" name="CMSIS/Driver/USBD_HS_STM32F2xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Host"   Csub="Full-speed" Capiversion="2.0" Cversion="2.21" condition="STM32F2 CMSIS_Driver USB0">
      <description>USB Host Full-Speed Driver for STM32F2 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_USBH0               /* Driver USBH0 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/OTG_FS_STM32F2xx.c"/>
        <file category="source" name="CMSIS/Driver/USBH_FS_STM32F2xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Host"   Csub="High-speed" Capiversion="2.0" Cversion="2.22" condition="STM32F2 CMSIS_Driver USB1">
      <description>USB Host High-Speed Driver for STM32F2 Series</description>
      <RTE_Components_h>  <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_Drivers_USBH1               /* Driver USBH1 */
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/OTG_HS_STM32F2xx.c"/>
        <file category="source" name="CMSIS/Driver/USBH_HS_STM32F2xx.c"/>
      </files>
    </component>

    <!-- MCBSTM32F200 Development Board -->
    <bundle Cbundle="MCBSTM32F200" Cclass="Board Support" Cversion="2.0.0">
      <description>Keil Development Board MCBSTM32F200</description>
      <doc>MDK/Boards/Keil/MCBSTM32F200/Documentation/mcbstm32f200.chm</doc>
      <component Cgroup="LED" Capiversion="1.0.0" condition="STM32F2 HAL GPIO">
        <description>LED Interface for Keil MCBSTM32F200 Development Board</description>
        <files>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/LED_MCBSTM32F200.c"/>
        </files>
      </component>
      <component Cgroup="Buttons" Capiversion="1.0.0" condition="STM32F2 HAL GPIO">
        <description>Buttons Interface for Keil MCBSTM32F200 Development Board</description>
        <files>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/Buttons_MCBSTM32F200.c"/>
        </files>
      </component>
      <component Cgroup="A/D Converter" Capiversion="1.0.0" condition="STM32F2 HAL GPIO ADC">
        <description>A/D Converter Interface for Keil MCBSTM32F200 Development Board</description>
        <files>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/ADC_MCBSTM32F200.c"/>
        </files>
      </component>
      <component Cgroup="Joystick" Capiversion="1.0.0" condition="STM32F2 CMSIS RTOS I2C_Driver">
        <description>Joystick Interface for STMPE811</description>
        <files>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/Joystick_STMPE811.c"/>
        </files>
      </component>
      <component Cgroup="Touchscreen" Capiversion="1.0.0" condition="STM32F2 CMSIS RTOS I2C_Driver">
        <description>Touchscreen Interface for STMPE811</description>
        <files>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/Touch_STMPE811.c"/>
        </files>
      </component>
      <component Cgroup="Accelerometer" Capiversion="1.0.0" condition="STM32F2 CMSIS I2C_Driver">
        <description>Accelerometer Interface for LIS3DH</description>
        <files>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/Accelerometer_LIS3DH.c"/>
        </files>
      </component>
      <component Cgroup="Gyroscope" Capiversion="1.0.0" condition="STM32F2 CMSIS I2C_Driver">
        <description>Gyroscope Interface for L3G4200D</description>
        <files>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/Gyroscope_L3G4200D.c"/>
        </files>
      </component>
      <component Cgroup="Camera" Capiversion="1.0.0" condition="STM32F2 HAL GPIO DMA DCMI I2C_Driver">
        <description>Camera Interface for OVM7690</description>
        <files>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/Camera_OVM7690.c"/>
        </files>
      </component>
      <component Cgroup="Graphic LCD" Capiversion="1.0.0" condition="STM32F2 HAL GPIO SRAM">
        <description>Graphic LCD Interface for Keil MCBSTM32F200 Development Board</description>
        <files>
          <file category="header" name="MDK/Boards/Keil/MCBSTM32F200/Common/GLCD_Config.h"/>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/GLCD_Fonts.c"/>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/GLCD_MCBSTM32F200.c"/>
        </files>
      </component>
      <component Cgroup="emWin LCD" Capiversion="1.1.0" Cvariant="16-bit IF" condition="STM32F2 HAL GPIO SRAM LCD_16">
        <description>emWin LCD 16-bit Interface for Keil MCBSTM32F200 Development Board</description>
        <files>
          <file category="source" name="MDK/Boards/Keil/MCBSTM32F200/Common/LCD_X.c"/>
        </files>
      </component>
    </bundle>
  </components>
</package>
