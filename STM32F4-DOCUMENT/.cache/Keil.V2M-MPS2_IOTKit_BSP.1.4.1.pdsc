<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.4.9" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Keil</vendor>
  <url>http://www.keil.com/pack/</url>
  <name>V2M-MPS2_IOTKit_BSP</name>
  <description>ARM V2M-MPS2 Device Family Pack for IOT-Kit devices</description>

  <releases>
    <release version="1.4.1" date="2018-07-26">
      Fixed the folder specification for example: IOT-Kit ARMv8MBL Secure/Non-Secure GCC.
    </release>
    <release version="1.4.0" date="2018-06-11">
      Added MTB/ETM targets to ARMv8MBL Secure/Non-Secure example.
      Added GCC support.
      Updated startup files (set MSPLIM).
      Updated use of secure registers.
      Updated SVD files.
    </release>
    <release version="1.3.0" date="2017-03-31">
      Added application notes 300 and 301.
      Added IOTKit_CM23, IOTKit_CM33 Blinky examples.
      Updated SVD files.
      Reworked board support files.
    </release>
    <release version="1.2.0" date="2017-02-08">
      Updated board name to V2M-MPS2 (IoT) to make it unique.
      Disable local processor reset for ARMv8-M devices. Not available for this architecture.
    </release>
    <release version="1.1.0" date="2017-01-12">
      Added device support for IOTKit_CM23, IOTKit_CM33, IOTKit_ARMv8MBL
      - Updated Cortex-M33 IoT Kit Debug Description: Enable Merging of CPU0 System Reset Request and Lock-up Status.
      - Updated ARMv8M Mainline FPU settings in partition*.h
      - Updated ARMv8-M Mainline system file.
      - Updated ARMv8-M core attributes.
      Reworked examples:
      - Updated Cortex-M33 IoT Kit examples: Do not manually set PC and SP, done by RESET.
    </release>
    <release version="1.0.0" date="2016-10-14">
      First Release of V2M-MPS2 Device Family Pack for IOT-Kit devices.
    </release>
  </releases>

  <keywords>
    <!-- keywords for indexing -->
    <keyword>ARM</keyword>
    <keyword>Device Family Pack for V2M-MPS2</keyword>
    <keyword>IOT-Kit</keyword>
  </keywords>

  <devices>
    <!-- ******************************  IOTKit ARMv8-M Baseline *********************** -->
    <family Dfamily="ARMv8-M Baseline" Dvendor="ARM:82">
      <!-- Select JTAG as default protocol -->
      <debugconfig default="jtag" swj="true"/>

      <!--book name="Device/Documents/ARMv8MML_dgug.pdf"       title="ARMv8MML Device Generic Users Guide"/-->
      <description>
IOT-Kit: ARMv8M Baseline Processor based device.
      </description>
      <book name="Documents/Apnt_301.pdf" title ="Using the Cortex-M23 IoT Kit Image on MPS2+"/>

      <memory id="IROM1" start="0x10000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2" start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1" start="0x38000000" size="0x00200000" init   ="0" default="1"/>
      <memory id="IRAM2" start="0x28200000" size="0x00200000" init   ="0" default="0"/>

      <debugvars configfile="Device/IOTKit_ARMv8MBL/Debug/ARMv8MBL.dbgconf">
        // Debug Authentication Variables
        __var DAuthFixed  = 0x1;     // 1 - Use fixed authentication, 0 - Ask for user input
        __var DAuthConfig = 0xF;     // Authentication Value (MPS2 Security Control Block)
        // Bit 0 - Invasive Debug (Hardwired to 1)
        // Bit 1 - Non-Invasive Debug (Hardwired to 1)
        // Bit 2 - Invasive Secure Debug
        // Bit 3 - Non-Invasive Secure Debug
      </debugvars>

      <sequences>
        <!-- Local processor reset not avaialable in ARMv8-M -->
        <sequence name="ResetProcessor" disable="true"/>

        <sequence name="DebugDeviceUnlock">
          <block>
            __var DAuthUserInput  = 0;
            __var DAUTHSTATUS_Val = 0;
            __var DHCSR_Val       = 0;
            __var SecureDebugEna   = 0;
            __var SecureDebugAvail = 0;
            __var DAuthVal         = 0;
            __var SECDBGSTAT_Val   = 0;
            __var SECDBGSET_Val    = 0;
            __var SECDBGCLR_Val    = 0;
            __var RESET_MASK       = 0;

            DAUTHSTATUS_Val  = Read32(0xE000EFB8);
            DHCSR_Val        = Read32(0xE000EDF0);
            SecureDebugAvail = (DAUTHSTATUS_Val &amp; 0x00000020) ? 1 : 0;  // SID: Secure Invasive Debug Implemented

            RESET_MASK  = Read32(0x50021104);
            RESET_MASK |= (1 &lt;&lt; 4) | (1 &lt;&lt; 6);   // RESET_MASK: Enable SYSRESETREQ0_EN and LOCKUP0_EN
            Write32(0x50021104, RESET_MASK);
          </block>

          <control if="SecureDebugAvail" info="Configure Debug Authentication if Security Extensions available">
            <block>
              SecureDebugEna = ((DHCSR_Val &amp; 0x00100000) || ((DAUTHSTATUS_Val &amp; 0x00000030) == 0x00000030)) ? 1 : 0;
            </block>

            <control if="DAuthFixed">
              <block>
                // Debug Authentication as per Debug Configuration File
                DAuthVal = DAuthConfig;
              </block>
            </control>
            <control if="DAuthFixed == 0">
              <block>
                DAuthUserInput = Query(1, "Enable Secure Debug?", 3);
              </block>
              <control if="DAuthUserInput == 3">
                <block>
                  // Enable Secure Debug
                  DAuthVal = 0xF;
                </block>
              </control>
              <control if="DAuthUserInput != 3">
                <block>
                  // Disable Secure Debug
                  DAuthVal = 0x3;
                </block>
              </control>
            </control>

            <control if="SecureDebugEna">
              <block>
                // Read Secure Debug Authentication Status
                SECDBGSTAT_Val = Read32(0x50021000);

                // Assemble SECDBGSET and SECDBGCLR Values
                SECDBGSET_Val  = 0x000000AA;                                // Use internal signals:
                                                                            // DBGEN_SEL_SET   - 1,
                                                                            // NIDEN_SEL_SET   - 1,
                                                                            // SPIDEN_SEL_SET  - 1,
                                                                            // SPNIDEN_SEL_SET - 1

                SECDBGSET_Val |=  DAuthVal &amp; 0x1;                       // DBGEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x2) &lt;&lt; 1;           // NIDEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x4) &lt;&lt; 2;           // SPIDEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x8) &lt;&lt; 3;           // SPNIDEN_I_SET

                SECDBGCLR_Val |=   (DAuthVal ^ 0x1) &amp; 0x1;              // DBGEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x2) &amp; 0x2) &lt;&lt; 1); // NIDEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x4) &amp; 0x4) &lt;&lt; 2); // SPIDEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x8) &amp; 0x8) &lt;&lt; 3); // SPNIDEN_I_SET

                // Write Secure Debug Authentication Set Register
                Write32(0x50021004, SECDBGSET_Val);

                // Write Secure Debug Authentication Clear Register
                Write32(0x50021008, SECDBGCLR_Val);
              </block>
            </control>
            <control if="SecureDebugEna == 0">
              <control if="DAuthVal &amp; 0x4">
                <block>
                  Query(0, "Cannot configure Debug Authentication, secure debug disabled! Please reboot FPGA!", 1);
                </block>
              </control>
            </control>

          </control>
        </sequence>
      </sequences>

      <device Dname="IOTKit_ARMv8MBL">
        <processor Dcore="ARMV8MBL" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dtz="TZ" Dendian="Little-endian" Dclock="25000000"/>
        <debug svd="SVD/IOTKit_ARMv8MBL.svd"/>
        <compile header="Device/IOTKit_ARMv8MBL/Include/IOTKit_ARMv8MBL.h" define="IOTKit_ARMv8MBL"/>
      </device>
    </family>

    <!-- ******************************  IOTKit ARMv8-M Mainline *********************** -->
    <family Dfamily="ARMv8-M Mainline" Dvendor="ARM:82">
      <!-- Select JTAG as default protocol -->
      <debugconfig default="jtag" swj="true"/>

      <!--book name="Device/Documents/ARMv8MML_dgug.pdf"       title="ARMv8MML Device Generic Users Guide"/-->
      <description>
IOT-Kit: ARMv8M Mainline Processor based device.
      </description>
      <book name="Documents/Apnt_300.pdf" title ="Using the Cortex-M33 IoT Kit Image on MPS2+"/>

      <memory id="IROM1" start="0x10000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2" start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1" start="0x38000000" size="0x00200000" init   ="0" default="1"/>
      <memory id="IRAM2" start="0x28200000" size="0x00200000" init   ="0" default="0"/>

      <debugvars configfile="Device/IOTKit_ARMv8MML/Debug/ARMv8MML.dbgconf">
        // Debug Authentication Variables
        __var DAuthFixed  = 0x1;     // 1 - Use fixed authentication, 0 - Ask for user input
        __var DAuthConfig = 0xF;     // Authentication Value (MPS2 Security Control Block)
        // Bit 0 - Invasive Debug (Hardwired to 1)
        // Bit 1 - Non-Invasive Debug (Hardwired to 1)
        // Bit 2 - Invasive Secure Debug
        // Bit 3 - Non-Invasive Secure Debug
      </debugvars>

      <sequences>
        <!-- Local processor reset not avaialable in ARMv8-M -->
        <sequence name="ResetProcessor" disable="true"/>

        <sequence name="DebugDeviceUnlock">
          <block>
            __var DAuthUserInput  = 0;
            __var DAUTHSTATUS_Val = 0;
            __var DHCSR_Val       = 0;
            __var SecureDebugEna   = 0;
            __var SecureDebugAvail = 0;
            __var DAuthVal         = 0;
            __var SECDBGSTAT_Val   = 0;
            __var SECDBGSET_Val    = 0;
            __var SECDBGCLR_Val    = 0;
            __var RESET_MASK       = 0;

            DAUTHSTATUS_Val  = Read32(0xE000EFB8);
            DHCSR_Val        = Read32(0xE000EDF0);
            SecureDebugAvail = (DAUTHSTATUS_Val &amp; 0x00000020) ? 1 : 0;  // SID: Secure Invasive Debug Implemented

            RESET_MASK  = Read32(0x50021104);
            RESET_MASK |= (1 &lt;&lt; 4) | (1 &lt;&lt; 6);   // RESET_MASK: Enable SYSRESETREQ0_EN and LOCKUP0_EN
            Write32(0x50021104, RESET_MASK);
          </block>

          <control if="SecureDebugAvail" info="Configure Debug Authentication if Security Extensions available">
            <block>
              SecureDebugEna = ((DHCSR_Val &amp; 0x00100000) || ((DAUTHSTATUS_Val &amp; 0x00000030) == 0x00000030)) ? 1 : 0;
            </block>

            <control if="DAuthFixed">
              <block>
                // Debug Authentication as per Debug Configuration File
                DAuthVal = DAuthConfig;
              </block>
            </control>
            <control if="DAuthFixed == 0">
              <block>
                DAuthUserInput = Query(1, "Enable Secure Debug?", 3);
              </block>
              <control if="DAuthUserInput == 3">
                <block>
                  // Enable Secure Debug
                  DAuthVal = 0xF;
                </block>
              </control>
              <control if="DAuthUserInput != 3">
                <block>
                  // Disable Secure Debug
                  DAuthVal = 0x3;
                </block>
              </control>
            </control>

            <control if="SecureDebugEna">
              <block>
                // Read Secure Debug Authentication Status
                SECDBGSTAT_Val = Read32(0x50021000);

                // Assemble SECDBGSET and SECDBGCLR Values
                SECDBGSET_Val  = 0x000000AA;                                // Use internal signals:
                                                                            // DBGEN_SEL_SET   - 1,
                                                                            // NIDEN_SEL_SET   - 1,
                                                                            // SPIDEN_SEL_SET  - 1,
                                                                            // SPNIDEN_SEL_SET - 1

                SECDBGSET_Val |=  DAuthVal &amp; 0x1;                       // DBGEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x2) &lt;&lt; 1;           // NIDEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x4) &lt;&lt; 2;           // SPIDEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x8) &lt;&lt; 3;           // SPNIDEN_I_SET

                SECDBGCLR_Val |=   (DAuthVal ^ 0x1) &amp; 0x1;              // DBGEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x2) &amp; 0x2) &lt;&lt; 1); // NIDEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x4) &amp; 0x4) &lt;&lt; 2); // SPIDEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x8) &amp; 0x8) &lt;&lt; 3); // SPNIDEN_I_SET

                // Write Secure Debug Authentication Set Register
                Write32(0x50021004, SECDBGSET_Val);

                // Write Secure Debug Authentication Clear Register
                Write32(0x50021008, SECDBGCLR_Val);
              </block>
            </control>
            <control if="SecureDebugEna == 0">
              <control if="DAuthVal &amp; 0x4">
                <block>
                  Query(0, "Cannot configure Debug Authentication, secure debug disabled! Please reboot FPGA!", 1);
                </block>
              </control>
            </control>

          </control>
        </sequence>
      </sequences>

      <device Dname="IOTKit_ARMv8MML">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dtz="TZ" Dendian="Little-endian" Dclock="25000000"/>
        <debug svd="SVD/IOTKit_ARMv8MML.svd"/>
        <compile header="Device/IOTKit_ARMv8MML/Include/IOTKit_ARMv8MML.h" define="IOTKit_ARMv8MML"/>
      </device>
    </family>

    <!-- ******************************  IOTKit Cortex-M23 *********************** -->
    <family Dfamily="ARM Cortex M23" Dvendor="ARM:82">
      <!-- Select JTAG as default protocol -->
      <debugconfig default="jtag" swj="true"/>

      <!--book name="Device/Documents/ARMv8MML_dgug.pdf"       title="ARMv8MML Device Generic Users Guide"/-->
      <description>
IOT-Kit: Cortex-M23 based device.
      </description>
      <book name="Documents/Apnt_301.pdf" title ="Using the Cortex-M23 IoT Kit Image on MPS2+"/>

      <memory id="IROM1" start="0x10000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2" start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1" start="0x38000000" size="0x00200000" init   ="0" default="1"/>
      <memory id="IRAM2" start="0x28200000" size="0x00200000" init   ="0" default="0"/>

      <debugvars configfile="Device/IOTKit_CM23/Debug/CM23.dbgconf">
        // Debug Authentication Variables
        __var DAuthFixed  = 0x1;     // 1 - Use fixed authentication, 0 - Ask for user input
        __var DAuthConfig = 0xF;     // Authentication Value (MPS2 Security Control Block)
        // Bit 0 - Invasive Debug (Hardwired to 1)
        // Bit 1 - Non-Invasive Debug (Hardwired to 1)
        // Bit 2 - Invasive Secure Debug
        // Bit 3 - Non-Invasive Secure Debug
      </debugvars>

      <sequences>
        <!-- Local processor reset not avaialable in ARMv8-M -->
        <sequence name="ResetProcessor" disable="true"/>

        <sequence name="DebugDeviceUnlock">
          <block>
            __var DAuthUserInput  = 0;
            __var DAUTHSTATUS_Val = 0;
            __var DHCSR_Val       = 0;
            __var SecureDebugEna   = 0;
            __var SecureDebugAvail = 0;
            __var DAuthVal         = 0;
            __var SECDBGSTAT_Val   = 0;
            __var SECDBGSET_Val    = 0;
            __var SECDBGCLR_Val    = 0;
            __var RESET_MASK       = 0;

            DAUTHSTATUS_Val  = Read32(0xE000EFB8);
            DHCSR_Val        = Read32(0xE000EDF0);
            SecureDebugAvail = (DAUTHSTATUS_Val &amp; 0x00000020) ? 1 : 0;  // SID: Secure Invasive Debug Implemented

            RESET_MASK  = Read32(0x50021104);
            RESET_MASK |= (1 &lt;&lt; 4) | (1 &lt;&lt; 6);   // RESET_MASK: Enable SYSRESETREQ0_EN and LOCKUP0_EN
            Write32(0x50021104, RESET_MASK);
          </block>

          <control if="SecureDebugAvail" info="Configure Debug Authentication if Security Extensions available">
            <block>
              SecureDebugEna = ((DHCSR_Val &amp; 0x00100000) || ((DAUTHSTATUS_Val &amp; 0x00000030) == 0x00000030)) ? 1 : 0;
            </block>

            <control if="DAuthFixed">
              <block>
                // Debug Authentication as per Debug Configuration File
                DAuthVal = DAuthConfig;
              </block>
            </control>
            <control if="DAuthFixed == 0">
              <block>
                DAuthUserInput = Query(1, "Enable Secure Debug?", 3);
              </block>
              <control if="DAuthUserInput == 3">
                <block>
                  // Enable Secure Debug
                  DAuthVal = 0xF;
                </block>
              </control>
              <control if="DAuthUserInput != 3">
                <block>
                  // Disable Secure Debug
                  DAuthVal = 0x3;
                </block>
              </control>
            </control>

            <control if="SecureDebugEna">
              <block>
                // Read Secure Debug Authentication Status
                SECDBGSTAT_Val = Read32(0x50021000);

                // Assemble SECDBGSET and SECDBGCLR Values
                SECDBGSET_Val  = 0x000000AA;                                // Use internal signals:
                                                                            // DBGEN_SEL_SET   - 1,
                                                                            // NIDEN_SEL_SET   - 1,
                                                                            // SPIDEN_SEL_SET  - 1,
                                                                            // SPNIDEN_SEL_SET - 1

                SECDBGSET_Val |=  DAuthVal &amp; 0x1;                       // DBGEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x2) &lt;&lt; 1;           // NIDEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x4) &lt;&lt; 2;           // SPIDEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x8) &lt;&lt; 3;           // SPNIDEN_I_SET

                SECDBGCLR_Val |=   (DAuthVal ^ 0x1) &amp; 0x1;              // DBGEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x2) &amp; 0x2) &lt;&lt; 1); // NIDEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x4) &amp; 0x4) &lt;&lt; 2); // SPIDEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x8) &amp; 0x8) &lt;&lt; 3); // SPNIDEN_I_SET

                // Write Secure Debug Authentication Set Register
                Write32(0x50021004, SECDBGSET_Val);

                // Write Secure Debug Authentication Clear Register
                Write32(0x50021008, SECDBGCLR_Val);
              </block>
            </control>
            <control if="SecureDebugEna == 0">
              <control if="DAuthVal &amp; 0x4">
                <block>
                  Query(0, "Cannot configure Debug Authentication, secure debug disabled! Please reboot FPGA!", 1);
                </block>
              </control>
            </control>

          </control>
        </sequence>
      </sequences>

      <device Dname="IOTKit_CM23">
        <processor Dcore="Cortex-M23" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dtz="TZ" Dendian="Little-endian" Dclock="25000000"/>
        <debug svd="SVD/IOTKit_CM23.svd"/>
        <compile header="Device/IOTKit_CM23/Include/IOTKit_CM23.h" define="IOTKit_CM23"/>
      </device>
    </family>

    <!-- ******************************  IOTKit Cortex-M33 *********************** -->
    <family Dfamily="ARM Cortex M33" Dvendor="ARM:82">
      <!-- Select JTAG as default protocol -->
      <debugconfig default="jtag" swj="true"/>

      <!--book name="Device/Documents/ARMv8MML_dgug.pdf"       title="ARMv8MML Device Generic Users Guide"/-->
      <description>
IOT-Kit: Cortex-M33 based device.
      </description>
      <book name="Documents/Apnt_300.pdf" title ="Using the Cortex-M33 IoT Kit Image on MPS2+"/>

      <memory id="IROM1" start="0x10000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2" start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1" start="0x38000000" size="0x00200000" init   ="0" default="1"/>
      <memory id="IRAM2" start="0x28200000" size="0x00200000" init   ="0" default="0"/>

      <debugvars configfile="Device/IOTKit_CM33/Debug/CM33.dbgconf">
        // Debug Authentication Variables
        __var DAuthFixed  = 0x1;     // 1 - Use fixed authentication, 0 - Ask for user input
        __var DAuthConfig = 0xF;     // Authentication Value (MPS2 Security Control Block)
        // Bit 0 - Invasive Debug (Hardwired to 1)
        // Bit 1 - Non-Invasive Debug (Hardwired to 1)
        // Bit 2 - Invasive Secure Debug
        // Bit 3 - Non-Invasive Secure Debug
      </debugvars>

      <sequences>
        <!-- Local processor reset not avaialable in ARMv8-M -->
        <sequence name="ResetProcessor" disable="true"/>

        <sequence name="DebugDeviceUnlock">
          <block>
            __var DAuthUserInput  = 0;
            __var DAUTHSTATUS_Val = 0;
            __var DHCSR_Val       = 0;
            __var SecureDebugEna   = 0;
            __var SecureDebugAvail = 0;
            __var DAuthVal         = 0;
            __var SECDBGSTAT_Val   = 0;
            __var SECDBGSET_Val    = 0;
            __var SECDBGCLR_Val    = 0;
            __var RESET_MASK       = 0;

            DAUTHSTATUS_Val  = Read32(0xE000EFB8);
            DHCSR_Val        = Read32(0xE000EDF0);
            SecureDebugAvail = (DAUTHSTATUS_Val &amp; 0x00000020) ? 1 : 0;  // SID: Secure Invasive Debug Implemented

            RESET_MASK  = Read32(0x50021104);
            RESET_MASK |= (1 &lt;&lt; 4) | (1 &lt;&lt; 6);   // RESET_MASK: Enable SYSRESETREQ0_EN and LOCKUP0_EN
            Write32(0x50021104, RESET_MASK);
          </block>

          <control if="SecureDebugAvail" info="Configure Debug Authentication if Security Extensions available">
            <block>
              SecureDebugEna = ((DHCSR_Val &amp; 0x00100000) || ((DAUTHSTATUS_Val &amp; 0x00000030) == 0x00000030)) ? 1 : 0;
            </block>

            <control if="DAuthFixed">
              <block>
                // Debug Authentication as per Debug Configuration File
                DAuthVal = DAuthConfig;
              </block>
            </control>
            <control if="DAuthFixed == 0">
              <block>
                DAuthUserInput = Query(1, "Enable Secure Debug?", 3);
              </block>
              <control if="DAuthUserInput == 3">
                <block>
                  // Enable Secure Debug
                  DAuthVal = 0xF;
                </block>
              </control>
              <control if="DAuthUserInput != 3">
                <block>
                  // Disable Secure Debug
                  DAuthVal = 0x3;
                </block>
              </control>
            </control>

            <control if="SecureDebugEna">
              <block>
                // Read Secure Debug Authentication Status
                SECDBGSTAT_Val = Read32(0x50021000);

                // Assemble SECDBGSET and SECDBGCLR Values
                SECDBGSET_Val  = 0x000000AA;                                // Use internal signals:
                                                                            // DBGEN_SEL_SET   - 1,
                                                                            // NIDEN_SEL_SET   - 1,
                                                                            // SPIDEN_SEL_SET  - 1,
                                                                            // SPNIDEN_SEL_SET - 1

                SECDBGSET_Val |=  DAuthVal &amp; 0x1;                       // DBGEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x2) &lt;&lt; 1;           // NIDEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x4) &lt;&lt; 2;           // SPIDEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x8) &lt;&lt; 3;           // SPNIDEN_I_SET

                SECDBGCLR_Val |=   (DAuthVal ^ 0x1) &amp; 0x1;              // DBGEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x2) &amp; 0x2) &lt;&lt; 1); // NIDEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x4) &amp; 0x4) &lt;&lt; 2); // SPIDEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x8) &amp; 0x8) &lt;&lt; 3); // SPNIDEN_I_SET

                // Write Secure Debug Authentication Set Register
                Write32(0x50021004, SECDBGSET_Val);

                // Write Secure Debug Authentication Clear Register
                Write32(0x50021008, SECDBGCLR_Val);
              </block>
            </control>
            <control if="SecureDebugEna == 0">
              <control if="DAuthVal &amp; 0x4">
                <block>
                  Query(0, "Cannot configure Debug Authentication, secure debug disabled! Please reboot FPGA!", 1);
                </block>
              </control>
            </control>

          </control>
        </sequence>
      </sequences>

      <device Dname="IOTKit_CM33">
        <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Little-endian" Dclock="25000000"/>
        <debug svd="SVD/IOTKit_CM33.svd"/>
        <compile header="Device/IOTKit_CM33/Include/IOTKit_CM33.h" define="IOTKit_CM33"/>
      </device>

      <device Dname="IOTKit_CM33_FP">
        <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Little-endian" Dclock="25000000"/>
        <debug svd="SVD/IOTKit_CM33.svd"/>
        <compile header="Device/IOTKit_CM33/Include/IOTKit_CM33_FP.h" define="IOTKit_CM33_FP"/>
      </device>
    </family>

  </devices>

  <conditions>
    <condition id="ARMCC">
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="GCC">
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="IOTKit_ARMv8MBL CMSIS">
      <description>ARM IOT-Kit ARMv8MBL device and CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="IOTKit_ARMv8MBL*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>
    <condition id="IOTKit_ARMv8MBL CMSIS GCC">
      <description>ARM IOT-Kit ARMv8MBL device startup and depends on CMSIS Core requiring GCC</description>
      <require condition="IOTKit_ARMv8MBL CMSIS"/>
      <require condition="GCC"/>
    </condition>

    <condition id="IOTKit_ARMv8MML CMSIS">
      <description>ARM IOT-Kit ARMv8MML device and CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="IOTKit_ARMv8MML*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>
    <condition id="IOTKit_ARMv8MML CMSIS GCC">
      <description>ARM IOT-Kit ARMv8MML device startup and depends on CMSIS Core requiring GCC</description>
      <require condition="IOTKit_ARMv8MML CMSIS"/>
      <require condition="GCC"/>
    </condition>

    <condition id="IOTKit_CM23 CMSIS">
      <description>ARM IOT-Kit Cortex-M23 device and CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="IOTKit_CM23*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>
    <condition id="IOTKit_CM23 CMSIS GCC">
      <description>ARM IOT-Kit Cortex-M23 device startup and depends on CMSIS Core requiring GCC</description>
      <require condition="IOTKit_CM23 CMSIS"/>
      <require condition="GCC"/>
    </condition>

    <condition id="IOTKit_CM33 CMSIS">
      <description>ARM IOT-Kit Cortex-M33 device and CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="IOTKit_CM33*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>
    <condition id="IOTKit_CM33 CMSIS GCC">
      <description>ARM IOT-Kit Cortex-M33 device startup and depends on CMSIS Core requiring GCC</description>
      <require condition="IOTKit_CM33 CMSIS"/>
      <require condition="GCC"/>
    </condition>

    <condition id="IOTKit CMSIS">
      <description>ARM IOT-Kit device</description>
      <accept  condition="IOTKit_ARMv8MBL CMSIS"/>
      <accept  condition="IOTKit_ARMv8MML CMSIS"/>
      <accept  condition="IOTKit_CM23 CMSIS"/>
      <accept  condition="IOTKit_CM33 CMSIS"/>
    </condition>

    <condition id="V2M-MPS2 IOTKit Common">
      <description>V2M-MPS2 Common Include files</description>
      <require condition="IOTKit CMSIS"/>
      <require Cclass="Board Support" Cgroup="Common"/>
    </condition>

    <!--condition id="V2M-MPS2 IOTKit Common LCD_SPI">
      <description>V2M-MPS2 Common and LCD (SPI IF)</description>
      <require condition="V2M-MPS2 IOTKit Common"/>
      <require Cclass="Graphics" Cgroup="CORE"/>
      <require Cclass="Graphics" Cgroup="Display" Csub="MCBQVGA_LG" Cvariant="SPI IF"/>
    </condition-->
  </conditions>

  <components>
    <!-- V2M-MPS2 Board support -->
    <bundle Cbundle="V2M-MPS2 IOT-Kit" Cclass="Board Support" Cversion="2.0.0">
      <description>ARM V2M_MPS2 Board Support</description>
      <doc></doc>
      <component Cgroup="Common"                          condition="IOTKit CMSIS">
        <description>Common Include files for ARM V2M_MPS2 Development Board</description>
        <files>
          <file category="header" name="Boards/ARM/V2M-MPS2/Common/Device.h"/>
          <file category="header" name="Boards/ARM/V2M-MPS2/Common/SMM_MPS2.h"/>
        </files>
      </component>
      <component Cgroup="LED"         Capiversion="1.0.0" condition="V2M-MPS2 IOTKit Common">
      <description>LED driver for ARM V2M_MPS2 Board</description>
        <files>
          <file category="source" name="Boards/ARM/V2M-MPS2/Common/LED_V2M-MPS2.c"/>
        </files>
      </component>
      <component Cgroup="Buttons"     Capiversion="1.0.0" condition="V2M-MPS2 IOTKit Common">
      <description>Button driver for ARM V2M_MPS2 Board</description>
        <files>
          <file category="source" name="Boards/ARM/V2M-MPS2/Common/Buttons_V2M-MPS2.c"/>
        </files>
      </component>
      <component Cgroup="Graphic LCD" Capiversion="1.0.0" condition="V2M-MPS2 IOTKit Common">
        <description>Graphic LCD driver for ARM V2M_MPS2 Board</description>
        <files>
          <file category="header" name="Boards/ARM/V2M-MPS2/Common/GLCD_Config.h"/>
          <file category="source" name="Boards/ARM/V2M-MPS2/Common/GLCD_Fonts.c"/>
          <file category="source" name="Boards/ARM/V2M-MPS2/Common/GLCD_V2M-MPS2.c"/>
        </files>
      </component>
      <component Cgroup="Touchscreen" Capiversion="1.0.0" condition="V2M-MPS2 IOTKit Common">
        <description>Touchscreen driver for ARM V2M_MPS2 Board</description>
        <files>
          <file category="source" name="Boards/ARM/V2M-MPS2/Common/Touch_V2M-MPS2.c"/>
        </files>
      </component>
      <!--component Cgroup="emWin LCD" Capiversion="1.1" Cvariant="SPI IF" condition="V2M-MPS2 IOTKit Common LCD_SPI">
        <description>emWin LCD SPI Interface for ARM V2M_MPS2 Board</description>
        <files>
          <file category="source" name="Boards/ARM/V2M-MPS2/Common/LCD_X_V2M-MPS2.c"/>
        </files>
      </component-->
    </bundle>

    <component Cclass="CMSIS Driver" Cgroup="USART" Capiversion="2.1.0" Cversion="1.0.0" condition="IOTKit CMSIS">
      <description>USART Driver for ARM V2M_MPS2 Board</description>
      <RTE_Components_h>
        #define RTE_Drivers_USART
      </RTE_Components_h>
      <files>
        <file category="source" name="CMSIS/Driver/USART_V2M-MPS2.c"/>
      </files>
    </component>

    <!-- IOTKit_ARMv8MBL Startup -->
    <component Cclass="Device" Cgroup="Startup"                         Cversion="1.0.3" condition="IOTKit_ARMv8MBL CMSIS">
      <description>System and Startup for ARM IOTKit_ARMv8MBL device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/IOTKit_ARMv8MBL/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/IOTKit_ARMv8MBL/Source/ARM/startup_IOTKit_ARMv8MBL.s"         version="1.0.3" attr="config" condition="ARMCC"/>
        <!-- .S files need to be preprocessed -->
        <file category="sourceC"      name="Device/IOTKit_ARMv8MBL/Source/GCC/startup_IOTKit_ARMv8MBL.S"         version="1.0.0" attr="config" condition="GCC"/> 
        <file category="linkerScript" name="Device/IOTKit_ARMv8MBL/Source/GCC/gcc_arm.ld"                        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/IOTKit_ARMv8MBL/Source/system_IOTKit_ARMv8MBL.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/IOTKit_ARMv8MBL/Include/Template/partition_IOTKit_ARMv8MBL.h" version="1.0.0" attr="config"/>
        <!-- device configuration -->
        <file category="header"       name="CMSIS/Config/RTE_Device.h"                                           version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup"    Cversion="1.0.1" condition="IOTKit_ARMv8MBL CMSIS GCC">
      <description>System and Startup for ARM IOTKit_ARMv8MBL device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/IOTKit_ARMv8MBL/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/IOTKit_ARMv8MBL/Source/GCC/startup_IOTKit_ARMv8MBL.c"         version="1.0.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/IOTKit_ARMv8MBL/Source/GCC/gcc_arm.ld"                        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/IOTKit_ARMv8MBL/Source/system_IOTKit_ARMv8MBL.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/IOTKit_ARMv8MBL/Include/Template/partition_IOTKit_ARMv8MBL.h" version="1.0.0" attr="config"/>
        <!-- device configuration -->
        <file category="header"       name="CMSIS/Config/RTE_Device.h"                                           version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- IOTKit_ARMv8MML Startup -->
    <component Cclass="Device" Cgroup="Startup"                         Cversion="1.1.2" condition="IOTKit_ARMv8MML CMSIS">
      <description>System and Startup for ARM IOTKit_ARMv8MML device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/IOTKit_ARMv8MML/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/IOTKit_ARMv8MML/Source/ARM/startup_IOTKit_ARMv8MML.s"         version="1.0.3" attr="config" condition="ARMCC"/>
        <!-- .S files need to be preprocessed -->
        <file category="sourceC"      name="Device/IOTKit_ARMv8MML/Source/GCC/startup_IOTKit_ARMv8MML.S"         version="1.0.0" attr="config" condition="GCC"/> 
        <file category="linkerScript" name="Device/IOTKit_ARMv8MML/Source/GCC/gcc_arm.ld"                        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/IOTKit_ARMv8MML/Source/system_IOTKit_ARMv8MML.c"              version="1.1.2" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/IOTKit_ARMv8MML/Include/Template/partition_IOTKit_ARMv8MML.h" version="1.1.0" attr="config"/>
        <!-- device configuration -->
        <file category="header"       name="CMSIS/Config/RTE_Device.h"                                           version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup"    Cversion="1.1.2" condition="IOTKit_ARMv8MML CMSIS GCC">
      <description>System and Startup for ARM IOTKit_ARMv8MML device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/IOTKit_ARMv8MML/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/IOTKit_ARMv8MML/Source/GCC/startup_IOTKit_ARMv8MML.c"         version="1.0.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/IOTKit_ARMv8MML/Source/GCC/gcc_arm.ld"                        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/IOTKit_ARMv8MML/Source/system_IOTKit_ARMv8MML.c"              version="1.1.2" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/IOTKit_ARMv8MML/Include/Template/partition_IOTKit_ARMv8MML.h" version="1.1.0" attr="config"/>
        <!-- device configuration -->
        <file category="header"       name="CMSIS/Config/RTE_Device.h"                                           version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- IOTKit_CM23 Startup -->
    <component Cclass="Device" Cgroup="Startup"                         Cversion="1.0.3" condition="IOTKit_CM23 CMSIS">
      <description>System and Startup for ARM IOTKit_CM23 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/IOTKit_CM23/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/IOTKit_CM23/Source/ARM/startup_IOTKit_CM23.s"             version="1.0.3" attr="config" condition="ARMCC"/>
        <!-- .S files need to be preprocessed -->
        <file category="sourceC"      name="Device/IOTKit_CM23/Source/GCC/startup_IOTKit_CM23.S"             version="1.0.0" attr="config" condition="GCC"/> 
        <file category="linkerScript" name="Device/IOTKit_CM23/Source/GCC/gcc_arm.ld"                        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/IOTKit_CM23/Source/system_IOTKit_CM23.c"                  version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/IOTKit_CM23/Include/Template/partition_IOTKit_CM23.h"     version="1.0.0" attr="config"/>
        <!-- device configuration -->
        <file category="header"       name="CMSIS/Config/RTE_Device.h"                                       version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup"    Cversion="1.0.1" condition="IOTKit_CM23 CMSIS GCC">
      <description>System and Startup for ARM IOTKit_CM23 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/IOTKit_CM23/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/IOTKit_CM23/Source/GCC/startup_IOTKit_CM23.c"             version="1.0.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/IOTKit_CM23/Source/GCC/gcc_arm.ld"                        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/IOTKit_CM23/Source/system_IOTKit_CM23.c"                  version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/IOTKit_CM23/Include/Template/partition_IOTKit_CM23.h"     version="1.0.0" attr="config"/>
        <!-- device configuration -->
        <file category="header"       name="CMSIS/Config/RTE_Device.h"                                       version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- IOTKit_CM33 Startup -->
    <component Cclass="Device" Cgroup="Startup"                         Cversion="1.0.3" condition="IOTKit_CM33 CMSIS">
      <description>System and Startup for ARM IOTKit_CM33 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/IOTKit_CM33/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/IOTKit_CM33/Source/ARM/startup_IOTKit_CM33.s"             version="1.0.3" attr="config" condition="ARMCC"/>
        <!-- .S files need to be preprocessed -->
        <file category="sourceC"      name="Device/IOTKit_CM33/Source/GCC/startup_IOTKit_CM33.S"             version="1.0.0" attr="config" condition="GCC"/> 
        <file category="linkerScript" name="Device/IOTKit_CM33/Source/GCC/gcc_arm.ld"                        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/IOTKit_CM33/Source/system_IOTKit_CM33.c"                  version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/IOTKit_CM33/Include/Template/partition_IOTKit_CM33.h"     version="1.0.0" attr="config"/>
        <!-- device configuration -->
        <file category="header"       name="CMSIS/Config/RTE_Device.h"                                       version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup"    Cversion="1.0.1" condition="IOTKit_CM33 CMSIS GCC">
      <description>System and Startup for ARM IOTKit_CM33 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/IOTKit_CM33/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/IOTKit_CM33/Source/GCC/startup_IOTKit_CM33.c"             version="1.0.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/IOTKit_CM33/Source/GCC/gcc_arm.ld"                        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/IOTKit_CM33/Source/system_IOTKit_CM33.c"                  version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/IOTKit_CM33/Include/Template/partition_IOTKit_CM33.h"     version="1.0.0" attr="config"/>
        <!-- device configuration -->
        <file category="header"       name="CMSIS/Config/RTE_Device.h"                                       version="1.0.0" attr="config"/>
      </files>
    </component>

  </components>

  <boards>
    <board name="V2M-MPS2 (IoT)" vendor="ARM" revision="HPI-0263C" salesContact="sales.intl@keil.com" orderForm="http://www.keil.com/product/prices.asp">
      <description>ARM Versatile Express Cortex-M Prototyping System Board</description>
      <image small="Boards/ARM/V2M-MPS2/Documents/V2M-MPS2_revB_colour_thumb.png"
             large="Boards/ARM/V2M-MPS2/Documents/V2M-MPS2_revB_colour_medium.png"/>
      <book category="overview" name="http://www.arm.com/products/tools/development-boards/versatile-express/cortex-m-prototyping-system.php" title="Cortex-M Prototyping System (web page)"/>
      <book category="manual"   name="Boards/ARM/V2M-MPS2/Documents/DDI0479C_cortex_m_system_design_kit_r1p0_trm.pdf"                         title="Cortex-M System Design Kit Technical Reference Manual"/>
      <mountedDevice    deviceIndex="0" Dvendor="ARM:82" Dname="IOTKit_ARMv8MML"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="IOTKit_ARMv8MBL"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="IOTKit_CM23"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="IOTKit_CM33"/>
      <feature type="XTAL"      n="50000000"/>
      <feature type="PWR"       n="12"             name="12V DC power jack"/>
      <feature type="Batt"      n="1"              name="3V battery"/>
      <feature type="Button"    n="4"              name="Push-buttons: 2 FPGA User, Hardware RESET, ON/OFF soft RESET"/>
      <feature type="ContOther" n="8"              name="Switches: 8 MCC User switches"/>
      <feature type="USB"       n="1"              name="USB 2.0 configuration port"/>
      <feature type="RS232"     n="1"              name="General purpose UART Connector"/>
      <feature type="SPI"       n="1"              name="SPI Header"/>
      <feature type="Other"     n="1"              name="VGA Connector"/>
      <feature type="GLCD"      n="1"  m="240.320" name="2.4 inch QVGA Touchscreen Display"/>
      <feature type="LineIn"    n="1"              name="Stereo line audio IN"/>
      <feature type="LineOut"   n="1"              name="Stereo line audio OUT"/>
      <feature type="ETH"       n="1" m="10000000" name="RJ45 Ethernet Connector"/>
      <feature type="ConnOther" n="1"              name="ARM JTAG 20 Interface"/>
      <feature type="ConnOther" n="1"              name="Cortex Debug (20 Pin) Interface"/>
      <feature type="ConnOther" n="1"              name="Cortex Debug (10 Pin) Interface"/>
      <feature type="ConnOther" n="1"              name="MICTOR 38 Interface"/>

      <debugInterface adapter="JTAG/SW"   connector="20 pin JTAG (0.1 inch connector)"/>
      <debugInterface adapter="JTAG/SW"   connector="20 pin Cortex debug (0.05 inch connector)"/>
      <debugInterface adapter="JTAG/SW"   connector="10 pin Cortex debug (0.05 inch connector)"/>
    </board>
  </boards>

  <examples>
    <!-- V2M-MPS2 Board CMSDK_IOT ARMv8MBL Examples -->
    <!-- Image: AN519 -->
    <example name="IOT-Kit ARMv8MBL Secure/Non-Secure"     doc="Abstract.txt" folder="Boards/ARM/V2M-MPS2/IOTKit_ARMv8MBL/IOTKit_ARMv8MBL_S_NS">
      <description>IOT-Kit ARMv8MBL Secure/Non-Secure example</description>
      <board name="V2M-MPS2 (IoT)" vendor="ARM"/>
      <project>
        <environment name="uv" load="IOTKit_ARMv8MBL_s_ns.uvmpw"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>
    <example name="IOT-Kit ARMv8MBL Secure/Non-Secure GCC" doc="Abstract.txt" folder="Boards/ARM/V2M-MPS2/IOTKit_ARMv8MBL/IOTKit_ARMv8MBL_S_NS.GCC">
      <description>IOT-Kit ARMv8MBL Secure/Non-Secure example (tool chain GCC)</description>
      <board name="V2M-MPS2 (IoT)" vendor="ARM"/>
      <project>
        <environment name="uv" load="IOTKit_ARMv8MBL_s_ns.uvmpw"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>

    <!-- V2M-MPS2 Board CMSDK_IOT ARMv8MML Examples -->
    <!-- Image: AN505 -->
    <example name="IOT-Kit ARMv8MML Blinky"            doc="Abstract.txt" folder="Boards/ARM/V2M-MPS2/IOTKit_ARMv8MML/Blinky">
      <description>IOT-Kit ARMv8MML Blinky example</description>
      <board name="V2M-MPS2 (IoT)" vendor="ARM"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>
    <example name="IOT-Kit ARMv8MML Secure/Non-Secure" doc="Abstract.txt" folder="Boards/ARM/V2M-MPS2/IOTKit_ARMv8MML/IOTKit_ARMv8MML_S_NS">
      <description>IOT-Kit ARMv8MML Secure/Non-Secure example</description>
      <board name="V2M-MPS2 (IoT)" vendor="ARM"/>
      <project>
        <environment name="uv" load="IOTKit_ARMv8MML_s_ns.uvmpw"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>

    <!-- V2M-MPS2 Board CMSDK_IOT CM23 Examples -->
    <!-- Image: AN519 -->
    <example name="IOT-Kit CM23 Blinky"            doc="Abstract.txt" folder="Boards/ARM/V2M-MPS2/IOTKit_CM23/Blinky">
      <description>IOT-Kit CM23 Blinky example</description>
      <board name="V2M-MPS2 (IoT)" vendor="ARM"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>
    <example name="IOT-Kit CM23 Secure/Non-Secure" doc="Abstract.txt" folder="Boards/ARM/V2M-MPS2/IOTKit_CM23/IOTKit_CM23_S_NS">
      <description>IOT-Kit CM23 Secure/Non-Secure example</description>
      <board name="V2M-MPS2 (IoT)" vendor="ARM"/>
      <project>
        <environment name="uv" load="IOTKit_CM23_s_ns.uvmpw"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>

    <!-- V2M-MPS2 Board CMSDK_IOT CM33 Examples -->
    <!-- Image: AN505 -->
    <example name="IOT-Kit CM33 Blinky"            doc="Abstract.txt" folder="Boards/ARM/V2M-MPS2/IOTKit_CM33/Blinky">
      <description>IOT-Kit CM33 Blinky example</description>
      <board name="V2M-MPS2 (IoT)" vendor="ARM"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>
    <example name="IOT-Kit CM33 Secure/Non-Secure" doc="Abstract.txt" folder="Boards/ARM/V2M-MPS2/IOTKit_CM33/IOTKit_CM33_S_NS">
      <description>IOT-Kit CM33 Secure/Non-Secure example</description>
      <board name="V2M-MPS2 (IoT)" vendor="ARM"/>
      <project>
        <environment name="uv" load="IOTKit_CM33_s_ns.uvmpw"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>

  </examples>

</package>
